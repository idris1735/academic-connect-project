"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@daily-co";
exports.ids = ["vendor-chunks/@daily-co"];
exports.modules = {

/***/ "(ssr)/./node_modules/@daily-co/daily-js/dist/daily-esm.js":
/*!***********************************************************!*\
  !*** ./node_modules/@daily-co/daily-js/dist/daily-esm.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DAILY_ACCESS_LEVEL_FULL: () => (/* binding */ hi),\n/* harmony export */   DAILY_ACCESS_LEVEL_LOBBY: () => (/* binding */ fi),\n/* harmony export */   DAILY_ACCESS_LEVEL_NONE: () => (/* binding */ vi),\n/* harmony export */   DAILY_ACCESS_UNKNOWN: () => (/* binding */ pi),\n/* harmony export */   DAILY_CAMERA_ERROR_CAM_AND_MIC_IN_USE: () => (/* binding */ Ai),\n/* harmony export */   DAILY_CAMERA_ERROR_CAM_IN_USE: () => (/* binding */ Pi),\n/* harmony export */   DAILY_CAMERA_ERROR_CONSTRAINTS: () => (/* binding */ Ii),\n/* harmony export */   DAILY_CAMERA_ERROR_MIC_IN_USE: () => (/* binding */ Oi),\n/* harmony export */   DAILY_CAMERA_ERROR_NOT_FOUND: () => (/* binding */ Li),\n/* harmony export */   DAILY_CAMERA_ERROR_PERMISSIONS: () => (/* binding */ ji),\n/* harmony export */   DAILY_CAMERA_ERROR_UNDEF_MEDIADEVICES: () => (/* binding */ xi),\n/* harmony export */   DAILY_CAMERA_ERROR_UNKNOWN: () => (/* binding */ Di),\n/* harmony export */   DAILY_EVENT_ACCESS_STATE_UPDATED: () => (/* binding */ Yi),\n/* harmony export */   DAILY_EVENT_ACTIVE_SPEAKER_CHANGE: () => (/* binding */ Mo),\n/* harmony export */   DAILY_EVENT_ACTIVE_SPEAKER_MODE_CHANGE: () => (/* binding */ Co),\n/* harmony export */   DAILY_EVENT_APP_MSG: () => (/* binding */ mo),\n/* harmony export */   DAILY_EVENT_CAMERA_ERROR: () => (/* binding */ $i),\n/* harmony export */   DAILY_EVENT_CPU_LOAD_CHANGE: () => (/* binding */ Po),\n/* harmony export */   DAILY_EVENT_ERROR: () => (/* binding */ Uo),\n/* harmony export */   DAILY_EVENT_EXIT_FULLSCREEN: () => (/* binding */ jo),\n/* harmony export */   DAILY_EVENT_FACE_COUNTS_UPDATED: () => (/* binding */ Oo),\n/* harmony export */   DAILY_EVENT_FULLSCREEN: () => (/* binding */ Ao),\n/* harmony export */   DAILY_EVENT_IFRAME_LAUNCH_CONFIG: () => (/* binding */ Ri),\n/* harmony export */   DAILY_EVENT_IFRAME_READY_FOR_LAUNCH_CONFIG: () => (/* binding */ Ni),\n/* harmony export */   DAILY_EVENT_INPUT_SETTINGS_UPDATED: () => (/* binding */ Fo),\n/* harmony export */   DAILY_EVENT_JOINED_MEETING: () => (/* binding */ Wi),\n/* harmony export */   DAILY_EVENT_JOINING_MEETING: () => (/* binding */ qi),\n/* harmony export */   DAILY_EVENT_LANG_UPDATED: () => (/* binding */ No),\n/* harmony export */   DAILY_EVENT_LEFT_MEETING: () => (/* binding */ zi),\n/* harmony export */   DAILY_EVENT_LIVE_STREAMING_ERROR: () => (/* binding */ Do),\n/* harmony export */   DAILY_EVENT_LIVE_STREAMING_STARTED: () => (/* binding */ xo),\n/* harmony export */   DAILY_EVENT_LIVE_STREAMING_STOPPED: () => (/* binding */ Io),\n/* harmony export */   DAILY_EVENT_LIVE_STREAMING_UPDATED: () => (/* binding */ Lo),\n/* harmony export */   DAILY_EVENT_LOADED: () => (/* binding */ Vi),\n/* harmony export */   DAILY_EVENT_LOADING: () => (/* binding */ Bi),\n/* harmony export */   DAILY_EVENT_LOAD_ATTEMPT_FAILED: () => (/* binding */ Ui),\n/* harmony export */   DAILY_EVENT_LOCAL_SCREEN_SHARE_CANCELED: () => (/* binding */ ko),\n/* harmony export */   DAILY_EVENT_LOCAL_SCREEN_SHARE_STARTED: () => (/* binding */ wo),\n/* harmony export */   DAILY_EVENT_LOCAL_SCREEN_SHARE_STOPPED: () => (/* binding */ So),\n/* harmony export */   DAILY_EVENT_MEETING_SESSION_DATA_ERROR: () => (/* binding */ eo),\n/* harmony export */   DAILY_EVENT_MEETING_SESSION_STATE_UPDATED: () => (/* binding */ Zi),\n/* harmony export */   DAILY_EVENT_MEETING_SESSION_SUMMARY_UPDATED: () => (/* binding */ Xi),\n/* harmony export */   DAILY_EVENT_NETWORK_CONNECTION: () => (/* binding */ To),\n/* harmony export */   DAILY_EVENT_NETWORK_QUALITY_CHANGE: () => (/* binding */ Eo),\n/* harmony export */   DAILY_EVENT_NONFATAL_ERROR: () => (/* binding */ Bo),\n/* harmony export */   DAILY_EVENT_PARTICIPANT_COUNTS_UPDATED: () => (/* binding */ Ki),\n/* harmony export */   DAILY_EVENT_PARTICIPANT_JOINED: () => (/* binding */ Hi),\n/* harmony export */   DAILY_EVENT_PARTICIPANT_LEFT: () => (/* binding */ Qi),\n/* harmony export */   DAILY_EVENT_PARTICIPANT_UPDATED: () => (/* binding */ Gi),\n/* harmony export */   DAILY_EVENT_RECEIVE_SETTINGS_UPDATED: () => (/* binding */ Ro),\n/* harmony export */   DAILY_EVENT_RECORDING_DATA: () => (/* binding */ vo),\n/* harmony export */   DAILY_EVENT_RECORDING_ERROR: () => (/* binding */ ho),\n/* harmony export */   DAILY_EVENT_RECORDING_STARTED: () => (/* binding */ lo),\n/* harmony export */   DAILY_EVENT_RECORDING_STATS: () => (/* binding */ po),\n/* harmony export */   DAILY_EVENT_RECORDING_STOPPED: () => (/* binding */ uo),\n/* harmony export */   DAILY_EVENT_RECORDING_UPLOAD_COMPLETED: () => (/* binding */ fo),\n/* harmony export */   DAILY_EVENT_REMOTE_MEDIA_PLAYER_STARTED: () => (/* binding */ yo),\n/* harmony export */   DAILY_EVENT_REMOTE_MEDIA_PLAYER_STOPPED: () => (/* binding */ bo),\n/* harmony export */   DAILY_EVENT_REMOTE_MEDIA_PLAYER_UPDATED: () => (/* binding */ _o),\n/* harmony export */   DAILY_EVENT_STARTED_CAMERA: () => (/* binding */ Ji),\n/* harmony export */   DAILY_EVENT_THEME_UPDATED: () => (/* binding */ Fi),\n/* harmony export */   DAILY_EVENT_TRACK_STARTED: () => (/* binding */ io),\n/* harmony export */   DAILY_EVENT_TRACK_STOPPED: () => (/* binding */ oo),\n/* harmony export */   DAILY_EVENT_TRANSCRIPTION_ERROR: () => (/* binding */ co),\n/* harmony export */   DAILY_EVENT_TRANSCRIPTION_MSG: () => (/* binding */ go),\n/* harmony export */   DAILY_EVENT_TRANSCRIPTION_STARTED: () => (/* binding */ ao),\n/* harmony export */   DAILY_EVENT_TRANSCRIPTION_STOPPED: () => (/* binding */ so),\n/* harmony export */   DAILY_EVENT_WAITING_PARTICIPANT_ADDED: () => (/* binding */ to),\n/* harmony export */   DAILY_EVENT_WAITING_PARTICIPANT_REMOVED: () => (/* binding */ ro),\n/* harmony export */   DAILY_EVENT_WAITING_PARTICIPANT_UPDATED: () => (/* binding */ no),\n/* harmony export */   DAILY_FATAL_ERROR_CONNECTION: () => (/* binding */ Ti),\n/* harmony export */   DAILY_FATAL_ERROR_EJECTED: () => (/* binding */ yi),\n/* harmony export */   DAILY_FATAL_ERROR_EOL: () => (/* binding */ Ci),\n/* harmony export */   DAILY_FATAL_ERROR_EXP_ROOM: () => (/* binding */ wi),\n/* harmony export */   DAILY_FATAL_ERROR_EXP_TOKEN: () => (/* binding */ Si),\n/* harmony export */   DAILY_FATAL_ERROR_MEETING_FULL: () => (/* binding */ Mi),\n/* harmony export */   DAILY_FATAL_ERROR_NBF_ROOM: () => (/* binding */ _i),\n/* harmony export */   DAILY_FATAL_ERROR_NBF_TOKEN: () => (/* binding */ bi),\n/* harmony export */   DAILY_FATAL_ERROR_NOT_ALLOWED: () => (/* binding */ Ei),\n/* harmony export */   DAILY_FATAL_ERROR_NO_ROOM: () => (/* binding */ ki),\n/* harmony export */   DAILY_RECEIVE_SETTINGS_ALL_PARTICIPANTS_KEY: () => (/* binding */ gi),\n/* harmony export */   DAILY_RECEIVE_SETTINGS_BASE_KEY: () => (/* binding */ mi),\n/* harmony export */   DAILY_STATE_ERROR: () => (/* binding */ oi),\n/* harmony export */   DAILY_STATE_JOINED: () => (/* binding */ ri),\n/* harmony export */   DAILY_STATE_JOINING: () => (/* binding */ ni),\n/* harmony export */   DAILY_STATE_LEFT: () => (/* binding */ ii),\n/* harmony export */   DAILY_STATE_NEW: () => (/* binding */ Zr),\n/* harmony export */   DAILY_TRACK_STATE_BLOCKED: () => (/* binding */ ai),\n/* harmony export */   DAILY_TRACK_STATE_INTERRUPTED: () => (/* binding */ ui),\n/* harmony export */   DAILY_TRACK_STATE_LOADING: () => (/* binding */ li),\n/* harmony export */   DAILY_TRACK_STATE_OFF: () => (/* binding */ si),\n/* harmony export */   DAILY_TRACK_STATE_PLAYABLE: () => (/* binding */ di),\n/* harmony export */   DAILY_TRACK_STATE_SENDABLE: () => (/* binding */ ci),\n/* harmony export */   \"default\": () => (/* binding */ js)\n/* harmony export */ });\nfunction e(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}function t(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function n(e){return n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n(e)}function r(e){var t=function(e,t){if(\"object\"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var i=r.call(e,t||\"default\");if(\"object\"!==n(i))return i;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===n(t)?t:String(t)}function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,r(i.key),i)}}function o(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),Object.defineProperty(e,\"prototype\",{writable:!1}),e}function a(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function s(e,t){return s=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},s(e,t)}function c(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&s(e,t)}function l(e,t){if(t&&(\"object\"===n(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return a(e)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}function d(e,t,n){return(t=r(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t,n,r,i,o,a){try{var s=e[o](a),c=s.value}catch(e){return void n(e)}s.done?t(c):Promise.resolve(c).then(r,i)}function h(e){return function(){var t=this,n=arguments;return new Promise((function(r,i){var o=e.apply(t,n);function a(e){p(o,r,i,a,s,\"next\",e)}function s(e){p(o,r,i,a,s,\"throw\",e)}a(void 0)}))}}function f(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function v(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,i,o,a,s=[],c=!0,l=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);c=!0);}catch(e){l=!0,i=e}finally{try{if(!c&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw i}}return s}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return f(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?f(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}var m,g={},y={get exports(){return g},set exports(e){g=e}},_=\"object\"==typeof Reflect?Reflect:null,b=_&&\"function\"==typeof _.apply?_.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};m=_&&\"function\"==typeof _.ownKeys?_.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var w=Number.isNaN||function(e){return e!=e};function S(){S.init.call(this)}y.exports=S,g.once=function(e,t){return new Promise((function(n,r){function i(n){e.removeListener(t,o),r(n)}function o(){\"function\"==typeof e.removeListener&&e.removeListener(\"error\",i),n([].slice.call(arguments))}x(e,t,o,{once:!0}),\"error\"!==t&&function(e,t,n){\"function\"==typeof e.on&&x(e,\"error\",t,n)}(e,i,{once:!0})}))},S.EventEmitter=S,S.prototype._events=void 0,S.prototype._eventsCount=0,S.prototype._maxListeners=void 0;var k=10;function M(e){if(\"function\"!=typeof e)throw new TypeError('The \"listener\" argument must be of type Function. Received type '+typeof e)}function C(e){return void 0===e._maxListeners?S.defaultMaxListeners:e._maxListeners}function E(e,t,n,r){var i,o,a,s;if(M(n),void 0===(o=e._events)?(o=e._events=Object.create(null),e._eventsCount=0):(void 0!==o.newListener&&(e.emit(\"newListener\",t,n.listener?n.listener:n),o=e._events),a=o[t]),void 0===a)a=o[t]=n,++e._eventsCount;else if(\"function\"==typeof a?a=o[t]=r?[n,a]:[a,n]:r?a.unshift(n):a.push(n),(i=C(e))>0&&a.length>i&&!a.warned){a.warned=!0;var c=new Error(\"Possible EventEmitter memory leak detected. \"+a.length+\" \"+String(t)+\" listeners added. Use emitter.setMaxListeners() to increase limit\");c.name=\"MaxListenersExceededWarning\",c.emitter=e,c.type=t,c.count=a.length,s=c,console&&console.warn&&console.warn(s)}return e}function T(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function P(e,t,n){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},i=T.bind(r);return i.listener=n,r.wrapFn=i,i}function O(e,t,n){var r=e._events;if(void 0===r)return[];var i=r[t];return void 0===i?[]:\"function\"==typeof i?n?[i.listener||i]:[i]:n?function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(i):j(i,i.length)}function A(e){var t=this._events;if(void 0!==t){var n=t[e];if(\"function\"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function j(e,t){for(var n=new Array(t),r=0;r<t;++r)n[r]=e[r];return n}function x(e,t,n,r){if(\"function\"==typeof e.on)r.once?e.once(t,n):e.on(t,n);else{if(\"function\"!=typeof e.addEventListener)throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,(function i(o){r.once&&e.removeEventListener(t,i),n(o)}))}}Object.defineProperty(S,\"defaultMaxListeners\",{enumerable:!0,get:function(){return k},set:function(e){if(\"number\"!=typeof e||e<0||w(e))throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received '+e+\".\");k=e}}),S.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},S.prototype.setMaxListeners=function(e){if(\"number\"!=typeof e||e<0||w(e))throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received '+e+\".\");return this._maxListeners=e,this},S.prototype.getMaxListeners=function(){return C(this)},S.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var r=\"error\"===e,i=this._events;if(void 0!==i)r=r&&void 0===i.error;else if(!r)return!1;if(r){var o;if(t.length>0&&(o=t[0]),o instanceof Error)throw o;var a=new Error(\"Unhandled error.\"+(o?\" (\"+o.message+\")\":\"\"));throw a.context=o,a}var s=i[e];if(void 0===s)return!1;if(\"function\"==typeof s)b(s,this,t);else{var c=s.length,l=j(s,c);for(n=0;n<c;++n)b(l[n],this,t)}return!0},S.prototype.addListener=function(e,t){return E(this,e,t,!1)},S.prototype.on=S.prototype.addListener,S.prototype.prependListener=function(e,t){return E(this,e,t,!0)},S.prototype.once=function(e,t){return M(t),this.on(e,P(this,e,t)),this},S.prototype.prependOnceListener=function(e,t){return M(t),this.prependListener(e,P(this,e,t)),this},S.prototype.removeListener=function(e,t){var n,r,i,o,a;if(M(t),void 0===(r=this._events))return this;if(void 0===(n=r[e]))return this;if(n===t||n.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit(\"removeListener\",e,n.listener||t));else if(\"function\"!=typeof n){for(i=-1,o=n.length-1;o>=0;o--)if(n[o]===t||n[o].listener===t){a=n[o].listener,i=o;break}if(i<0)return this;0===i?n.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(n,i),1===n.length&&(r[e]=n[0]),void 0!==r.removeListener&&this.emit(\"removeListener\",e,a||t)}return this},S.prototype.off=S.prototype.removeListener,S.prototype.removeAllListeners=function(e){var t,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var i,o=Object.keys(n);for(r=0;r<o.length;++r)\"removeListener\"!==(i=o[r])&&this.removeAllListeners(i);return this.removeAllListeners(\"removeListener\"),this._events=Object.create(null),this._eventsCount=0,this}if(\"function\"==typeof(t=n[e]))this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this},S.prototype.listeners=function(e){return O(this,e,!0)},S.prototype.rawListeners=function(e){return O(this,e,!1)},S.listenerCount=function(e,t){return\"function\"==typeof e.listenerCount?e.listenerCount(t):A.call(e,t)},S.prototype.listenerCount=A,S.prototype.eventNames=function(){return this._eventsCount>0?m(this._events):[]};var L=Object.prototype.hasOwnProperty;function I(e,t,n){for(n of e.keys())if(D(n,t))return n}function D(e,t){var n,r,i;if(e===t)return!0;if(e&&t&&(n=e.constructor)===t.constructor){if(n===Date)return e.getTime()===t.getTime();if(n===RegExp)return e.toString()===t.toString();if(n===Array){if((r=e.length)===t.length)for(;r--&&D(e[r],t[r]););return-1===r}if(n===Set){if(e.size!==t.size)return!1;for(r of e){if((i=r)&&\"object\"==typeof i&&!(i=I(t,i)))return!1;if(!t.has(i))return!1}return!0}if(n===Map){if(e.size!==t.size)return!1;for(r of e){if((i=r[0])&&\"object\"==typeof i&&!(i=I(t,i)))return!1;if(!D(r[1],t.get(i)))return!1}return!0}if(n===ArrayBuffer)e=new Uint8Array(e),t=new Uint8Array(t);else if(n===DataView){if((r=e.byteLength)===t.byteLength)for(;r--&&e.getInt8(r)===t.getInt8(r););return-1===r}if(ArrayBuffer.isView(e)){if((r=e.byteLength)===t.byteLength)for(;r--&&e[r]===t[r];);return-1===r}if(!n||\"object\"==typeof e){for(n in r=0,e){if(L.call(e,n)&&++r&&!L.call(t,n))return!1;if(!(n in t)||!D(e[n],t[n]))return!1}return Object.keys(t).length===r}}return e!=e&&t!=t}const N={\"Amazon Silk\":\"amazon_silk\",\"Android Browser\":\"android\",Bada:\"bada\",BlackBerry:\"blackberry\",Chrome:\"chrome\",Chromium:\"chromium\",Electron:\"electron\",Epiphany:\"epiphany\",Firefox:\"firefox\",Focus:\"focus\",Generic:\"generic\",\"Google Search\":\"google_search\",Googlebot:\"googlebot\",\"Internet Explorer\":\"ie\",\"K-Meleon\":\"k_meleon\",Maxthon:\"maxthon\",\"Microsoft Edge\":\"edge\",\"MZ Browser\":\"mz\",\"NAVER Whale Browser\":\"naver\",Opera:\"opera\",\"Opera Coast\":\"opera_coast\",PhantomJS:\"phantomjs\",Puffin:\"puffin\",QupZilla:\"qupzilla\",QQ:\"qq\",QQLite:\"qqlite\",Safari:\"safari\",Sailfish:\"sailfish\",\"Samsung Internet for Android\":\"samsung_internet\",SeaMonkey:\"seamonkey\",Sleipnir:\"sleipnir\",Swing:\"swing\",Tizen:\"tizen\",\"UC Browser\":\"uc\",Vivaldi:\"vivaldi\",\"WebOS Browser\":\"webos\",WeChat:\"wechat\",\"Yandex Browser\":\"yandex\",Roku:\"roku\"},R={amazon_silk:\"Amazon Silk\",android:\"Android Browser\",bada:\"Bada\",blackberry:\"BlackBerry\",chrome:\"Chrome\",chromium:\"Chromium\",electron:\"Electron\",epiphany:\"Epiphany\",firefox:\"Firefox\",focus:\"Focus\",generic:\"Generic\",googlebot:\"Googlebot\",google_search:\"Google Search\",ie:\"Internet Explorer\",k_meleon:\"K-Meleon\",maxthon:\"Maxthon\",edge:\"Microsoft Edge\",mz:\"MZ Browser\",naver:\"NAVER Whale Browser\",opera:\"Opera\",opera_coast:\"Opera Coast\",phantomjs:\"PhantomJS\",puffin:\"Puffin\",qupzilla:\"QupZilla\",qq:\"QQ Browser\",qqlite:\"QQ Browser Lite\",safari:\"Safari\",sailfish:\"Sailfish\",samsung_internet:\"Samsung Internet for Android\",seamonkey:\"SeaMonkey\",sleipnir:\"Sleipnir\",swing:\"Swing\",tizen:\"Tizen\",uc:\"UC Browser\",vivaldi:\"Vivaldi\",webos:\"WebOS Browser\",wechat:\"WeChat\",yandex:\"Yandex Browser\"},F={tablet:\"tablet\",mobile:\"mobile\",desktop:\"desktop\",tv:\"tv\"},B={WindowsPhone:\"Windows Phone\",Windows:\"Windows\",MacOS:\"macOS\",iOS:\"iOS\",Android:\"Android\",WebOS:\"WebOS\",BlackBerry:\"BlackBerry\",Bada:\"Bada\",Tizen:\"Tizen\",Linux:\"Linux\",ChromeOS:\"Chrome OS\",PlayStation4:\"PlayStation 4\",Roku:\"Roku\"},U={EdgeHTML:\"EdgeHTML\",Blink:\"Blink\",Trident:\"Trident\",Presto:\"Presto\",Gecko:\"Gecko\",WebKit:\"WebKit\"};class V{static getFirstMatch(e,t){const n=t.match(e);return n&&n.length>0&&n[1]||\"\"}static getSecondMatch(e,t){const n=t.match(e);return n&&n.length>1&&n[2]||\"\"}static matchAndReturnConst(e,t,n){if(e.test(t))return n}static getWindowsVersionName(e){switch(e){case\"NT\":return\"NT\";case\"XP\":case\"NT 5.1\":return\"XP\";case\"NT 5.0\":return\"2000\";case\"NT 5.2\":return\"2003\";case\"NT 6.0\":return\"Vista\";case\"NT 6.1\":return\"7\";case\"NT 6.2\":return\"8\";case\"NT 6.3\":return\"8.1\";case\"NT 10.0\":return\"10\";default:return}}static getMacOSVersionName(e){const t=e.split(\".\").splice(0,2).map((e=>parseInt(e,10)||0));if(t.push(0),10===t[0])switch(t[1]){case 5:return\"Leopard\";case 6:return\"Snow Leopard\";case 7:return\"Lion\";case 8:return\"Mountain Lion\";case 9:return\"Mavericks\";case 10:return\"Yosemite\";case 11:return\"El Capitan\";case 12:return\"Sierra\";case 13:return\"High Sierra\";case 14:return\"Mojave\";case 15:return\"Catalina\";default:return}}static getAndroidVersionName(e){const t=e.split(\".\").splice(0,2).map((e=>parseInt(e,10)||0));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?\"Cupcake\":1===t[0]&&t[1]>=6?\"Donut\":2===t[0]&&t[1]<2?\"Eclair\":2===t[0]&&2===t[1]?\"Froyo\":2===t[0]&&t[1]>2?\"Gingerbread\":3===t[0]?\"Honeycomb\":4===t[0]&&t[1]<1?\"Ice Cream Sandwich\":4===t[0]&&t[1]<4?\"Jelly Bean\":4===t[0]&&t[1]>=4?\"KitKat\":5===t[0]?\"Lollipop\":6===t[0]?\"Marshmallow\":7===t[0]?\"Nougat\":8===t[0]?\"Oreo\":9===t[0]?\"Pie\":void 0}static getVersionPrecision(e){return e.split(\".\").length}static compareVersions(e,t,n=!1){const r=V.getVersionPrecision(e),i=V.getVersionPrecision(t);let o=Math.max(r,i),a=0;const s=V.map([e,t],(e=>{const t=o-V.getVersionPrecision(e),n=e+new Array(t+1).join(\".0\");return V.map(n.split(\".\"),(e=>new Array(20-e.length).join(\"0\")+e)).reverse()}));for(n&&(a=o-Math.min(r,i)),o-=1;o>=a;){if(s[0][o]>s[1][o])return 1;if(s[0][o]===s[1][o]){if(o===a)return 0;o-=1}else if(s[0][o]<s[1][o])return-1}}static map(e,t){const n=[];let r;if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)n.push(t(e[r]));return n}static find(e,t){let n,r;if(Array.prototype.find)return Array.prototype.find.call(e,t);for(n=0,r=e.length;n<r;n+=1){const r=e[n];if(t(r,n))return r}}static assign(e,...t){const n=e;let r,i;if(Object.assign)return Object.assign(e,...t);for(r=0,i=t.length;r<i;r+=1){const e=t[r];if(\"object\"==typeof e&&null!==e){Object.keys(e).forEach((t=>{n[t]=e[t]}))}}return e}static getBrowserAlias(e){return N[e]}static getBrowserTypeByAlias(e){return R[e]||\"\"}}const J=/version\\/(\\d+(\\.?_?\\d+)+)/i,$=[{test:[/googlebot/i],describe(e){const t={name:\"Googlebot\"},n=V.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i,e)||V.getFirstMatch(J,e);return n&&(t.version=n),t}},{test:[/opera/i],describe(e){const t={name:\"Opera\"},n=V.getFirstMatch(J,e)||V.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/opr\\/|opios/i],describe(e){const t={name:\"Opera\"},n=V.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i,e)||V.getFirstMatch(J,e);return n&&(t.version=n),t}},{test:[/SamsungBrowser/i],describe(e){const t={name:\"Samsung Internet for Android\"},n=V.getFirstMatch(J,e)||V.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/Whale/i],describe(e){const t={name:\"NAVER Whale Browser\"},n=V.getFirstMatch(J,e)||V.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/MZBrowser/i],describe(e){const t={name:\"MZ Browser\"},n=V.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||V.getFirstMatch(J,e);return n&&(t.version=n),t}},{test:[/focus/i],describe(e){const t={name:\"Focus\"},n=V.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||V.getFirstMatch(J,e);return n&&(t.version=n),t}},{test:[/swing/i],describe(e){const t={name:\"Swing\"},n=V.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||V.getFirstMatch(J,e);return n&&(t.version=n),t}},{test:[/coast/i],describe(e){const t={name:\"Opera Coast\"},n=V.getFirstMatch(J,e)||V.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/opt\\/\\d+(?:.?_?\\d+)+/i],describe(e){const t={name:\"Opera Touch\"},n=V.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||V.getFirstMatch(J,e);return n&&(t.version=n),t}},{test:[/yabrowser/i],describe(e){const t={name:\"Yandex Browser\"},n=V.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||V.getFirstMatch(J,e);return n&&(t.version=n),t}},{test:[/ucbrowser/i],describe(e){const t={name:\"UC Browser\"},n=V.getFirstMatch(J,e)||V.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/Maxthon|mxios/i],describe(e){const t={name:\"Maxthon\"},n=V.getFirstMatch(J,e)||V.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/epiphany/i],describe(e){const t={name:\"Epiphany\"},n=V.getFirstMatch(J,e)||V.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/puffin/i],describe(e){const t={name:\"Puffin\"},n=V.getFirstMatch(J,e)||V.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/sleipnir/i],describe(e){const t={name:\"Sleipnir\"},n=V.getFirstMatch(J,e)||V.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/k-meleon/i],describe(e){const t={name:\"K-Meleon\"},n=V.getFirstMatch(J,e)||V.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/micromessenger/i],describe(e){const t={name:\"WeChat\"},n=V.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||V.getFirstMatch(J,e);return n&&(t.version=n),t}},{test:[/qqbrowser/i],describe(e){const t={name:/qqbrowserlite/i.test(e)?\"QQ Browser Lite\":\"QQ Browser\"},n=V.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i,e)||V.getFirstMatch(J,e);return n&&(t.version=n),t}},{test:[/msie|trident/i],describe(e){const t={name:\"Internet Explorer\"},n=V.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/\\sedg\\//i],describe(e){const t={name:\"Microsoft Edge\"},n=V.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/edg([ea]|ios)/i],describe(e){const t={name:\"Microsoft Edge\"},n=V.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/vivaldi/i],describe(e){const t={name:\"Vivaldi\"},n=V.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/seamonkey/i],describe(e){const t={name:\"SeaMonkey\"},n=V.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/sailfish/i],describe(e){const t={name:\"Sailfish\"},n=V.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i,e);return n&&(t.version=n),t}},{test:[/silk/i],describe(e){const t={name:\"Amazon Silk\"},n=V.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/phantom/i],describe(e){const t={name:\"PhantomJS\"},n=V.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/slimerjs/i],describe(e){const t={name:\"SlimerJS\"},n=V.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe(e){const t={name:\"BlackBerry\"},n=V.getFirstMatch(J,e)||V.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/(web|hpw)[o0]s/i],describe(e){const t={name:\"WebOS Browser\"},n=V.getFirstMatch(J,e)||V.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/bada/i],describe(e){const t={name:\"Bada\"},n=V.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/tizen/i],describe(e){const t={name:\"Tizen\"},n=V.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i,e)||V.getFirstMatch(J,e);return n&&(t.version=n),t}},{test:[/qupzilla/i],describe(e){const t={name:\"QupZilla\"},n=V.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||V.getFirstMatch(J,e);return n&&(t.version=n),t}},{test:[/firefox|iceweasel|fxios/i],describe(e){const t={name:\"Firefox\"},n=V.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/electron/i],describe(e){const t={name:\"Electron\"},n=V.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/MiuiBrowser/i],describe(e){const t={name:\"Miui\"},n=V.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/chromium/i],describe(e){const t={name:\"Chromium\"},n=V.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||V.getFirstMatch(J,e);return n&&(t.version=n),t}},{test:[/chrome|crios|crmo/i],describe(e){const t={name:\"Chrome\"},n=V.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/GSA/i],describe(e){const t={name:\"Google Search\"},n=V.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test(e){const t=!e.test(/like android/i),n=e.test(/android/i);return t&&n},describe(e){const t={name:\"Android Browser\"},n=V.getFirstMatch(J,e);return n&&(t.version=n),t}},{test:[/playstation 4/i],describe(e){const t={name:\"PlayStation 4\"},n=V.getFirstMatch(J,e);return n&&(t.version=n),t}},{test:[/safari|applewebkit/i],describe(e){const t={name:\"Safari\"},n=V.getFirstMatch(J,e);return n&&(t.version=n),t}},{test:[/.*/i],describe(e){const t=-1!==e.search(\"\\\\(\")?/^(.*)\\/(.*)[ \\t]\\((.*)/:/^(.*)\\/(.*) /;return{name:V.getFirstMatch(t,e),version:V.getSecondMatch(t,e)}}}];var q=[{test:[/Roku\\/DVP/],describe(e){const t=V.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i,e);return{name:B.Roku,version:t}}},{test:[/windows phone/i],describe(e){const t=V.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i,e);return{name:B.WindowsPhone,version:t}}},{test:[/windows /i],describe(e){const t=V.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i,e),n=V.getWindowsVersionName(t);return{name:B.Windows,version:t,versionName:n}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe(e){const t={name:B.iOS},n=V.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/,e);return n&&(t.version=n),t}},{test:[/macintosh/i],describe(e){const t=V.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i,e).replace(/[_\\s]/g,\".\"),n=V.getMacOSVersionName(t),r={name:B.MacOS,version:t};return n&&(r.versionName=n),r}},{test:[/(ipod|iphone|ipad)/i],describe(e){const t=V.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i,e).replace(/[_\\s]/g,\".\");return{name:B.iOS,version:t}}},{test(e){const t=!e.test(/like android/i),n=e.test(/android/i);return t&&n},describe(e){const t=V.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i,e),n=V.getAndroidVersionName(t),r={name:B.Android,version:t};return n&&(r.versionName=n),r}},{test:[/(web|hpw)[o0]s/i],describe(e){const t=V.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i,e),n={name:B.WebOS};return t&&t.length&&(n.version=t),n}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe(e){const t=V.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i,e)||V.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i,e)||V.getFirstMatch(/\\bbb(\\d+)/i,e);return{name:B.BlackBerry,version:t}}},{test:[/bada/i],describe(e){const t=V.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i,e);return{name:B.Bada,version:t}}},{test:[/tizen/i],describe(e){const t=V.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:B.Tizen,version:t}}},{test:[/linux/i],describe:()=>({name:B.Linux})},{test:[/CrOS/],describe:()=>({name:B.ChromeOS})},{test:[/PlayStation 4/],describe(e){const t=V.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:B.PlayStation4,version:t}}}],W=[{test:[/googlebot/i],describe:()=>({type:\"bot\",vendor:\"Google\"})},{test:[/huawei/i],describe(e){const t=V.getFirstMatch(/(can-l01)/i,e)&&\"Nova\",n={type:F.mobile,vendor:\"Huawei\"};return t&&(n.model=t),n}},{test:[/nexus\\s*(?:7|8|9|10).*/i],describe:()=>({type:F.tablet,vendor:\"Nexus\"})},{test:[/ipad/i],describe:()=>({type:F.tablet,vendor:\"Apple\",model:\"iPad\"})},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:()=>({type:F.tablet,vendor:\"Apple\",model:\"iPad\"})},{test:[/kftt build/i],describe:()=>({type:F.tablet,vendor:\"Amazon\",model:\"Kindle Fire HD 7\"})},{test:[/silk/i],describe:()=>({type:F.tablet,vendor:\"Amazon\"})},{test:[/tablet(?! pc)/i],describe:()=>({type:F.tablet})},{test(e){const t=e.test(/ipod|iphone/i),n=e.test(/like (ipod|iphone)/i);return t&&!n},describe(e){const t=V.getFirstMatch(/(ipod|iphone)/i,e);return{type:F.mobile,vendor:\"Apple\",model:t}}},{test:[/nexus\\s*[0-6].*/i,/galaxy nexus/i],describe:()=>({type:F.mobile,vendor:\"Nexus\"})},{test:[/[^-]mobi/i],describe:()=>({type:F.mobile})},{test:e=>\"blackberry\"===e.getBrowserName(!0),describe:()=>({type:F.mobile,vendor:\"BlackBerry\"})},{test:e=>\"bada\"===e.getBrowserName(!0),describe:()=>({type:F.mobile})},{test:e=>\"windows phone\"===e.getBrowserName(),describe:()=>({type:F.mobile,vendor:\"Microsoft\"})},{test(e){const t=Number(String(e.getOSVersion()).split(\".\")[0]);return\"android\"===e.getOSName(!0)&&t>=3},describe:()=>({type:F.tablet})},{test:e=>\"android\"===e.getOSName(!0),describe:()=>({type:F.mobile})},{test:e=>\"macos\"===e.getOSName(!0),describe:()=>({type:F.desktop,vendor:\"Apple\"})},{test:e=>\"windows\"===e.getOSName(!0),describe:()=>({type:F.desktop})},{test:e=>\"linux\"===e.getOSName(!0),describe:()=>({type:F.desktop})},{test:e=>\"playstation 4\"===e.getOSName(!0),describe:()=>({type:F.tv})},{test:e=>\"roku\"===e.getOSName(!0),describe:()=>({type:F.tv})}],z=[{test:e=>\"microsoft edge\"===e.getBrowserName(!0),describe(e){if(/\\sedg\\//i.test(e))return{name:U.Blink};const t=V.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i,e);return{name:U.EdgeHTML,version:t}}},{test:[/trident/i],describe(e){const t={name:U.Trident},n=V.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:e=>e.test(/presto/i),describe(e){const t={name:U.Presto},n=V.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test(e){const t=e.test(/gecko/i),n=e.test(/like gecko/i);return t&&!n},describe(e){const t={name:U.Gecko},n=V.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}},{test:[/(apple)?webkit\\/537\\.36/i],describe:()=>({name:U.Blink})},{test:[/(apple)?webkit/i],describe(e){const t={name:U.WebKit},n=V.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i,e);return n&&(t.version=n),t}}];class H{constructor(e,t=!1){if(null==e||\"\"===e)throw new Error(\"UserAgent parameter can't be empty\");this._ua=e,this.parsedResult={},!0!==t&&this.parse()}getUA(){return this._ua}test(e){return e.test(this._ua)}parseBrowser(){this.parsedResult.browser={};const e=V.find($,(e=>{if(\"function\"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error(\"Browser's test function is not valid\")}));return e&&(this.parsedResult.browser=e.describe(this.getUA())),this.parsedResult.browser}getBrowser(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()}getBrowserName(e){return e?String(this.getBrowser().name).toLowerCase()||\"\":this.getBrowser().name||\"\"}getBrowserVersion(){return this.getBrowser().version}getOS(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()}parseOS(){this.parsedResult.os={};const e=V.find(q,(e=>{if(\"function\"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error(\"Browser's test function is not valid\")}));return e&&(this.parsedResult.os=e.describe(this.getUA())),this.parsedResult.os}getOSName(e){const{name:t}=this.getOS();return e?String(t).toLowerCase()||\"\":t||\"\"}getOSVersion(){return this.getOS().version}getPlatform(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()}getPlatformType(e=!1){const{type:t}=this.getPlatform();return e?String(t).toLowerCase()||\"\":t||\"\"}parsePlatform(){this.parsedResult.platform={};const e=V.find(W,(e=>{if(\"function\"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error(\"Browser's test function is not valid\")}));return e&&(this.parsedResult.platform=e.describe(this.getUA())),this.parsedResult.platform}getEngine(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()}getEngineName(e){return e?String(this.getEngine().name).toLowerCase()||\"\":this.getEngine().name||\"\"}parseEngine(){this.parsedResult.engine={};const e=V.find(z,(e=>{if(\"function\"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error(\"Browser's test function is not valid\")}));return e&&(this.parsedResult.engine=e.describe(this.getUA())),this.parsedResult.engine}parse(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this}getResult(){return V.assign({},this.parsedResult)}satisfies(e){const t={};let n=0;const r={};let i=0;if(Object.keys(e).forEach((o=>{const a=e[o];\"string\"==typeof a?(r[o]=a,i+=1):\"object\"==typeof a&&(t[o]=a,n+=1)})),n>0){const e=Object.keys(t),n=V.find(e,(e=>this.isOS(e)));if(n){const e=this.satisfies(t[n]);if(void 0!==e)return e}const r=V.find(e,(e=>this.isPlatform(e)));if(r){const e=this.satisfies(t[r]);if(void 0!==e)return e}}if(i>0){const e=Object.keys(r),t=V.find(e,(e=>this.isBrowser(e,!0)));if(void 0!==t)return this.compareVersion(r[t])}}isBrowser(e,t=!1){const n=this.getBrowserName().toLowerCase();let r=e.toLowerCase();const i=V.getBrowserTypeByAlias(r);return t&&i&&(r=i.toLowerCase()),r===n}compareVersion(e){let t=[0],n=e,r=!1;const i=this.getBrowserVersion();if(\"string\"==typeof i)return\">\"===e[0]||\"<\"===e[0]?(n=e.substr(1),\"=\"===e[1]?(r=!0,n=e.substr(2)):t=[],\">\"===e[0]?t.push(1):t.push(-1)):\"=\"===e[0]?n=e.substr(1):\"~\"===e[0]&&(r=!0,n=e.substr(1)),t.indexOf(V.compareVersions(i,n,r))>-1}isOS(e){return this.getOSName(!0)===String(e).toLowerCase()}isPlatform(e){return this.getPlatformType(!0)===String(e).toLowerCase()}isEngine(e){return this.getEngineName(!0)===String(e).toLowerCase()}is(e,t=!1){return this.isBrowser(e,t)||this.isOS(e)||this.isPlatform(e)}some(e=[]){return e.some((e=>this.is(e)))}}\n/*!\n * Bowser - a browser detector\n * https://github.com/lancedikson/bowser\n * MIT License | (c) Dustin Diaz 2012-2015\n * MIT License | (c) Denis Demchenko 2015-2019\n */class G{static getParser(e,t=!1){if(\"string\"!=typeof e)throw new Error(\"UserAgent should be a string\");return new H(e,t)}static parse(e){return new H(e).getResult()}static get BROWSER_MAP(){return R}static get ENGINE_MAP(){return U}static get OS_MAP(){return B}static get PLATFORMS_MAP(){return F}}function Q(){return Date.now()+Math.random().toString()}function K(){throw new Error(\"Method must be implemented in subclass\")}function Y(e,t){return null!=t&&t.proxyUrl?t.proxyUrl+(\"/\"===t.proxyUrl.slice(-1)?\"\":\"/\")+e.substring(8):e}function X(e){return null!=e&&e.callObjectBundleUrlOverride?e.callObjectBundleUrlOverride:Y(\"https://c.daily.co/call-machine/versioned/\".concat(\"0.74.0\",\"/static/call-machine-object-bundle.js\"),e)}function Z(e){try{new URL(e)}catch(e){return!1}return!0}const ee=Object.prototype.toString;function te(e){switch(ee.call(e)){case\"[object Error]\":case\"[object Exception]\":case\"[object DOMException]\":return!0;default:return de(e,Error)}}function ne(e,t){return ee.call(e)===`[object ${t}]`}function re(e){return ne(e,\"ErrorEvent\")}function ie(e){return ne(e,\"DOMError\")}function oe(e){return ne(e,\"String\")}function ae(e){return\"object\"==typeof e&&null!==e&&\"__sentry_template_string__\"in e&&\"__sentry_template_values__\"in e}function se(e){return null===e||ae(e)||\"object\"!=typeof e&&\"function\"!=typeof e}function ce(e){return ne(e,\"Object\")}function le(e){return\"undefined\"!=typeof Event&&de(e,Event)}function ue(e){return Boolean(e&&e.then&&\"function\"==typeof e.then)}function de(e,t){try{return e instanceof t}catch(e){return!1}}function pe(e){return!(\"object\"!=typeof e||null===e||!e.__isVue&&!e._isVue)}function he(e,t=0){return\"string\"!=typeof e||0===t||e.length<=t?e:`${e.slice(0,t)}...`}function fe(e,t){if(!Array.isArray(e))return\"\";const n=[];for(let t=0;t<e.length;t++){const r=e[t];try{pe(r)?n.push(\"[VueViewModel]\"):n.push(String(r))}catch(e){n.push(\"[value cannot be serialized]\")}}return n.join(t)}function ve(e,t,n=!1){return!!oe(e)&&(ne(t,\"RegExp\")?t.test(e):!!oe(t)&&(n?e===t:e.includes(t)))}function me(e,t=[],n=!1){return t.some((t=>ve(e,t,n)))}function ge(e,t,n=250,r,i,o,a){if(!(o.exception&&o.exception.values&&a&&de(a.originalException,Error)))return;const s=o.exception.values.length>0?o.exception.values[o.exception.values.length-1]:void 0;var c,l;s&&(o.exception.values=(c=ye(e,t,i,a.originalException,r,o.exception.values,s,0),l=n,c.map((e=>(e.value&&(e.value=he(e.value,l)),e)))))}function ye(e,t,n,r,i,o,a,s){if(o.length>=n+1)return o;let c=[...o];if(de(r[i],Error)){_e(a,s);const o=e(t,r[i]),l=c.length;be(o,i,l,s),c=ye(e,t,n,r[i],i,[o,...c],o,l)}return Array.isArray(r.errors)&&r.errors.forEach(((r,o)=>{if(de(r,Error)){_e(a,s);const l=e(t,r),u=c.length;be(l,`errors[${o}]`,u,s),c=ye(e,t,n,r,i,[l,...c],l,u)}})),c}function _e(e,t){e.mechanism=e.mechanism||{type:\"generic\",handled:!0},e.mechanism={...e.mechanism,...\"AggregateError\"===e.type&&{is_exception_group:!0},exception_id:t}}function be(e,t,n,r){e.mechanism=e.mechanism||{type:\"generic\",handled:!0},e.mechanism={...e.mechanism,type:\"chained\",source:t,exception_id:n,parent_id:r}}function we(e){return void 0===e?void 0:e>=400&&e<500?\"warning\":e>=500?\"error\":void 0}const Se=\"8.33.1\",ke=globalThis;function Me(e,t,n){const r=n||ke,i=r.__SENTRY__=r.__SENTRY__||{},o=i[Se]=i[Se]||{};return o[e]||(o[e]=t())}const Ce=ke;function Ee(e,t={}){if(!e)return\"<unknown>\";try{let n=e;const r=5,i=[];let o=0,a=0;const s=\" > \",c=s.length;let l;const u=Array.isArray(t)?t:t.keyAttrs,d=!Array.isArray(t)&&t.maxStringLength||80;for(;n&&o++<r&&(l=Te(n,u),!(\"html\"===l||o>1&&a+i.length*c+l.length>=d));)i.push(l),a+=l.length,n=n.parentNode;return i.reverse().join(s)}catch(e){return\"<unknown>\"}}function Te(e,t){const n=e,r=[];if(!n||!n.tagName)return\"\";if(Ce.HTMLElement&&n instanceof HTMLElement&&n.dataset){if(n.dataset.sentryComponent)return n.dataset.sentryComponent;if(n.dataset.sentryElement)return n.dataset.sentryElement}r.push(n.tagName.toLowerCase());const i=t&&t.length?t.filter((e=>n.getAttribute(e))).map((e=>[e,n.getAttribute(e)])):null;if(i&&i.length)i.forEach((e=>{r.push(`[${e[0]}=\"${e[1]}\"]`)}));else{n.id&&r.push(`#${n.id}`);const e=n.className;if(e&&oe(e)){const t=e.split(/\\s+/);for(const e of t)r.push(`.${e}`)}}const o=[\"aria-label\",\"type\",\"name\",\"title\",\"alt\"];for(const e of o){const t=n.getAttribute(e);t&&r.push(`[${e}=\"${t}\"]`)}return r.join(\"\")}const Pe=\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__,Oe=[\"debug\",\"info\",\"warn\",\"error\",\"log\",\"assert\",\"trace\"],Ae={};function je(e){if(!(\"console\"in ke))return e();const t=ke.console,n={},r=Object.keys(Ae);r.forEach((e=>{const r=Ae[e];n[e]=t[e],t[e]=r}));try{return e()}finally{r.forEach((e=>{t[e]=n[e]}))}}const xe=Me(\"logger\",(function(){let e=!1;const t={enable:()=>{e=!0},disable:()=>{e=!1},isEnabled:()=>e};return Pe?Oe.forEach((n=>{t[n]=(...t)=>{e&&je((()=>{ke.console[n](`Sentry Logger [${n}]:`,...t)}))}})):Oe.forEach((e=>{t[e]=()=>{}})),t})),Le=/^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;function Ie(e,t=!1){const{host:n,path:r,pass:i,port:o,projectId:a,protocol:s,publicKey:c}=e;return`${s}://${c}${t&&i?`:${i}`:\"\"}@${n}${o?`:${o}`:\"\"}/${r?`${r}/`:r}${a}`}function De(e){return{protocol:e.protocol,publicKey:e.publicKey||\"\",pass:e.pass||\"\",host:e.host,port:e.port||\"\",path:e.path||\"\",projectId:e.projectId}}function Ne(e){const t=\"string\"==typeof e?function(e){const t=Le.exec(e);if(!t)return void je((()=>{console.error(`Invalid Sentry Dsn: ${e}`)}));const[n,r,i=\"\",o=\"\",a=\"\",s=\"\"]=t.slice(1);let c=\"\",l=s;const u=l.split(\"/\");if(u.length>1&&(c=u.slice(0,-1).join(\"/\"),l=u.pop()),l){const e=l.match(/^\\d+/);e&&(l=e[0])}return De({host:o,pass:i,path:c,projectId:l,port:a,protocol:n,publicKey:r})}(e):De(e);if(t&&function(e){if(!Pe)return!0;const{port:t,projectId:n,protocol:r}=e;return!([\"protocol\",\"publicKey\",\"host\",\"projectId\"].find((t=>!e[t]&&(xe.error(`Invalid Sentry Dsn: ${t} missing`),!0)))||(n.match(/^\\d+$/)?function(e){return\"http\"===e||\"https\"===e}(r)?t&&isNaN(parseInt(t,10))&&(xe.error(`Invalid Sentry Dsn: Invalid port ${t}`),1):(xe.error(`Invalid Sentry Dsn: Invalid protocol ${r}`),1):(xe.error(`Invalid Sentry Dsn: Invalid projectId ${n}`),1)))}(t))return t}class Re extends Error{constructor(e,t=\"warn\"){super(e),this.message=e,this.name=new.target.prototype.constructor.name,Object.setPrototypeOf(this,new.target.prototype),this.logLevel=t}}function Fe(e,t,n){if(!(t in e))return;const r=e[t],i=n(r);\"function\"==typeof i&&Ue(i,r),e[t]=i}function Be(e,t,n){try{Object.defineProperty(e,t,{value:n,writable:!0,configurable:!0})}catch(n){Pe&&xe.log(`Failed to add non-enumerable property \"${t}\" to object`,e)}}function Ue(e,t){try{const n=t.prototype||{};e.prototype=t.prototype=n,Be(e,\"__sentry_original__\",t)}catch(e){}}function Ve(e){return e.__sentry_original__}function Je(e){if(te(e))return{message:e.message,name:e.name,stack:e.stack,...qe(e)};if(le(e)){const t={type:e.type,target:$e(e.target),currentTarget:$e(e.currentTarget),...qe(e)};return\"undefined\"!=typeof CustomEvent&&de(e,CustomEvent)&&(t.detail=e.detail),t}return e}function $e(e){try{return t=e,\"undefined\"!=typeof Element&&de(t,Element)?Ee(e):Object.prototype.toString.call(e)}catch(e){return\"<unknown>\"}var t}function qe(e){if(\"object\"==typeof e&&null!==e){const t={};for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t}return{}}function We(e){return ze(e,new Map)}function ze(e,t){if(function(e){if(!ce(e))return!1;try{const t=Object.getPrototypeOf(e).constructor.name;return!t||\"Object\"===t}catch(e){return!0}}(e)){const n=t.get(e);if(void 0!==n)return n;const r={};t.set(e,r);for(const n of Object.getOwnPropertyNames(e))void 0!==e[n]&&(r[n]=ze(e[n],t));return r}if(Array.isArray(e)){const n=t.get(e);if(void 0!==n)return n;const r=[];return t.set(e,r),e.forEach((e=>{r.push(ze(e,t))})),r}return e}const He=\"?\",Ge=/\\(error: (.*)\\)/,Qe=/captureMessage|captureException/;function Ke(e){return e[e.length-1]||{}}const Ye=\"<anonymous>\";function Xe(e){try{return e&&\"function\"==typeof e&&e.name||Ye}catch(e){return Ye}}function Ze(e){const t=e.exception;if(t){const e=[];try{return t.values.forEach((t=>{t.stacktrace.frames&&e.push(...t.stacktrace.frames)})),e}catch(e){return}}}const et={},tt={};function nt(e,t){et[e]=et[e]||[],et[e].push(t)}function rt(e,t){tt[e]||(t(),tt[e]=!0)}function it(e,t){const n=e&&et[e];if(n)for(const r of n)try{r(t)}catch(t){Pe&&xe.error(`Error while triggering instrumentation handler.\\nType: ${e}\\nName: ${Xe(r)}\\nError:`,t)}}function ot(){\"console\"in ke&&Oe.forEach((function(e){e in ke.console&&Fe(ke.console,e,(function(t){return Ae[e]=t,function(...t){it(\"console\",{args:t,level:e});const n=Ae[e];n&&n.apply(ke.console,t)}}))}))}const at=ke;function st(e){return e&&/^function\\s+\\w+\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(e.toString())}function ct(){if(\"string\"==typeof EdgeRuntime)return!0;if(!function(){if(!(\"fetch\"in at))return!1;try{return new Headers,new Request(\"http://www.example.com\"),new Response,!0}catch(e){return!1}}())return!1;if(st(at.fetch))return!0;let e=!1;const t=at.document;if(t&&\"function\"==typeof t.createElement)try{const n=t.createElement(\"iframe\");n.hidden=!0,t.head.appendChild(n),n.contentWindow&&n.contentWindow.fetch&&(e=st(n.contentWindow.fetch)),t.head.removeChild(n)}catch(e){Pe&&xe.warn(\"Could not create sandbox iframe for pure fetch check, bailing to window.fetch: \",e)}return e}function lt(){return Date.now()/1e3}const ut=function(){const{performance:e}=ke;if(!e||!e.now)return lt;const t=Date.now()-e.now(),n=null==e.timeOrigin?t:e.timeOrigin;return()=>(n+e.now())/1e3}();function dt(e,t){const n=\"fetch\";nt(n,e),rt(n,(()=>function(e,t=!1){if(t&&!ct())return;Fe(ke,\"fetch\",(function(t){return function(...n){const{method:r,url:i}=function(e){if(0===e.length)return{method:\"GET\",url:\"\"};if(2===e.length){const[t,n]=e;return{url:ht(t),method:pt(n,\"method\")?String(n.method).toUpperCase():\"GET\"}}const t=e[0];return{url:ht(t),method:pt(t,\"method\")?String(t.method).toUpperCase():\"GET\"}}(n),o={args:n,fetchData:{method:r,url:i},startTimestamp:1e3*ut()};e||it(\"fetch\",{...o});const a=(new Error).stack;return t.apply(ke,n).then((async t=>(e?e(t):it(\"fetch\",{...o,endTimestamp:1e3*ut(),response:t}),t)),(e=>{throw it(\"fetch\",{...o,endTimestamp:1e3*ut(),error:e}),te(e)&&void 0===e.stack&&(e.stack=a,Be(e,\"framesToPop\",1)),e}))}}))}(void 0,t)))}function pt(e,t){return!!e&&\"object\"==typeof e&&!!e[t]}function ht(e){return\"string\"==typeof e?e:e?pt(e,\"url\")?e.url:e.toString?e.toString():\"\":\"\"}(()=>{const{performance:e}=ke;if(!e||!e.now)return;const t=36e5,n=e.now(),r=Date.now(),i=e.timeOrigin?Math.abs(e.timeOrigin+n-r):t,o=i<t,a=e.timing&&e.timing.navigationStart,s=\"number\"==typeof a?Math.abs(a+n-r):t;(o||s<t)&&(i<=s&&e.timeOrigin)})();let ft=null;function vt(){ft=ke.onerror,ke.onerror=function(e,t,n,r,i){return it(\"error\",{column:r,error:i,line:n,msg:e,url:t}),!(!ft||ft.__SENTRY_LOADER__)&&ft.apply(this,arguments)},ke.onerror.__SENTRY_INSTRUMENTED__=!0}let mt=null;function gt(){mt=ke.onunhandledrejection,ke.onunhandledrejection=function(e){return it(\"unhandledrejection\",e),!(mt&&!mt.__SENTRY_LOADER__)||mt.apply(this,arguments)},ke.onunhandledrejection.__SENTRY_INSTRUMENTED__=!0}function yt(){const e=ke,t=e.crypto||e.msCrypto;let n=()=>16*Math.random();try{if(t&&t.randomUUID)return t.randomUUID().replace(/-/g,\"\");t&&t.getRandomValues&&(n=()=>{const e=new Uint8Array(1);return t.getRandomValues(e),e[0]})}catch(e){}return([1e7]+1e3+4e3+8e3+1e11).replace(/[018]/g,(e=>(e^(15&n())>>e/4).toString(16)))}function _t(e){return e.exception&&e.exception.values?e.exception.values[0]:void 0}function bt(e){const{message:t,event_id:n}=e;if(t)return t;const r=_t(e);return r?r.type&&r.value?`${r.type}: ${r.value}`:r.type||r.value||n||\"<unknown>\":n||\"<unknown>\"}function wt(e,t,n){const r=e.exception=e.exception||{},i=r.values=r.values||[],o=i[0]=i[0]||{};o.value||(o.value=t||\"\"),o.type||(o.type=n||\"Error\")}function St(e,t){const n=_t(e);if(!n)return;const r=n.mechanism;if(n.mechanism={type:\"generic\",handled:!0,...r,...t},t&&\"data\"in t){const e={...r&&r.data,...t.data};n.mechanism.data=e}}function kt(e){if(e&&e.__sentry_captured__)return!0;try{Be(e,\"__sentry_captured__\",!0)}catch(e){}return!1}function Mt(e,t=100,n=1/0){try{return Et(\"\",e,t,n)}catch(e){return{ERROR:`**non-serializable** (${e})`}}}function Ct(e,t=3,n=102400){const r=Mt(e,t);return i=r,function(e){return~-encodeURI(e).split(/%..|./).length}(JSON.stringify(i))>n?Ct(e,t-1,n):r;var i}function Et(e,t,n=1/0,r=1/0,i=function(){const e=\"function\"==typeof WeakSet,t=e?new WeakSet:[];return[function(n){if(e)return!!t.has(n)||(t.add(n),!1);for(let e=0;e<t.length;e++)if(t[e]===n)return!0;return t.push(n),!1},function(n){if(e)t.delete(n);else for(let e=0;e<t.length;e++)if(t[e]===n){t.splice(e,1);break}}]}()){const[o,a]=i;if(null==t||[\"boolean\",\"string\"].includes(typeof t)||\"number\"==typeof t&&Number.isFinite(t))return t;const s=function(e,t){try{if(\"domain\"===e&&t&&\"object\"==typeof t&&t._events)return\"[Domain]\";if(\"domainEmitter\"===e)return\"[DomainEmitter]\";if(\"undefined\"!=typeof global&&t===global)return\"[Global]\";if(\"undefined\"!=typeof window&&t===window)return\"[Window]\";if(\"undefined\"!=typeof document&&t===document)return\"[Document]\";if(pe(t))return\"[VueViewModel]\";if(ce(n=t)&&\"nativeEvent\"in n&&\"preventDefault\"in n&&\"stopPropagation\"in n)return\"[SyntheticEvent]\";if(\"number\"==typeof t&&!Number.isFinite(t))return`[${t}]`;if(\"function\"==typeof t)return`[Function: ${Xe(t)}]`;if(\"symbol\"==typeof t)return`[${String(t)}]`;if(\"bigint\"==typeof t)return`[BigInt: ${String(t)}]`;const r=function(e){const t=Object.getPrototypeOf(e);return t?t.constructor.name:\"null prototype\"}(t);return/^HTML(\\w*)Element$/.test(r)?`[HTMLElement: ${r}]`:`[object ${r}]`}catch(e){return`**non-serializable** (${e})`}var n}(e,t);if(!s.startsWith(\"[object \"))return s;if(t.__sentry_skip_normalization__)return t;const c=\"number\"==typeof t.__sentry_override_normalization_depth__?t.__sentry_override_normalization_depth__:n;if(0===c)return s.replace(\"object \",\"\");if(o(t))return\"[Circular ~]\";const l=t;if(l&&\"function\"==typeof l.toJSON)try{return Et(\"\",l.toJSON(),c-1,r,i)}catch(e){}const u=Array.isArray(t)?[]:{};let d=0;const p=Je(t);for(const e in p){if(!Object.prototype.hasOwnProperty.call(p,e))continue;if(d>=r){u[e]=\"[MaxProperties ~]\";break}const t=p[e];u[e]=Et(e,t,c-1,r,i),d++}return a(t),u}var Tt;function Pt(e){return new At((t=>{t(e)}))}function Ot(e){return new At(((t,n)=>{n(e)}))}!function(e){e[e.PENDING=0]=\"PENDING\";e[e.RESOLVED=1]=\"RESOLVED\";e[e.REJECTED=2]=\"REJECTED\"}(Tt||(Tt={}));class At{constructor(e){At.prototype.__init.call(this),At.prototype.__init2.call(this),At.prototype.__init3.call(this),At.prototype.__init4.call(this),this._state=Tt.PENDING,this._handlers=[];try{e(this._resolve,this._reject)}catch(e){this._reject(e)}}then(e,t){return new At(((n,r)=>{this._handlers.push([!1,t=>{if(e)try{n(e(t))}catch(e){r(e)}else n(t)},e=>{if(t)try{n(t(e))}catch(e){r(e)}else r(e)}]),this._executeHandlers()}))}catch(e){return this.then((e=>e),e)}finally(e){return new At(((t,n)=>{let r,i;return this.then((t=>{i=!1,r=t,e&&e()}),(t=>{i=!0,r=t,e&&e()})).then((()=>{i?n(r):t(r)}))}))}__init(){this._resolve=e=>{this._setResult(Tt.RESOLVED,e)}}__init2(){this._reject=e=>{this._setResult(Tt.REJECTED,e)}}__init3(){this._setResult=(e,t)=>{this._state===Tt.PENDING&&(ue(t)?t.then(this._resolve,this._reject):(this._state=e,this._value=t,this._executeHandlers()))}}__init4(){this._executeHandlers=()=>{if(this._state===Tt.PENDING)return;const e=this._handlers.slice();this._handlers=[],e.forEach((e=>{e[0]||(this._state===Tt.RESOLVED&&e[1](this._value),this._state===Tt.REJECTED&&e[2](this._value),e[0]=!0)}))}}}function jt(e){const t=[];function n(e){return t.splice(t.indexOf(e),1)[0]||Promise.resolve(void 0)}return{$:t,add:function(r){if(!(void 0===e||t.length<e))return Ot(new Re(\"Not adding Promise because buffer limit was reached.\"));const i=r();return-1===t.indexOf(i)&&t.push(i),i.then((()=>n(i))).then(null,(()=>n(i).then(null,(()=>{})))),i},drain:function(e){return new At(((n,r)=>{let i=t.length;if(!i)return n(!0);const o=setTimeout((()=>{e&&e>0&&n(!1)}),e);t.forEach((e=>{Pt(e).then((()=>{--i||(clearTimeout(o),n(!0))}),r)}))}))}}}function xt(e){if(!e)return{};const t=e.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);if(!t)return{};const n=t[6]||\"\",r=t[8]||\"\";return{host:t[4],path:t[5],protocol:t[2],search:n,hash:r,relative:t[5]+n+r}}const Lt=[\"fatal\",\"error\",\"warning\",\"log\",\"info\",\"debug\"];function It(e){return\"warn\"===e?\"warning\":Lt.includes(e)?e:\"log\"}const Dt=/^sentry-/;function Nt(e){const t=function(e){if(!e||!oe(e)&&!Array.isArray(e))return;if(Array.isArray(e))return e.reduce(((e,t)=>{const n=Rt(t);return Object.entries(n).forEach((([t,n])=>{e[t]=n})),e}),{});return Rt(e)}(e);if(!t)return;const n=Object.entries(t).reduce(((e,[t,n])=>{if(t.match(Dt)){e[t.slice(7)]=n}return e}),{});return Object.keys(n).length>0?n:void 0}function Rt(e){return e.split(\",\").map((e=>e.split(\"=\").map((e=>decodeURIComponent(e.trim()))))).reduce(((e,[t,n])=>(t&&n&&(e[t]=n),e)),{})}function Ft(e,t=[]){return[e,t]}function Bt(e,t){const[n,r]=e;return[n,[...r,t]]}function Ut(e,t){const n=e[1];for(const e of n){if(t(e,e[0].type))return!0}return!1}function Vt(e){return ke.__SENTRY__&&ke.__SENTRY__.encodePolyfill?ke.__SENTRY__.encodePolyfill(e):(new TextEncoder).encode(e)}function Jt(e){const[t,n]=e;let r=JSON.stringify(t);function i(e){\"string\"==typeof r?r=\"string\"==typeof e?r+e:[Vt(r),e]:r.push(\"string\"==typeof e?Vt(e):e)}for(const e of n){const[t,n]=e;if(i(`\\n${JSON.stringify(t)}\\n`),\"string\"==typeof n||n instanceof Uint8Array)i(n);else{let e;try{e=JSON.stringify(n)}catch(t){e=JSON.stringify(Mt(n))}i(e)}}return\"string\"==typeof r?r:function(e){const t=e.reduce(((e,t)=>e+t.length),0),n=new Uint8Array(t);let r=0;for(const t of e)n.set(t,r),r+=t.length;return n}(r)}function $t(e){const t=\"string\"==typeof e.data?Vt(e.data):e.data;return[We({type:\"attachment\",length:t.length,filename:e.filename,content_type:e.contentType,attachment_type:e.attachmentType}),t]}const qt={session:\"session\",sessions:\"session\",attachment:\"attachment\",transaction:\"transaction\",event:\"error\",client_report:\"internal\",user_report:\"default\",profile:\"profile\",profile_chunk:\"profile\",replay_event:\"replay\",replay_recording:\"replay\",check_in:\"monitor\",feedback:\"feedback\",span:\"span\",statsd:\"metric_bucket\"};function Wt(e){return qt[e]}function zt(e){if(!e||!e.sdk)return;const{name:t,version:n}=e.sdk;return{name:t,version:n}}function Ht(e,{statusCode:t,headers:n},r=Date.now()){const i={...e},o=n&&n[\"x-sentry-rate-limits\"],a=n&&n[\"retry-after\"];if(o)for(const e of o.trim().split(\",\")){const[t,n,,,o]=e.split(\":\",5),a=parseInt(t,10),s=1e3*(isNaN(a)?60:a);if(n)for(const e of n.split(\";\"))\"metric_bucket\"===e&&o&&!o.split(\";\").includes(\"custom\")||(i[e]=r+s);else i.all=r+s}else a?i.all=r+function(e,t=Date.now()){const n=parseInt(`${e}`,10);if(!isNaN(n))return 1e3*n;const r=Date.parse(`${e}`);return isNaN(r)?6e4:r-t}(a,r):429===t&&(i.all=r+6e4);return i}function Gt(){return{traceId:yt(),spanId:yt().substring(16)}}const Qt=ke;const Kt=\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__;function Yt(){return Xt(ke),ke}function Xt(e){const t=e.__SENTRY__=e.__SENTRY__||{};return t.version=t.version||Se,t[Se]=t[Se]||{}}function Zt(e,t={}){if(t.user&&(!e.ipAddress&&t.user.ip_address&&(e.ipAddress=t.user.ip_address),e.did||t.did||(e.did=t.user.id||t.user.email||t.user.username)),e.timestamp=t.timestamp||ut(),t.abnormal_mechanism&&(e.abnormal_mechanism=t.abnormal_mechanism),t.ignoreDuration&&(e.ignoreDuration=t.ignoreDuration),t.sid&&(e.sid=32===t.sid.length?t.sid:yt()),void 0!==t.init&&(e.init=t.init),!e.did&&t.did&&(e.did=`${t.did}`),\"number\"==typeof t.started&&(e.started=t.started),e.ignoreDuration)e.duration=void 0;else if(\"number\"==typeof t.duration)e.duration=t.duration;else{const t=e.timestamp-e.started;e.duration=t>=0?t:0}t.release&&(e.release=t.release),t.environment&&(e.environment=t.environment),!e.ipAddress&&t.ipAddress&&(e.ipAddress=t.ipAddress),!e.userAgent&&t.userAgent&&(e.userAgent=t.userAgent),\"number\"==typeof t.errors&&(e.errors=t.errors),t.status&&(e.status=t.status)}const en=\"_sentrySpan\";function tn(e,t){t?Be(e,en,t):delete e[en]}function nn(e){return e[en]}class rn{constructor(){this._notifyingListeners=!1,this._scopeListeners=[],this._eventProcessors=[],this._breadcrumbs=[],this._attachments=[],this._user={},this._tags={},this._extra={},this._contexts={},this._sdkProcessingMetadata={},this._propagationContext=Gt()}clone(){const e=new rn;return e._breadcrumbs=[...this._breadcrumbs],e._tags={...this._tags},e._extra={...this._extra},e._contexts={...this._contexts},e._user=this._user,e._level=this._level,e._session=this._session,e._transactionName=this._transactionName,e._fingerprint=this._fingerprint,e._eventProcessors=[...this._eventProcessors],e._requestSession=this._requestSession,e._attachments=[...this._attachments],e._sdkProcessingMetadata={...this._sdkProcessingMetadata},e._propagationContext={...this._propagationContext},e._client=this._client,e._lastEventId=this._lastEventId,tn(e,nn(this)),e}setClient(e){this._client=e}setLastEventId(e){this._lastEventId=e}getClient(){return this._client}lastEventId(){return this._lastEventId}addScopeListener(e){this._scopeListeners.push(e)}addEventProcessor(e){return this._eventProcessors.push(e),this}setUser(e){return this._user=e||{email:void 0,id:void 0,ip_address:void 0,username:void 0},this._session&&Zt(this._session,{user:e}),this._notifyScopeListeners(),this}getUser(){return this._user}getRequestSession(){return this._requestSession}setRequestSession(e){return this._requestSession=e,this}setTags(e){return this._tags={...this._tags,...e},this._notifyScopeListeners(),this}setTag(e,t){return this._tags={...this._tags,[e]:t},this._notifyScopeListeners(),this}setExtras(e){return this._extra={...this._extra,...e},this._notifyScopeListeners(),this}setExtra(e,t){return this._extra={...this._extra,[e]:t},this._notifyScopeListeners(),this}setFingerprint(e){return this._fingerprint=e,this._notifyScopeListeners(),this}setLevel(e){return this._level=e,this._notifyScopeListeners(),this}setTransactionName(e){return this._transactionName=e,this._notifyScopeListeners(),this}setContext(e,t){return null===t?delete this._contexts[e]:this._contexts[e]=t,this._notifyScopeListeners(),this}setSession(e){return e?this._session=e:delete this._session,this._notifyScopeListeners(),this}getSession(){return this._session}update(e){if(!e)return this;const t=\"function\"==typeof e?e(this):e,[n,r]=t instanceof on?[t.getScopeData(),t.getRequestSession()]:ce(t)?[e,e.requestSession]:[],{tags:i,extra:o,user:a,contexts:s,level:c,fingerprint:l=[],propagationContext:u}=n||{};return this._tags={...this._tags,...i},this._extra={...this._extra,...o},this._contexts={...this._contexts,...s},a&&Object.keys(a).length&&(this._user=a),c&&(this._level=c),l.length&&(this._fingerprint=l),u&&(this._propagationContext=u),r&&(this._requestSession=r),this}clear(){return this._breadcrumbs=[],this._tags={},this._extra={},this._user={},this._contexts={},this._level=void 0,this._transactionName=void 0,this._fingerprint=void 0,this._requestSession=void 0,this._session=void 0,tn(this,void 0),this._attachments=[],this._propagationContext=Gt(),this._notifyScopeListeners(),this}addBreadcrumb(e,t){const n=\"number\"==typeof t?t:100;if(n<=0)return this;const r={timestamp:lt(),...e},i=this._breadcrumbs;return i.push(r),this._breadcrumbs=i.length>n?i.slice(-n):i,this._notifyScopeListeners(),this}getLastBreadcrumb(){return this._breadcrumbs[this._breadcrumbs.length-1]}clearBreadcrumbs(){return this._breadcrumbs=[],this._notifyScopeListeners(),this}addAttachment(e){return this._attachments.push(e),this}clearAttachments(){return this._attachments=[],this}getScopeData(){return{breadcrumbs:this._breadcrumbs,attachments:this._attachments,contexts:this._contexts,tags:this._tags,extra:this._extra,user:this._user,level:this._level,fingerprint:this._fingerprint||[],eventProcessors:this._eventProcessors,propagationContext:this._propagationContext,sdkProcessingMetadata:this._sdkProcessingMetadata,transactionName:this._transactionName,span:nn(this)}}setSDKProcessingMetadata(e){return this._sdkProcessingMetadata={...this._sdkProcessingMetadata,...e},this}setPropagationContext(e){return this._propagationContext=e,this}getPropagationContext(){return this._propagationContext}captureException(e,t){const n=t&&t.event_id?t.event_id:yt();if(!this._client)return xe.warn(\"No client configured on scope - will not capture exception!\"),n;const r=new Error(\"Sentry syntheticException\");return this._client.captureException(e,{originalException:e,syntheticException:r,...t,event_id:n},this),n}captureMessage(e,t,n){const r=n&&n.event_id?n.event_id:yt();if(!this._client)return xe.warn(\"No client configured on scope - will not capture message!\"),r;const i=new Error(e);return this._client.captureMessage(e,t,{originalException:e,syntheticException:i,...n,event_id:r},this),r}captureEvent(e,t){const n=t&&t.event_id?t.event_id:yt();return this._client?(this._client.captureEvent(e,{...t,event_id:n},this),n):(xe.warn(\"No client configured on scope - will not capture event!\"),n)}_notifyScopeListeners(){this._notifyingListeners||(this._notifyingListeners=!0,this._scopeListeners.forEach((e=>{e(this)})),this._notifyingListeners=!1)}}const on=rn;class an{constructor(e,t){let n,r;n=e||new on,r=t||new on,this._stack=[{scope:n}],this._isolationScope=r}withScope(e){const t=this._pushScope();let n;try{n=e(t)}catch(e){throw this._popScope(),e}return ue(n)?n.then((e=>(this._popScope(),e)),(e=>{throw this._popScope(),e})):(this._popScope(),n)}getClient(){return this.getStackTop().client}getScope(){return this.getStackTop().scope}getIsolationScope(){return this._isolationScope}getStackTop(){return this._stack[this._stack.length-1]}_pushScope(){const e=this.getScope().clone();return this._stack.push({client:this.getClient(),scope:e}),e}_popScope(){return!(this._stack.length<=1)&&!!this._stack.pop()}}function sn(){const e=Xt(Yt());return e.stack=e.stack||new an(Me(\"defaultCurrentScope\",(()=>new on)),Me(\"defaultIsolationScope\",(()=>new on)))}function cn(e){return sn().withScope(e)}function ln(e,t){const n=sn();return n.withScope((()=>(n.getStackTop().scope=e,t(e))))}function un(e){return sn().withScope((()=>e(sn().getIsolationScope())))}function dn(e){const t=Xt(e);return t.acs?t.acs:{withIsolationScope:un,withScope:cn,withSetScope:ln,withSetIsolationScope:(e,t)=>un(t),getCurrentScope:()=>sn().getScope(),getIsolationScope:()=>sn().getIsolationScope()}}function pn(){return dn(Yt()).getCurrentScope()}function hn(){return dn(Yt()).getIsolationScope()}function fn(){return pn().getClient()}function vn(e){const t=e._sentryMetrics;if(!t)return;const n={};for(const[,[e,r]]of t){(n[e]||(n[e]=[])).push(We(r))}return n}function mn(e){const{spanId:t,traceId:n}=e.spanContext(),{parent_span_id:r}=_n(e);return We({parent_span_id:r,span_id:t,trace_id:n})}function gn(e){return\"number\"==typeof e?yn(e):Array.isArray(e)?e[0]+e[1]/1e9:e instanceof Date?yn(e.getTime()):ut()}function yn(e){return e>9999999999?e/1e3:e}function _n(e){if(function(e){return\"function\"==typeof e.getSpanJSON}(e))return e.getSpanJSON();try{const{spanId:t,traceId:n}=e.spanContext();if(function(e){const t=e;return!!(t.attributes&&t.startTime&&t.name&&t.endTime&&t.status)}(e)){const{attributes:r,startTime:i,name:o,endTime:a,parentSpanId:s,status:c}=e;return We({span_id:t,trace_id:n,data:r,description:o,parent_span_id:s,start_timestamp:gn(i),timestamp:gn(a)||void 0,status:bn(c),op:r[\"sentry.op\"],origin:r[\"sentry.origin\"],_metrics_summary:vn(e)})}return{span_id:t,trace_id:n}}catch(e){return{}}}function bn(e){if(e&&0!==e.code)return 1===e.code?\"ok\":e.message||\"unknown_error\"}function wn(e){return e._sentryRootSpan||e}const Sn=\"production\";function kn(e,t){const n=t.getOptions(),{publicKey:r}=t.getDsn()||{},i=We({environment:n.environment||Sn,release:n.release,public_key:r,trace_id:e});return t.emit(\"createDsc\",i),i}function Mn(e){const t=fn();if(!t)return{};const n=kn(_n(e).trace_id||\"\",t),r=wn(e),i=r._frozenDsc;if(i)return i;const o=r.spanContext().traceState,a=o&&o.get(\"sentry.dsc\"),s=a&&Nt(a);if(s)return s;const c=_n(r),l=c.data||{},u=l[\"sentry.sample_rate\"];null!=u&&(n.sample_rate=`${u}`);const d=l[\"sentry.source\"],p=c.description;return\"url\"!==d&&p&&(n.transaction=p),function(e){if(\"boolean\"==typeof __SENTRY_TRACING__&&!__SENTRY_TRACING__)return!1;const t=fn(),n=e||t&&t.getOptions();return!!n&&(n.enableTracing||\"tracesSampleRate\"in n||\"tracesSampler\"in n)}()&&(n.sampled=String(function(e){const{traceFlags:t}=e.spanContext();return 1===t}(r))),t.emit(\"createDsc\",n,r),n}function Cn(e,t,n,r){const i=zt(n),o=e.type&&\"replay_event\"!==e.type?e.type:\"event\";!function(e,t){t&&(e.sdk=e.sdk||{},e.sdk.name=e.sdk.name||t.name,e.sdk.version=e.sdk.version||t.version,e.sdk.integrations=[...e.sdk.integrations||[],...t.integrations||[]],e.sdk.packages=[...e.sdk.packages||[],...t.packages||[]])}(e,n&&n.sdk);const a=function(e,t,n,r){const i=e.sdkProcessingMetadata&&e.sdkProcessingMetadata.dynamicSamplingContext;return{event_id:e.event_id,sent_at:(new Date).toISOString(),...t&&{sdk:t},...!!n&&r&&{dsn:Ie(r)},...i&&{trace:We({...i})}}}(e,i,r,t);delete e.sdkProcessingMetadata;return Ft(a,[[{type:o},e]])}function En(e,t,n,r=0){return new At(((i,o)=>{const a=e[r];if(null===t||\"function\"!=typeof a)i(t);else{const s=a({...t},n);Kt&&a.id&&null===s&&xe.log(`Event processor \"${a.id}\" dropped event`),ue(s)?s.then((t=>En(e,t,n,r+1).then(i))).then(null,o):En(e,s,n,r+1).then(i).then(null,o)}}))}function Tn(e,t){const{fingerprint:n,span:r,breadcrumbs:i,sdkProcessingMetadata:o}=t;!function(e,t){const{extra:n,tags:r,user:i,contexts:o,level:a,transactionName:s}=t,c=We(n);c&&Object.keys(c).length&&(e.extra={...c,...e.extra});const l=We(r);l&&Object.keys(l).length&&(e.tags={...l,...e.tags});const u=We(i);u&&Object.keys(u).length&&(e.user={...u,...e.user});const d=We(o);d&&Object.keys(d).length&&(e.contexts={...d,...e.contexts});a&&(e.level=a);s&&\"transaction\"!==e.type&&(e.transaction=s)}(e,t),r&&function(e,t){e.contexts={trace:mn(t),...e.contexts},e.sdkProcessingMetadata={dynamicSamplingContext:Mn(t),...e.sdkProcessingMetadata};const n=wn(t),r=_n(n).description;r&&!e.transaction&&\"transaction\"===e.type&&(e.transaction=r)}(e,r),function(e,t){e.fingerprint=e.fingerprint?function(e){return Array.isArray(e)?e:[e]}(e.fingerprint):[],t&&(e.fingerprint=e.fingerprint.concat(t));e.fingerprint&&!e.fingerprint.length&&delete e.fingerprint}(e,n),function(e,t){const n=[...e.breadcrumbs||[],...t];e.breadcrumbs=n.length?n:void 0}(e,i),function(e,t){e.sdkProcessingMetadata={...e.sdkProcessingMetadata,...t}}(e,o)}function Pn(e,t){const{extra:n,tags:r,user:i,contexts:o,level:a,sdkProcessingMetadata:s,breadcrumbs:c,fingerprint:l,eventProcessors:u,attachments:d,propagationContext:p,transactionName:h,span:f}=t;On(e,\"extra\",n),On(e,\"tags\",r),On(e,\"user\",i),On(e,\"contexts\",o),On(e,\"sdkProcessingMetadata\",s),a&&(e.level=a),h&&(e.transactionName=h),f&&(e.span=f),c.length&&(e.breadcrumbs=[...e.breadcrumbs,...c]),l.length&&(e.fingerprint=[...e.fingerprint,...l]),u.length&&(e.eventProcessors=[...e.eventProcessors,...u]),d.length&&(e.attachments=[...e.attachments,...d]),e.propagationContext={...e.propagationContext,...p}}function On(e,t,n){if(n&&Object.keys(n).length){e[t]={...e[t]};for(const r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[t][r]=n[r])}}function An(e,t,n,r,i,o){const{normalizeDepth:a=3,normalizeMaxBreadth:s=1e3}=e,c={...t,event_id:t.event_id||n.event_id||yt(),timestamp:t.timestamp||lt()},l=n.integrations||e.integrations.map((e=>e.name));!function(e,t){const{environment:n,release:r,dist:i,maxValueLength:o=250}=t;\"environment\"in e||(e.environment=\"environment\"in t?n:Sn);void 0===e.release&&void 0!==r&&(e.release=r);void 0===e.dist&&void 0!==i&&(e.dist=i);e.message&&(e.message=he(e.message,o));const a=e.exception&&e.exception.values&&e.exception.values[0];a&&a.value&&(a.value=he(a.value,o));const s=e.request;s&&s.url&&(s.url=he(s.url,o))}(c,e),function(e,t){t.length>0&&(e.sdk=e.sdk||{},e.sdk.integrations=[...e.sdk.integrations||[],...t])}(c,l),i&&i.emit(\"applyFrameMetadata\",t),void 0===t.type&&function(e,t){const n=ke._sentryDebugIds;if(!n)return;let r;const i=jn.get(t);i?r=i:(r=new Map,jn.set(t,r));const o=Object.entries(n).reduce(((e,[n,i])=>{let o;const a=r.get(n);a?o=a:(o=t(n),r.set(n,o));for(let t=o.length-1;t>=0;t--){const n=o[t];if(n.filename){e[n.filename]=i;break}}return e}),{});try{e.exception.values.forEach((e=>{e.stacktrace.frames.forEach((e=>{e.filename&&(e.debug_id=o[e.filename])}))}))}catch(e){}}(c,e.stackParser);const u=function(e,t){if(!t)return e;const n=e?e.clone():new on;return n.update(t),n}(r,n.captureContext);n.mechanism&&St(c,n.mechanism);const d=i?i.getEventProcessors():[],p=Me(\"globalScope\",(()=>new on)).getScopeData();if(o){Pn(p,o.getScopeData())}if(u){Pn(p,u.getScopeData())}const h=[...n.attachments||[],...p.attachments];h.length&&(n.attachments=h),Tn(c,p);return En([...d,...p.eventProcessors],c,n).then((e=>(e&&function(e){const t={};try{e.exception.values.forEach((e=>{e.stacktrace.frames.forEach((e=>{e.debug_id&&(e.abs_path?t[e.abs_path]=e.debug_id:e.filename&&(t[e.filename]=e.debug_id),delete e.debug_id)}))}))}catch(e){}if(0===Object.keys(t).length)return;e.debug_meta=e.debug_meta||{},e.debug_meta.images=e.debug_meta.images||[];const n=e.debug_meta.images;Object.entries(t).forEach((([e,t])=>{n.push({type:\"sourcemap\",code_file:e,debug_id:t})}))}(e),\"number\"==typeof a&&a>0?function(e,t,n){if(!e)return null;const r={...e,...e.breadcrumbs&&{breadcrumbs:e.breadcrumbs.map((e=>({...e,...e.data&&{data:Mt(e.data,t,n)}})))},...e.user&&{user:Mt(e.user,t,n)},...e.contexts&&{contexts:Mt(e.contexts,t,n)},...e.extra&&{extra:Mt(e.extra,t,n)}};e.contexts&&e.contexts.trace&&r.contexts&&(r.contexts.trace=e.contexts.trace,e.contexts.trace.data&&(r.contexts.trace.data=Mt(e.contexts.trace.data,t,n)));e.spans&&(r.spans=e.spans.map((e=>({...e,...e.data&&{data:Mt(e.data,t,n)}}))));return r}(e,a,s):e)))}const jn=new WeakMap;function xn(e){if(e)return function(e){return e instanceof on||\"function\"==typeof e}(e)||function(e){return Object.keys(e).some((e=>Ln.includes(e)))}(e)?{captureContext:e}:e}const Ln=[\"user\",\"level\",\"extra\",\"contexts\",\"tags\",\"fingerprint\",\"requestSession\",\"propagationContext\"];function In(e,t){return pn().captureEvent(e,t)}function Dn(e,t){return n={sentry_key:e.publicKey,sentry_version:\"7\",...t&&{sentry_client:`${t.name}/${t.version}`}},Object.keys(n).map((e=>`${encodeURIComponent(e)}=${encodeURIComponent(n[e])}`)).join(\"&\");var n}const Nn=[];function Rn(e,t){for(const n of t)n&&n.afterAllSetup&&n.afterAllSetup(e)}function Fn(e,t,n){if(n[t.name])Kt&&xe.log(`Integration skipped because it was already installed: ${t.name}`);else{if(n[t.name]=t,-1===Nn.indexOf(t.name)&&\"function\"==typeof t.setupOnce&&(t.setupOnce(),Nn.push(t.name)),t.setup&&\"function\"==typeof t.setup&&t.setup(e),\"function\"==typeof t.preprocessEvent){const n=t.preprocessEvent.bind(t);e.on(\"preprocessEvent\",((t,r)=>n(t,r,e)))}if(\"function\"==typeof t.processEvent){const n=t.processEvent.bind(t),r=Object.assign(((t,r)=>n(t,r,e)),{id:t.name});e.addEventProcessor(r)}Kt&&xe.log(`Integration installed: ${t.name}`)}}const Bn=\"Not capturing exception because it's already been captured.\";class Un{constructor(e){if(this._options=e,this._integrations={},this._numProcessing=0,this._outcomes={},this._hooks={},this._eventProcessors=[],e.dsn?this._dsn=Ne(e.dsn):Kt&&xe.warn(\"No DSN provided, client will not send events.\"),this._dsn){const i=(t=this._dsn,n=e.tunnel,r=e._metadata?e._metadata.sdk:void 0,n||`${function(e){return`${function(e){const t=e.protocol?`${e.protocol}:`:\"\",n=e.port?`:${e.port}`:\"\";return`${t}//${e.host}${n}${e.path?`/${e.path}`:\"\"}/api/`}(e)}${e.projectId}/envelope/`}(t)}?${Dn(t,r)}`);this._transport=e.transport({tunnel:this._options.tunnel,recordDroppedEvent:this.recordDroppedEvent.bind(this),...e.transportOptions,url:i})}var t,n,r}captureException(e,t,n){const r=yt();if(kt(e))return Kt&&xe.log(Bn),r;const i={event_id:r,...t};return this._process(this.eventFromException(e,i).then((e=>this._captureEvent(e,i,n)))),i.event_id}captureMessage(e,t,n,r){const i={event_id:yt(),...n},o=ae(e)?e:String(e),a=se(e)?this.eventFromMessage(o,t,i):this.eventFromException(e,i);return this._process(a.then((e=>this._captureEvent(e,i,r)))),i.event_id}captureEvent(e,t,n){const r=yt();if(t&&t.originalException&&kt(t.originalException))return Kt&&xe.log(Bn),r;const i={event_id:r,...t},o=(e.sdkProcessingMetadata||{}).capturedSpanScope;return this._process(this._captureEvent(e,i,o||n)),i.event_id}captureSession(e){\"string\"!=typeof e.release?Kt&&xe.warn(\"Discarded session because of missing or non-string release\"):(this.sendSession(e),Zt(e,{init:!1}))}getDsn(){return this._dsn}getOptions(){return this._options}getSdkMetadata(){return this._options._metadata}getTransport(){return this._transport}flush(e){const t=this._transport;return t?(this.emit(\"flush\"),this._isClientDoneProcessing(e).then((n=>t.flush(e).then((e=>n&&e))))):Pt(!0)}close(e){return this.flush(e).then((e=>(this.getOptions().enabled=!1,this.emit(\"close\"),e)))}getEventProcessors(){return this._eventProcessors}addEventProcessor(e){this._eventProcessors.push(e)}init(){(this._isEnabled()||this._options.integrations.some((({name:e})=>e.startsWith(\"Spotlight\"))))&&this._setupIntegrations()}getIntegrationByName(e){return this._integrations[e]}addIntegration(e){const t=this._integrations[e.name];Fn(this,e,this._integrations),t||Rn(this,[e])}sendEvent(e,t={}){this.emit(\"beforeSendEvent\",e,t);let n=Cn(e,this._dsn,this._options._metadata,this._options.tunnel);for(const e of t.attachments||[])n=Bt(n,$t(e));const r=this.sendEnvelope(n);r&&r.then((t=>this.emit(\"afterSendEvent\",e,t)),null)}sendSession(e){const t=function(e,t,n,r){const i=zt(n);return Ft({sent_at:(new Date).toISOString(),...i&&{sdk:i},...!!r&&t&&{dsn:Ie(t)}},[\"aggregates\"in e?[{type:\"sessions\"},e]:[{type:\"session\"},e.toJSON()]])}(e,this._dsn,this._options._metadata,this._options.tunnel);this.sendEnvelope(t)}recordDroppedEvent(e,t,n){if(this._options.sendClientReports){const r=\"number\"==typeof n?n:1,i=`${e}:${t}`;Kt&&xe.log(`Recording outcome: \"${i}\"${r>1?` (${r} times)`:\"\"}`),this._outcomes[i]=(this._outcomes[i]||0)+r}}on(e,t){const n=this._hooks[e]=this._hooks[e]||[];return n.push(t),()=>{const e=n.indexOf(t);e>-1&&n.splice(e,1)}}emit(e,...t){const n=this._hooks[e];n&&n.forEach((e=>e(...t)))}sendEnvelope(e){return this.emit(\"beforeEnvelope\",e),this._isEnabled()&&this._transport?this._transport.send(e).then(null,(e=>(Kt&&xe.error(\"Error while sending event:\",e),e))):(Kt&&xe.error(\"Transport disabled\"),Pt({}))}_setupIntegrations(){const{integrations:e}=this._options;this._integrations=function(e,t){const n={};return t.forEach((t=>{t&&Fn(e,t,n)})),n}(this,e),Rn(this,e)}_updateSessionFromEvent(e,t){let n=!1,r=!1;const i=t.exception&&t.exception.values;if(i){r=!0;for(const e of i){const t=e.mechanism;if(t&&!1===t.handled){n=!0;break}}}const o=\"ok\"===e.status;(o&&0===e.errors||o&&n)&&(Zt(e,{...n&&{status:\"crashed\"},errors:e.errors||Number(r||n)}),this.captureSession(e))}_isClientDoneProcessing(e){return new At((t=>{let n=0;const r=setInterval((()=>{0==this._numProcessing?(clearInterval(r),t(!0)):(n+=1,e&&n>=e&&(clearInterval(r),t(!1)))}),1)}))}_isEnabled(){return!1!==this.getOptions().enabled&&void 0!==this._transport}_prepareEvent(e,t,n,r=hn()){const i=this.getOptions(),o=Object.keys(this._integrations);return!t.integrations&&o.length>0&&(t.integrations=o),this.emit(\"preprocessEvent\",e,t),e.type||r.setLastEventId(e.event_id||t.event_id),An(i,e,t,n,this,r).then((e=>{if(null===e)return e;const t={...r.getPropagationContext(),...n?n.getPropagationContext():void 0};if(!(e.contexts&&e.contexts.trace)&&t){const{traceId:n,spanId:r,parentSpanId:i,dsc:o}=t;e.contexts={trace:We({trace_id:n,span_id:r,parent_span_id:i}),...e.contexts};const a=o||kn(n,this);e.sdkProcessingMetadata={dynamicSamplingContext:a,...e.sdkProcessingMetadata}}return e}))}_captureEvent(e,t={},n){return this._processEvent(e,t,n).then((e=>e.event_id),(e=>{if(Kt){const t=e;\"log\"===t.logLevel?xe.log(t.message):xe.warn(t)}}))}_processEvent(e,t,n){const r=this.getOptions(),{sampleRate:i}=r,o=Jn(e),a=Vn(e),s=e.type||\"error\",c=`before send for type \\`${s}\\``,l=void 0===i?void 0:function(e){if(\"boolean\"==typeof e)return Number(e);const t=\"string\"==typeof e?parseFloat(e):e;if(!(\"number\"!=typeof t||isNaN(t)||t<0||t>1))return t;Kt&&xe.warn(`[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(e)} of type ${JSON.stringify(typeof e)}.`)}(i);if(a&&\"number\"==typeof l&&Math.random()>l)return this.recordDroppedEvent(\"sample_rate\",\"error\",e),Ot(new Re(`Discarding event because it's not included in the random sample (sampling rate = ${i})`,\"log\"));const u=\"replay_event\"===s?\"replay\":s,d=(e.sdkProcessingMetadata||{}).capturedSpanIsolationScope;return this._prepareEvent(e,t,n,d).then((n=>{if(null===n)throw this.recordDroppedEvent(\"event_processor\",u,e),new Re(\"An event processor returned `null`, will not send event.\",\"log\");if(t.data&&!0===t.data.__sentry__)return n;const i=function(e,t,n,r){const{beforeSend:i,beforeSendTransaction:o,beforeSendSpan:a}=t;if(Vn(n)&&i)return i(n,r);if(Jn(n)){if(n.spans&&a){const t=[];for(const r of n.spans){const n=a(r);n?t.push(n):e.recordDroppedEvent(\"before_send\",\"span\")}n.spans=t}if(o){if(n.spans){const e=n.spans.length;n.sdkProcessingMetadata={...n.sdkProcessingMetadata,spanCountBeforeProcessing:e}}return o(n,r)}}return n}(this,r,n,t);return function(e,t){const n=`${t} must return \\`null\\` or a valid event.`;if(ue(e))return e.then((e=>{if(!ce(e)&&null!==e)throw new Re(n);return e}),(e=>{throw new Re(`${t} rejected with ${e}`)}));if(!ce(e)&&null!==e)throw new Re(n);return e}(i,c)})).then((r=>{if(null===r){if(this.recordDroppedEvent(\"before_send\",u,e),o){const t=1+(e.spans||[]).length;this.recordDroppedEvent(\"before_send\",\"span\",t)}throw new Re(`${c} returned \\`null\\`, will not send event.`,\"log\")}const i=n&&n.getSession();if(!o&&i&&this._updateSessionFromEvent(i,r),o){const e=(r.sdkProcessingMetadata&&r.sdkProcessingMetadata.spanCountBeforeProcessing||0)-(r.spans?r.spans.length:0);e>0&&this.recordDroppedEvent(\"before_send\",\"span\",e)}const a=r.transaction_info;if(o&&a&&r.transaction!==e.transaction){const e=\"custom\";r.transaction_info={...a,source:e}}return this.sendEvent(r,t),r})).then(null,(e=>{if(e instanceof Re)throw e;throw this.captureException(e,{data:{__sentry__:!0},originalException:e}),new Re(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${e}`)}))}_process(e){this._numProcessing++,e.then((e=>(this._numProcessing--,e)),(e=>(this._numProcessing--,e)))}_clearOutcomes(){const e=this._outcomes;return this._outcomes={},Object.entries(e).map((([e,t])=>{const[n,r]=e.split(\":\");return{reason:n,category:r,quantity:t}}))}_flushOutcomes(){Kt&&xe.log(\"Flushing outcomes...\");const e=this._clearOutcomes();if(0===e.length)return void(Kt&&xe.log(\"No outcomes to send\"));if(!this._dsn)return void(Kt&&xe.log(\"No dsn provided, will not send outcomes\"));Kt&&xe.log(\"Sending outcomes:\",e);const t=(n=e,Ft((r=this._options.tunnel&&Ie(this._dsn))?{dsn:r}:{},[[{type:\"client_report\"},{timestamp:i||lt(),discarded_events:n}]]));var n,r,i;this.sendEnvelope(t)}}function Vn(e){return void 0===e.type}function Jn(e){return\"transaction\"===e.type}function $n(e,t,n=jt(e.bufferSize||64)){let r={};return{send:function(i){const o=[];if(Ut(i,((t,n)=>{const i=Wt(n);if(function(e,t,n=Date.now()){return function(e,t){return e[t]||e.all||0}(e,t)>n}(r,i)){const r=qn(t,n);e.recordDroppedEvent(\"ratelimit_backoff\",i,r)}else o.push(t)})),0===o.length)return Pt({});const a=Ft(i[0],o),s=t=>{Ut(a,((n,r)=>{const i=qn(n,r);e.recordDroppedEvent(t,Wt(r),i)}))};return n.add((()=>t({body:Jt(a)}).then((e=>(void 0!==e.statusCode&&(e.statusCode<200||e.statusCode>=300)&&Kt&&xe.warn(`Sentry responded with status code ${e.statusCode} to sent event.`),r=Ht(r,e),e)),(e=>{throw s(\"network_error\"),e})))).then((e=>e),(e=>{if(e instanceof Re)return Kt&&xe.error(\"Skipped sending event because buffer is full.\"),s(\"queue_overflow\"),Pt({});throw e}))},flush:e=>n.drain(e)}}function qn(e,t){if(\"event\"===t||\"transaction\"===t)return Array.isArray(e)?e[1]:void 0}const Wn=100;function zn(e,t){const n=fn(),r=hn();if(!n)return;const{beforeBreadcrumb:i=null,maxBreadcrumbs:o=Wn}=n.getOptions();if(o<=0)return;const a={timestamp:lt(),...e},s=i?je((()=>i(a,t))):a;null!==s&&(n.emit&&n.emit(\"beforeAddBreadcrumb\",s,t),r.addBreadcrumb(s,o))}let Hn;const Gn=new WeakMap,Qn=()=>({name:\"FunctionToString\",setupOnce(){Hn=Function.prototype.toString;try{Function.prototype.toString=function(...e){const t=Ve(this),n=Gn.has(fn())&&void 0!==t?t:this;return Hn.apply(n,e)}}catch(e){}},setup(e){Gn.set(e,!0)}}),Kn=[/^Script error\\.?$/,/^Javascript error: Script error\\.? on line 0$/,/^ResizeObserver loop completed with undelivered notifications.$/,/^Cannot redefine property: googletag$/,\"undefined is not an object (evaluating 'a.L')\",'can\\'t redefine non-configurable property \"solana\"',\"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)\",\"Can't find variable: _AutofillCallbackHandler\"],Yn=(e={})=>({name:\"InboundFilters\",processEvent(t,n,r){const i=r.getOptions(),o=function(e={},t={}){return{allowUrls:[...e.allowUrls||[],...t.allowUrls||[]],denyUrls:[...e.denyUrls||[],...t.denyUrls||[]],ignoreErrors:[...e.ignoreErrors||[],...t.ignoreErrors||[],...e.disableErrorDefaults?[]:Kn],ignoreTransactions:[...e.ignoreTransactions||[],...t.ignoreTransactions||[]],ignoreInternal:void 0===e.ignoreInternal||e.ignoreInternal}}(e,i);return function(e,t){if(t.ignoreInternal&&function(e){try{return\"SentryError\"===e.exception.values[0].type}catch(e){}return!1}(e))return Kt&&xe.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${bt(e)}`),!0;if(function(e,t){if(e.type||!t||!t.length)return!1;return function(e){const t=[];e.message&&t.push(e.message);let n;try{n=e.exception.values[e.exception.values.length-1]}catch(e){}n&&n.value&&(t.push(n.value),n.type&&t.push(`${n.type}: ${n.value}`));return t}(e).some((e=>me(e,t)))}(e,t.ignoreErrors))return Kt&&xe.warn(`Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${bt(e)}`),!0;if(function(e){if(e.type)return!1;if(!e.exception||!e.exception.values||0===e.exception.values.length)return!1;return!e.message&&!e.exception.values.some((e=>e.stacktrace||e.type&&\"Error\"!==e.type||e.value))}(e))return Kt&&xe.warn(`Event dropped due to not having an error message, error type or stacktrace.\\nEvent: ${bt(e)}`),!0;if(function(e,t){if(\"transaction\"!==e.type||!t||!t.length)return!1;const n=e.transaction;return!!n&&me(n,t)}(e,t.ignoreTransactions))return Kt&&xe.warn(`Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${bt(e)}`),!0;if(function(e,t){if(!t||!t.length)return!1;const n=Xn(e);return!!n&&me(n,t)}(e,t.denyUrls))return Kt&&xe.warn(`Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${bt(e)}.\\nUrl: ${Xn(e)}`),!0;if(!function(e,t){if(!t||!t.length)return!0;const n=Xn(e);return!n||me(n,t)}(e,t.allowUrls))return Kt&&xe.warn(`Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${bt(e)}.\\nUrl: ${Xn(e)}`),!0;return!1}(t,o)?null:t}});function Xn(e){try{let t;try{t=e.exception.values[0].stacktrace.frames}catch(e){}return t?function(e=[]){for(let t=e.length-1;t>=0;t--){const n=e[t];if(n&&\"<anonymous>\"!==n.filename&&\"[native code]\"!==n.filename)return n.filename||null}return null}(t):null}catch(t){return Kt&&xe.error(`Cannot extract url for event ${bt(e)}`),null}}const Zn=()=>{let e;return{name:\"Dedupe\",processEvent(t){if(t.type)return t;try{if(function(e,t){if(!t)return!1;if(function(e,t){const n=e.message,r=t.message;if(!n&&!r)return!1;if(n&&!r||!n&&r)return!1;if(n!==r)return!1;if(!tr(e,t))return!1;if(!er(e,t))return!1;return!0}(e,t))return!0;if(function(e,t){const n=nr(t),r=nr(e);if(!n||!r)return!1;if(n.type!==r.type||n.value!==r.value)return!1;if(!tr(e,t))return!1;if(!er(e,t))return!1;return!0}(e,t))return!0;return!1}(t,e))return Kt&&xe.warn(\"Event dropped due to being a duplicate of previously captured event.\"),null}catch(e){}return e=t}}};function er(e,t){let n=Ze(e),r=Ze(t);if(!n&&!r)return!0;if(n&&!r||!n&&r)return!1;if(r.length!==n.length)return!1;for(let e=0;e<r.length;e++){const t=r[e],i=n[e];if(t.filename!==i.filename||t.lineno!==i.lineno||t.colno!==i.colno||t.function!==i.function)return!1}return!0}function tr(e,t){let n=e.fingerprint,r=t.fingerprint;if(!n&&!r)return!0;if(n&&!r||!n&&r)return!1;try{return!(n.join(\"\")!==r.join(\"\"))}catch(e){return!1}}function nr(e){return e.exception&&e.exception.values&&e.exception.values[0]}const rr=ke;let ir=0;function or(){return ir>0}function ar(e,t={},n){if(\"function\"!=typeof e)return e;try{const t=e.__sentry_wrapped__;if(t)return\"function\"==typeof t?t:e;if(Ve(e))return e}catch(t){return e}const r=function(){const r=Array.prototype.slice.call(arguments);try{n&&\"function\"==typeof n&&n.apply(this,arguments);const i=r.map((e=>ar(e,t)));return e.apply(this,i)}catch(e){throw ir++,setTimeout((()=>{ir--})),function(...e){const t=dn(Yt());if(2===e.length){const[n,r]=e;return n?t.withSetScope(n,r):t.withScope(r)}t.withScope(e[0])}((n=>{var i,o;n.addEventProcessor((e=>(t.mechanism&&(wt(e,void 0,void 0),St(e,t.mechanism)),e.extra={...e.extra,arguments:r},e))),i=e,pn().captureException(i,xn(o))})),e}};try{for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(r[t]=e[t])}catch(e){}Ue(r,e),Be(e,\"__sentry_wrapped__\",r);try{Object.getOwnPropertyDescriptor(r,\"name\").configurable&&Object.defineProperty(r,\"name\",{get:()=>e.name})}catch(e){}return r}const sr=\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__;function cr(e,t){const n=dr(e,t),r={type:t&&t.name,value:hr(t)};return n.length&&(r.stacktrace={frames:n}),void 0===r.type&&\"\"===r.value&&(r.value=\"Unrecoverable error caught\"),r}function lr(e,t,n,r){const i=fn(),o=i&&i.getOptions().normalizeDepth,a=function(e){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)){const n=e[t];if(n instanceof Error)return n}return}(t),s={__serialized__:Ct(t,o)};if(a)return{exception:{values:[cr(e,a)]},extra:s};const c={exception:{values:[{type:le(t)?t.constructor.name:r?\"UnhandledRejection\":\"Error\",value:mr(t,{isUnhandledRejection:r})}]},extra:s};if(n){const t=dr(e,n);t.length&&(c.exception.values[0].stacktrace={frames:t})}return c}function ur(e,t){return{exception:{values:[cr(e,t)]}}}function dr(e,t){const n=t.stacktrace||t.stack||\"\",r=function(e){if(e&&pr.test(e.message))return 1;return 0}(t),i=function(e){if(\"number\"==typeof e.framesToPop)return e.framesToPop;return 0}(t);try{return e(n,r,i)}catch(e){}return[]}const pr=/Minified React error #\\d+;/i;function hr(e){const t=e&&e.message;return t?t.error&&\"string\"==typeof t.error.message?t.error.message:t:\"No error message\"}function fr(e,t,n,r,i){let o;if(re(t)&&t.error){return ur(e,t.error)}if(ie(t)||ne(t,\"DOMException\")){const i=t;if(\"stack\"in t)o=ur(e,t);else{const t=i.name||(ie(i)?\"DOMError\":\"DOMException\"),a=i.message?`${t}: ${i.message}`:t;o=vr(e,a,n,r),wt(o,a)}return\"code\"in i&&(o.tags={...o.tags,\"DOMException.code\":`${i.code}`}),o}if(te(t))return ur(e,t);if(ce(t)||le(t)){return o=lr(e,t,n,i),St(o,{synthetic:!0}),o}return o=vr(e,t,n,r),wt(o,`${t}`,void 0),St(o,{synthetic:!0}),o}function vr(e,t,n,r){const i={};if(r&&n){const r=dr(e,n);r.length&&(i.exception={values:[{value:t,stacktrace:{frames:r}}]})}if(ae(t)){const{__sentry_template_string__:e,__sentry_template_values__:n}=t;return i.logentry={message:e,params:n},i}return i.message=t,i}function mr(e,{isUnhandledRejection:t}){const n=function(e,t=40){const n=Object.keys(Je(e));n.sort();const r=n[0];if(!r)return\"[object has no keys]\";if(r.length>=t)return he(r,t);for(let e=n.length;e>0;e--){const r=n.slice(0,e).join(\", \");if(!(r.length>t))return e===n.length?r:he(r,t)}return\"\"}(e),r=t?\"promise rejection\":\"exception\";if(re(e))return`Event \\`ErrorEvent\\` captured as ${r} with message \\`${e.message}\\``;if(le(e)){return`Event \\`${function(e){try{const t=Object.getPrototypeOf(e);return t?t.constructor.name:void 0}catch(e){}}(e)}\\` (type=${e.type}) captured as ${r}`}return`Object captured as ${r} with keys: ${n}`}class gr extends Un{constructor(e){const t={parentSpanIsAlwaysRootSpan:!0,...e};!function(e,t,n=[t],r=\"npm\"){const i=e._metadata||{};i.sdk||(i.sdk={name:`sentry.javascript.${t}`,packages:n.map((e=>({name:`${r}:@sentry/${e}`,version:Se}))),version:Se}),e._metadata=i}(t,\"browser\",[\"browser\"],rr.SENTRY_SDK_SOURCE||\"npm\"),super(t),t.sendClientReports&&rr.document&&rr.document.addEventListener(\"visibilitychange\",(()=>{\"hidden\"===rr.document.visibilityState&&this._flushOutcomes()}))}eventFromException(e,t){return function(e,t,n,r){const i=fr(e,t,n&&n.syntheticException||void 0,r);return St(i),i.level=\"error\",n&&n.event_id&&(i.event_id=n.event_id),Pt(i)}(this._options.stackParser,e,t,this._options.attachStacktrace)}eventFromMessage(e,t=\"info\",n){return function(e,t,n=\"info\",r,i){const o=vr(e,t,r&&r.syntheticException||void 0,i);return o.level=n,r&&r.event_id&&(o.event_id=r.event_id),Pt(o)}(this._options.stackParser,e,t,n,this._options.attachStacktrace)}captureUserFeedback(e){if(!this._isEnabled())return void(sr&&xe.warn(\"SDK not enabled, will not capture user feedback.\"));const t=function(e,{metadata:t,tunnel:n,dsn:r}){const i={event_id:e.event_id,sent_at:(new Date).toISOString(),...t&&t.sdk&&{sdk:{name:t.sdk.name,version:t.sdk.version}},...!!n&&!!r&&{dsn:Ie(r)}},o=function(e){return[{type:\"user_report\"},e]}(e);return Ft(i,[o])}(e,{metadata:this.getSdkMetadata(),dsn:this.getDsn(),tunnel:this.getOptions().tunnel});this.sendEnvelope(t)}_prepareEvent(e,t,n){return e.platform=e.platform||\"javascript\",super._prepareEvent(e,t,n)}}const yr=\"undefined\"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__,_r=ke;let br,wr,Sr,kr;function Mr(){if(!_r.document)return;const e=it.bind(null,\"dom\"),t=Cr(e,!0);_r.document.addEventListener(\"click\",t,!1),_r.document.addEventListener(\"keypress\",t,!1),[\"EventTarget\",\"Node\"].forEach((t=>{const n=_r[t]&&_r[t].prototype;n&&n.hasOwnProperty&&n.hasOwnProperty(\"addEventListener\")&&(Fe(n,\"addEventListener\",(function(t){return function(n,r,i){if(\"click\"===n||\"keypress\"==n)try{const r=this,o=r.__sentry_instrumentation_handlers__=r.__sentry_instrumentation_handlers__||{},a=o[n]=o[n]||{refCount:0};if(!a.handler){const r=Cr(e);a.handler=r,t.call(this,n,r,i)}a.refCount++}catch(e){}return t.call(this,n,r,i)}})),Fe(n,\"removeEventListener\",(function(e){return function(t,n,r){if(\"click\"===t||\"keypress\"==t)try{const n=this,i=n.__sentry_instrumentation_handlers__||{},o=i[t];o&&(o.refCount--,o.refCount<=0&&(e.call(this,t,o.handler,r),o.handler=void 0,delete i[t]),0===Object.keys(i).length&&delete n.__sentry_instrumentation_handlers__)}catch(e){}return e.call(this,t,n,r)}})))}))}function Cr(e,t=!1){return n=>{if(!n||n._sentryCaptured)return;const r=function(e){try{return e.target}catch(e){return null}}(n);if(function(e,t){return\"keypress\"===e&&(!t||!t.tagName||\"INPUT\"!==t.tagName&&\"TEXTAREA\"!==t.tagName&&!t.isContentEditable)}(n.type,r))return;Be(n,\"_sentryCaptured\",!0),r&&!r._sentryId&&Be(r,\"_sentryId\",yt());const i=\"keypress\"===n.type?\"input\":n.type;if(!function(e){if(e.type!==wr)return!1;try{if(!e.target||e.target._sentryId!==Sr)return!1}catch(e){}return!0}(n)){e({event:n,name:i,global:t}),wr=n.type,Sr=r?r._sentryId:void 0}clearTimeout(br),br=_r.setTimeout((()=>{Sr=void 0,wr=void 0}),1e3)}}function Er(){if(!function(){const e=Qt.chrome,t=e&&e.app&&e.app.runtime,n=\"history\"in Qt&&!!Qt.history.pushState&&!!Qt.history.replaceState;return!t&&n}())return;const e=_r.onpopstate;function t(e){return function(...t){const n=t.length>2?t[2]:void 0;if(n){const e=kr,t=String(n);kr=t;it(\"history\",{from:e,to:t})}return e.apply(this,t)}}_r.onpopstate=function(...t){const n=_r.location.href,r=kr;kr=n;if(it(\"history\",{from:r,to:n}),e)try{return e.apply(this,t)}catch(e){}},Fe(_r.history,\"pushState\",t),Fe(_r.history,\"replaceState\",t)}const Tr={};function Pr(e){Tr[e]=void 0}const Or=\"__sentry_xhr_v3__\";function Ar(){if(!_r.XMLHttpRequest)return;const e=XMLHttpRequest.prototype;e.open=new Proxy(e.open,{apply(e,t,n){const r=1e3*ut(),i=oe(n[0])?n[0].toUpperCase():void 0,o=function(e){if(oe(e))return e;try{return e.toString()}catch(e){}return}(n[1]);if(!i||!o)return e.apply(t,n);t[Or]={method:i,url:o,request_headers:{}},\"POST\"===i&&o.match(/sentry_key/)&&(t.__sentry_own_request__=!0);const a=()=>{const e=t[Or];if(e&&4===t.readyState){try{e.status_code=t.status}catch(e){}it(\"xhr\",{endTimestamp:1e3*ut(),startTimestamp:r,xhr:t})}};return\"onreadystatechange\"in t&&\"function\"==typeof t.onreadystatechange?t.onreadystatechange=new Proxy(t.onreadystatechange,{apply:(e,t,n)=>(a(),e.apply(t,n))}):t.addEventListener(\"readystatechange\",a),t.setRequestHeader=new Proxy(t.setRequestHeader,{apply(e,t,n){const[r,i]=n,o=t[Or];return o&&oe(r)&&oe(i)&&(o.request_headers[r.toLowerCase()]=i),e.apply(t,n)}}),e.apply(t,n)}}),e.send=new Proxy(e.send,{apply(e,t,n){const r=t[Or];if(!r)return e.apply(t,n);void 0!==n[0]&&(r.body=n[0]);return it(\"xhr\",{startTimestamp:1e3*ut(),xhr:t}),e.apply(t,n)}})}function jr(e,t=function(e){const t=Tr[e];if(t)return t;let n=_r[e];if(st(n))return Tr[e]=n.bind(_r);const r=_r.document;if(r&&\"function\"==typeof r.createElement)try{const t=r.createElement(\"iframe\");t.hidden=!0,r.head.appendChild(t);const i=t.contentWindow;i&&i[e]&&(n=i[e]),r.head.removeChild(t)}catch(t){yr&&xe.warn(`Could not create sandbox iframe for ${e} check, bailing to window.${e}: `,t)}return n?Tr[e]=n.bind(_r):n}(\"fetch\")){let n=0,r=0;return $n(e,(function(i){const o=i.body.length;n+=o,r++;const a={body:i.body,method:\"POST\",referrerPolicy:\"origin\",headers:e.headers,keepalive:n<=6e4&&r<15,...e.fetchOptions};if(!t)return Pr(\"fetch\"),Ot(\"No fetch implementation available\");try{return t(e.url,a).then((e=>(n-=o,r--,{statusCode:e.status,headers:{\"x-sentry-rate-limits\":e.headers.get(\"X-Sentry-Rate-Limits\"),\"retry-after\":e.headers.get(\"Retry-After\")}})))}catch(e){return Pr(\"fetch\"),n-=o,r--,Ot(e)}}))}function xr(e,t,n,r){const i={filename:e,function:\"<anonymous>\"===t?He:t,in_app:!0};return void 0!==n&&(i.lineno=n),void 0!==r&&(i.colno=r),i}const Lr=/^\\s*at (\\S+?)(?::(\\d+))(?::(\\d+))\\s*$/i,Ir=/^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,Dr=/\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/,Nr=/^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i,Rr=/(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i,Fr=function(...e){const t=e.sort(((e,t)=>e[0]-t[0])).map((e=>e[1]));return(e,n=0,r=0)=>{const i=[],o=e.split(\"\\n\");for(let e=n;e<o.length;e++){const n=o[e];if(n.length>1024)continue;const a=Ge.test(n)?n.replace(Ge,\"$1\"):n;if(!a.match(/\\S*Error: /)){for(const e of t){const t=e(a);if(t){i.push(t);break}}if(i.length>=50+r)break}}return function(e){if(!e.length)return[];const t=Array.from(e);/sentryWrapped/.test(Ke(t).function||\"\")&&t.pop();t.reverse(),Qe.test(Ke(t).function||\"\")&&(t.pop(),Qe.test(Ke(t).function||\"\")&&t.pop());return t.slice(0,50).map((e=>({...e,filename:e.filename||Ke(t).filename,function:e.function||He})))}(i.slice(r))}}(...[[30,e=>{const t=Lr.exec(e);if(t){const[,e,n,r]=t;return xr(e,He,+n,+r)}const n=Ir.exec(e);if(n){if(n[2]&&0===n[2].indexOf(\"eval\")){const e=Dr.exec(n[2]);e&&(n[2]=e[1],n[3]=e[2],n[4]=e[3])}const[e,t]=Br(n[1]||He,n[2]);return xr(t,e,n[3]?+n[3]:void 0,n[4]?+n[4]:void 0)}}],[50,e=>{const t=Nr.exec(e);if(t){if(t[3]&&t[3].indexOf(\" > eval\")>-1){const e=Rr.exec(t[3]);e&&(t[1]=t[1]||\"eval\",t[3]=e[1],t[4]=e[2],t[5]=\"\")}let e=t[3],n=t[1]||He;return[n,e]=Br(n,e),xr(e,n,t[4]?+t[4]:void 0,t[5]?+t[5]:void 0)}}]]),Br=(e,t)=>{const n=-1!==e.indexOf(\"safari-extension\"),r=-1!==e.indexOf(\"safari-web-extension\");return n||r?[-1!==e.indexOf(\"@\")?e.split(\"@\")[0]:He,n?`safari-extension:${t}`:`safari-web-extension:${t}`]:[e,t]},Ur=1024,Vr=(e={})=>{const t={console:!0,dom:!0,fetch:!0,history:!0,sentry:!0,xhr:!0,...e};return{name:\"Breadcrumbs\",setup(e){var n;t.console&&function(e){const t=\"console\";nt(t,e),rt(t,ot)}(function(e){return function(t){if(fn()!==e)return;const n={category:\"console\",data:{arguments:t.args,logger:\"console\"},level:It(t.level),message:fe(t.args,\" \")};if(\"assert\"===t.level){if(!1!==t.args[0])return;n.message=`Assertion failed: ${fe(t.args.slice(1),\" \")||\"console.assert\"}`,n.data.arguments=t.args.slice(1)}zn(n,{input:t.args,level:t.level})}}(e)),t.dom&&(n=function(e,t){return function(n){if(fn()!==e)return;let r,i,o=\"object\"==typeof t?t.serializeAttribute:void 0,a=\"object\"==typeof t&&\"number\"==typeof t.maxStringLength?t.maxStringLength:void 0;a&&a>Ur&&(sr&&xe.warn(`\\`dom.maxStringLength\\` cannot exceed 1024, but a value of ${a} was configured. Sentry will use 1024 instead.`),a=Ur),\"string\"==typeof o&&(o=[o]);try{const e=n.event,t=function(e){return!!e&&!!e.target}(e)?e.target:e;r=Ee(t,{keyAttrs:o,maxStringLength:a}),i=function(e){if(!Ce.HTMLElement)return null;let t=e;for(let e=0;e<5;e++){if(!t)return null;if(t instanceof HTMLElement){if(t.dataset.sentryComponent)return t.dataset.sentryComponent;if(t.dataset.sentryElement)return t.dataset.sentryElement}t=t.parentNode}return null}(t)}catch(e){r=\"<unknown>\"}if(0===r.length)return;const s={category:`ui.${n.name}`,message:r};i&&(s.data={\"ui.component_name\":i}),zn(s,{event:n.event,name:n.name,global:n.global})}}(e,t.dom),nt(\"dom\",n),rt(\"dom\",Mr)),t.xhr&&function(e){nt(\"xhr\",e),rt(\"xhr\",Ar)}(function(e){return function(t){if(fn()!==e)return;const{startTimestamp:n,endTimestamp:r}=t,i=t.xhr[Or];if(!n||!r||!i)return;const{method:o,url:a,status_code:s,body:c}=i,l={method:o,url:a,status_code:s},u={xhr:t.xhr,input:c,startTimestamp:n,endTimestamp:r};zn({category:\"xhr\",data:l,type:\"http\",level:we(s)},u)}}(e)),t.fetch&&dt(function(e){return function(t){if(fn()!==e)return;const{startTimestamp:n,endTimestamp:r}=t;if(r&&(!t.fetchData.url.match(/sentry_key/)||\"POST\"!==t.fetchData.method))if(t.error){zn({category:\"fetch\",data:t.fetchData,level:\"error\",type:\"http\"},{data:t.error,input:t.args,startTimestamp:n,endTimestamp:r})}else{const e=t.response,i={...t.fetchData,status_code:e&&e.status},o={input:t.args,response:e,startTimestamp:n,endTimestamp:r};zn({category:\"fetch\",data:i,type:\"http\",level:we(i.status_code)},o)}}}(e)),t.history&&function(e){const t=\"history\";nt(t,e),rt(t,Er)}(function(e){return function(t){if(fn()!==e)return;let n=t.from,r=t.to;const i=xt(rr.location.href);let o=n?xt(n):void 0;const a=xt(r);o&&o.path||(o=i),i.protocol===a.protocol&&i.host===a.host&&(r=a.relative),i.protocol===o.protocol&&i.host===o.host&&(n=o.relative),zn({category:\"navigation\",data:{from:n,to:r}})}}(e)),t.sentry&&e.on(\"beforeSendEvent\",function(e){return function(t){fn()===e&&zn({category:\"sentry.\"+(\"transaction\"===t.type?\"transaction\":\"event\"),event_id:t.event_id,level:t.level,message:bt(t)},{event:t})}}(e))}}};const Jr=[\"EventTarget\",\"Window\",\"Node\",\"ApplicationCache\",\"AudioTrackList\",\"BroadcastChannel\",\"ChannelMergerNode\",\"CryptoOperation\",\"EventSource\",\"FileReader\",\"HTMLUnknownElement\",\"IDBDatabase\",\"IDBRequest\",\"IDBTransaction\",\"KeyOperation\",\"MediaController\",\"MessagePort\",\"ModalWindow\",\"Notification\",\"SVGElementInstance\",\"Screen\",\"SharedWorker\",\"TextTrack\",\"TextTrackCue\",\"TextTrackList\",\"WebSocket\",\"WebSocketWorker\",\"Worker\",\"XMLHttpRequest\",\"XMLHttpRequestEventTarget\",\"XMLHttpRequestUpload\"],$r=(e={})=>{const t={XMLHttpRequest:!0,eventTarget:!0,requestAnimationFrame:!0,setInterval:!0,setTimeout:!0,...e};return{name:\"BrowserApiErrors\",setupOnce(){t.setTimeout&&Fe(rr,\"setTimeout\",qr),t.setInterval&&Fe(rr,\"setInterval\",qr),t.requestAnimationFrame&&Fe(rr,\"requestAnimationFrame\",Wr),t.XMLHttpRequest&&\"XMLHttpRequest\"in rr&&Fe(XMLHttpRequest.prototype,\"send\",zr);const e=t.eventTarget;if(e){(Array.isArray(e)?e:Jr).forEach(Hr)}}}};function qr(e){return function(...t){const n=t[0];return t[0]=ar(n,{mechanism:{data:{function:Xe(e)},handled:!1,type:\"instrument\"}}),e.apply(this,t)}}function Wr(e){return function(t){return e.apply(this,[ar(t,{mechanism:{data:{function:\"requestAnimationFrame\",handler:Xe(e)},handled:!1,type:\"instrument\"}})])}}function zr(e){return function(...t){const n=this;return[\"onload\",\"onerror\",\"onprogress\",\"onreadystatechange\"].forEach((e=>{e in n&&\"function\"==typeof n[e]&&Fe(n,e,(function(t){const n={mechanism:{data:{function:e,handler:Xe(t)},handled:!1,type:\"instrument\"}},r=Ve(t);return r&&(n.mechanism.data.handler=Xe(r)),ar(t,n)}))})),e.apply(this,t)}}function Hr(e){const t=rr,n=t[e]&&t[e].prototype;n&&n.hasOwnProperty&&n.hasOwnProperty(\"addEventListener\")&&(Fe(n,\"addEventListener\",(function(t){return function(n,r,i){try{\"function\"==typeof r.handleEvent&&(r.handleEvent=ar(r.handleEvent,{mechanism:{data:{function:\"handleEvent\",handler:Xe(r),target:e},handled:!1,type:\"instrument\"}}))}catch(e){}return t.apply(this,[n,ar(r,{mechanism:{data:{function:\"addEventListener\",handler:Xe(r),target:e},handled:!1,type:\"instrument\"}}),i])}})),Fe(n,\"removeEventListener\",(function(e){return function(t,n,r){const i=n;try{const n=i&&i.__sentry_wrapped__;n&&e.call(this,t,n,r)}catch(e){}return e.call(this,t,i,r)}})))}const Gr=(e={})=>{const t={onerror:!0,onunhandledrejection:!0,...e};return{name:\"GlobalHandlers\",setupOnce(){Error.stackTraceLimit=50},setup(e){t.onerror&&(!function(e){!function(e){const t=\"error\";nt(t,e),rt(t,vt)}((t=>{const{stackParser:n,attachStacktrace:r}=Kr();if(fn()!==e||or())return;const{msg:i,url:o,line:a,column:s,error:c}=t,l=function(e,t,n,r){const i=e.exception=e.exception||{},o=i.values=i.values||[],a=o[0]=o[0]||{},s=a.stacktrace=a.stacktrace||{},c=s.frames=s.frames||[],l=isNaN(parseInt(r,10))?void 0:r,u=isNaN(parseInt(n,10))?void 0:n,d=oe(t)&&t.length>0?t:function(){try{return Ce.document.location.href}catch(e){return\"\"}}();0===c.length&&c.push({colno:l,filename:d,function:He,in_app:!0,lineno:u});return e}(fr(n,c||i,void 0,r,!1),o,a,s);l.level=\"error\",In(l,{originalException:c,mechanism:{handled:!1,type:\"onerror\"}})}))}(e),Qr(\"onerror\")),t.onunhandledrejection&&(!function(e){!function(e){const t=\"unhandledrejection\";nt(t,e),rt(t,gt)}((t=>{const{stackParser:n,attachStacktrace:r}=Kr();if(fn()!==e||or())return;const i=function(e){if(se(e))return e;try{if(\"reason\"in e)return e.reason;if(\"detail\"in e&&\"reason\"in e.detail)return e.detail.reason}catch(e){}return e}(t),o=se(i)?{exception:{values:[{type:\"UnhandledRejection\",value:`Non-Error promise rejection captured with value: ${String(i)}`}]}}:fr(n,i,void 0,r,!0);o.level=\"error\",In(o,{originalException:i,mechanism:{handled:!1,type:\"onunhandledrejection\"}})}))}(e),Qr(\"onunhandledrejection\"))}}};function Qr(e){sr&&xe.log(`Global Handler attached: ${e}`)}function Kr(){const e=fn();return e&&e.getOptions()||{stackParser:()=>[],attachStacktrace:!1}}const Yr=()=>({name:\"HttpContext\",preprocessEvent(e){if(!rr.navigator&&!rr.location&&!rr.document)return;const t=e.request&&e.request.url||rr.location&&rr.location.href,{referrer:n}=rr.document||{},{userAgent:r}=rr.navigator||{},i={...e.request&&e.request.headers,...n&&{Referer:n},...r&&{\"User-Agent\":r}},o={...e.request,...t&&{url:t},headers:i};e.request=o}}),Xr=(e={})=>{const t=e.limit||5,n=e.key||\"cause\";return{name:\"LinkedErrors\",preprocessEvent(e,r,i){const o=i.getOptions();ge(cr,o.stackParser,o.maxValueLength,n,t,e,r)}}};var Zr=\"new\",ei=\"loading\",ti=\"loaded\",ni=\"joining-meeting\",ri=\"joined-meeting\",ii=\"left-meeting\",oi=\"error\",ai=\"blocked\",si=\"off\",ci=\"sendable\",li=\"loading\",ui=\"interrupted\",di=\"playable\",pi=\"unknown\",hi=\"full\",fi=\"lobby\",vi=\"none\",mi=\"base\",gi=\"*\",yi=\"ejected\",_i=\"nbf-room\",bi=\"nbf-token\",wi=\"exp-room\",Si=\"exp-token\",ki=\"no-room\",Mi=\"meeting-full\",Ci=\"end-of-life\",Ei=\"not-allowed\",Ti=\"connection-error\",Pi=\"cam-in-use\",Oi=\"mic-in-use\",Ai=\"cam-mic-in-use\",ji=\"permissions\",xi=\"undefined-mediadevices\",Li=\"not-found\",Ii=\"constraints\",Di=\"unknown\",Ni=\"iframe-ready-for-launch-config\",Ri=\"iframe-launch-config\",Fi=\"theme-updated\",Bi=\"loading\",Ui=\"load-attempt-failed\",Vi=\"loaded\",Ji=\"started-camera\",$i=\"camera-error\",qi=\"joining-meeting\",Wi=\"joined-meeting\",zi=\"left-meeting\",Hi=\"participant-joined\",Gi=\"participant-updated\",Qi=\"participant-left\",Ki=\"participant-counts-updated\",Yi=\"access-state-updated\",Xi=\"meeting-session-summary-updated\",Zi=\"meeting-session-state-updated\",eo=\"meeting-session-data-error\",to=\"waiting-participant-added\",no=\"waiting-participant-updated\",ro=\"waiting-participant-removed\",io=\"track-started\",oo=\"track-stopped\",ao=\"transcription-started\",so=\"transcription-stopped\",co=\"transcription-error\",lo=\"recording-started\",uo=\"recording-stopped\",po=\"recording-stats\",ho=\"recording-error\",fo=\"recording-upload-completed\",vo=\"recording-data\",mo=\"app-message\",go=\"transcription-message\",yo=\"remote-media-player-started\",_o=\"remote-media-player-updated\",bo=\"remote-media-player-stopped\",wo=\"local-screen-share-started\",So=\"local-screen-share-stopped\",ko=\"local-screen-share-canceled\",Mo=\"active-speaker-change\",Co=\"active-speaker-mode-change\",Eo=\"network-quality-change\",To=\"network-connection\",Po=\"cpu-load-change\",Oo=\"face-counts-updated\",Ao=\"fullscreen\",jo=\"exited-fullscreen\",xo=\"live-streaming-started\",Lo=\"live-streaming-updated\",Io=\"live-streaming-stopped\",Do=\"live-streaming-error\",No=\"lang-updated\",Ro=\"receive-settings-updated\",Fo=\"input-settings-updated\",Bo=\"nonfatal-error\",Uo=\"error\",Vo=4096,Jo=102400,$o=\"iframe-call-message\",qo=\"local-screen-start\",Wo=\"daily-method-update-live-streaming-endpoints\",zo=\"transmit-log\",Ho=\"daily-custom-track\",Go={NONE:\"none\",BGBLUR:\"background-blur\",BGIMAGE:\"background-image\",FACE_DETECTION:\"face-detection\"},Qo={NONE:\"none\",NOISE_CANCELLATION:\"noise-cancellation\"},Ko={PLAY:\"play\",PAUSE:\"pause\"},Yo=[\"jpg\",\"png\",\"jpeg\"],Xo=\"add-endpoints\",Zo=\"remove-endpoints\",ea=\"sip-call-transfer\";function ta(){return!na()&&\"undefined\"!=typeof window&&window.navigator&&window.navigator.userAgent?window.navigator.userAgent:\"\"}function na(){return\"undefined\"!=typeof navigator&&navigator.product&&\"ReactNative\"===navigator.product}function ra(){return navigator&&navigator.mediaDevices&&navigator.mediaDevices.getUserMedia}function ia(){return!!(navigator&&navigator.mediaDevices&&navigator.mediaDevices.getDisplayMedia)&&(function(e,t){if(!e||!t)return!0;switch(e){case\"Chrome\":return t.major>=75;case\"Safari\":return RTCRtpTransceiver.prototype.hasOwnProperty(\"currentDirection\")&&!(13===t.major&&0===t.minor&&0===t.point);case\"Firefox\":return t.major>=67}return!0}(pa(),ha())||na())}function oa(){if(na())return!1;if(!document)return!1;var e=document.createElement(\"iframe\");return!!e.requestFullscreen||!!e.webkitRequestFullscreen}var aa=function(){try{var e=document.createElement(\"canvas\"),t=null!=e.getContext(\"webgl2\");return e.remove(),t}catch(e){return!1}}();function sa(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return!na()&&(!!aa&&(e?function(){if(da())return!1;return[\"Chrome\",\"Firefox\"].includes(pa())}():function(){if(da())return!1;var e=pa();if(\"Safari\"===e){var t=ga();if(t.major<15||15===t.major&&t.minor<4)return!1}if(\"Chrome\"===e){return fa().major>=77}if(\"Firefox\"===e){return ya().major>=97}return[\"Chrome\",\"Firefox\",\"Safari\"].includes(e)}()))}function ca(){if(na())return!1;if(ua())return!1;if(\"undefined\"==typeof AudioWorkletNode)return!1;switch(pa()){case\"Chrome\":case\"Firefox\":return!0;case\"Safari\":var e=ha();return e.major>17||17===e.major&&e.minor>=4}return!1}function la(){return ra()&&!function(){var e,t=pa();if(!ta())return!0;switch(t){case\"Chrome\":return(e=fa()).major&&e.major>0&&e.major<75;case\"Firefox\":return(e=ya()).major<91;case\"Safari\":return(e=ga()).major<13||13===e.major&&e.minor<1;default:return!0}}()}function ua(){return ta().match(/Linux; Android/)}function da(){var e,t,n=ta(),r=n.match(/Mac/)&&(!na()&&\"undefined\"!=typeof window&&null!==(e=window)&&void 0!==e&&null!==(t=e.navigator)&&void 0!==t&&t.maxTouchPoints?window.navigator.maxTouchPoints:0)>=5;return!!(n.match(/Mobi/)||n.match(/Android/)||r)||(!!ta().match(/DailyAnd\\//)||void 0)}function pa(){if(\"undefined\"!=typeof window){var e=ta();return va()?\"Safari\":e.indexOf(\"Edge\")>-1?\"Edge\":e.match(/Chrome\\//)?\"Chrome\":e.indexOf(\"Safari\")>-1||ma()?\"Safari\":e.indexOf(\"Firefox\")>-1?\"Firefox\":e.indexOf(\"MSIE\")>-1||e.indexOf(\".NET\")>-1?\"IE\":\"Unknown Browser\"}}function ha(){switch(pa()){case\"Chrome\":return fa();case\"Safari\":return ga();case\"Firefox\":return ya();case\"Edge\":return function(){var e=0,t=0;if(\"undefined\"!=typeof window){var n=ta().match(/Edge\\/(\\d+).(\\d+)/);if(n)try{e=parseInt(n[1]),t=parseInt(n[2])}catch(e){}}return{major:e,minor:t}}()}}function fa(){var e=0,t=0,n=0,r=0,i=!1;if(\"undefined\"!=typeof window){var o=ta(),a=o.match(/Chrome\\/(\\d+).(\\d+).(\\d+).(\\d+)/);if(a)try{e=parseInt(a[1]),t=parseInt(a[2]),n=parseInt(a[3]),r=parseInt(a[4]),i=o.indexOf(\"OPR/\")>-1}catch(e){}}return{major:e,minor:t,build:n,patch:r,opera:i}}function va(){return!!ta().match(/iPad|iPhone|iPod/i)&&ra()}function ma(){return ta().indexOf(\"AppleWebKit/605.1.15\")>-1}function ga(){var e=0,t=0,n=0;if(\"undefined\"!=typeof window){var r=ta().match(/Version\\/(\\d+).(\\d+)(.(\\d+))?/);if(r)try{e=parseInt(r[1]),t=parseInt(r[2]),n=parseInt(r[4])}catch(e){}else(va()||ma())&&(e=14,t=0,n=3)}return{major:e,minor:t,point:n}}function ya(){var e=0,t=0;if(\"undefined\"!=typeof window){var n=ta().match(/Firefox\\/(\\d+).(\\d+)/);if(n)try{e=parseInt(n[1]),t=parseInt(n[2])}catch(e){}}return{major:e,minor:t}}var _a=function(){function e(){t(this,e)}return o(e,[{key:\"addListenerForMessagesFromCallMachine\",value:function(e,t,n){K()}},{key:\"addListenerForMessagesFromDailyJs\",value:function(e,t,n){K()}},{key:\"sendMessageToCallMachine\",value:function(e,t,n,r){K()}},{key:\"sendMessageToDailyJs\",value:function(e,t){K()}},{key:\"removeListener\",value:function(e){K()}}]),e}();function ba(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function wa(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ba(Object(n),!0).forEach((function(t){d(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ba(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Sa(e){var t=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=u(e);if(t){var i=u(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return l(this,n)}}var ka=function(){c(n,_a);var e=Sa(n);function n(){var r;return t(this,n),(r=e.call(this))._wrappedListeners={},r._messageCallbacks={},r}return o(n,[{key:\"addListenerForMessagesFromCallMachine\",value:function(e,t,n){var r=this,i=function(i){if(i.data&&\"iframe-call-message\"===i.data.what&&(!i.data.callClientId||i.data.callClientId===t)&&(!i.data.from||\"module\"!==i.data.from)){var o=wa({},i.data);if(delete o.from,o.callbackStamp&&r._messageCallbacks[o.callbackStamp]){var a=o.callbackStamp;r._messageCallbacks[a].call(n,o),delete r._messageCallbacks[a]}delete o.what,delete o.callbackStamp,e.call(n,o)}};this._wrappedListeners[e]=i,window.addEventListener(\"message\",i)}},{key:\"addListenerForMessagesFromDailyJs\",value:function(e,t,n){var r=function(r){var i;if(!(!r.data||r.data.what!==$o||!r.data.action||r.data.from&&\"module\"!==r.data.from||r.data.callClientId&&t&&r.data.callClientId!==t||null!=r&&null!==(i=r.data)&&void 0!==i&&i.callFrameId)){var o=r.data;e.call(n,o)}};this._wrappedListeners[e]=r,window.addEventListener(\"message\",r)}},{key:\"sendMessageToCallMachine\",value:function(e,t,n,r){if(!n)throw new Error(\"undefined callClientId. Are you trying to use a DailyCall instance previously destroyed?\");var i=wa({},e);if(i.what=$o,i.from=\"module\",i.callClientId=n,t){var o=Q();this._messageCallbacks[o]=t,i.callbackStamp=o}var a=r?r.contentWindow:window,s=this._callMachineTargetOrigin(r);s&&a.postMessage(i,s)}},{key:\"sendMessageToDailyJs\",value:function(e,t){e.what=$o,e.callClientId=t,e.from=\"embedded\",window.postMessage(e,this._targetOriginFromWindowLocation())}},{key:\"removeListener\",value:function(e){var t=this._wrappedListeners[e];t&&(window.removeEventListener(\"message\",t),delete this._wrappedListeners[e])}},{key:\"forwardPackagedMessageToCallMachine\",value:function(e,t,n){var r=wa({},e);r.callClientId=n;var i=t?t.contentWindow:window,o=this._callMachineTargetOrigin(t);o&&i.postMessage(r,o)}},{key:\"addListenerForPackagedMessagesFromCallMachine\",value:function(e,t){var n=function(n){if(n.data&&\"iframe-call-message\"===n.data.what&&(!n.data.callClientId||n.data.callClientId===t)&&(!n.data.from||\"module\"!==n.data.from)){var r=n.data;e(r)}};return this._wrappedListeners[e]=n,window.addEventListener(\"message\",n),e}},{key:\"removeListenerForPackagedMessagesFromCallMachine\",value:function(e){var t=this._wrappedListeners[e];t&&(window.removeEventListener(\"message\",t),delete this._wrappedListeners[e])}},{key:\"_callMachineTargetOrigin\",value:function(e){return e?e.src?new URL(e.src).origin:void 0:this._targetOriginFromWindowLocation()}},{key:\"_targetOriginFromWindowLocation\",value:function(){return\"file:\"===window.location.protocol?\"*\":window.location.origin}}]),n}();function Ma(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Ca(e){var t=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=u(e);if(t){var i=u(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return l(this,n)}}var Ea=function(){c(n,_a);var e=Ca(n);function n(){var r;return t(this,n),r=e.call(this),global.callMachineToDailyJsEmitter=global.callMachineToDailyJsEmitter||new g.EventEmitter,global.dailyJsToCallMachineEmitter=global.dailyJsToCallMachineEmitter||new g.EventEmitter,r._wrappedListeners={},r._messageCallbacks={},r}return o(n,[{key:\"addListenerForMessagesFromCallMachine\",value:function(e,t,n){this._addListener(e,global.callMachineToDailyJsEmitter,t,n,\"received call machine message\")}},{key:\"addListenerForMessagesFromDailyJs\",value:function(e,t,n){this._addListener(e,global.dailyJsToCallMachineEmitter,t,n,\"received daily-js message\")}},{key:\"sendMessageToCallMachine\",value:function(e,t,n){this._sendMessage(e,global.dailyJsToCallMachineEmitter,n,t,\"sending message to call machine\")}},{key:\"sendMessageToDailyJs\",value:function(e,t){this._sendMessage(e,global.callMachineToDailyJsEmitter,t,null,\"sending message to daily-js\")}},{key:\"removeListener\",value:function(e){var t=this._wrappedListeners[e];t&&(global.callMachineToDailyJsEmitter.removeListener(\"message\",t),global.dailyJsToCallMachineEmitter.removeListener(\"message\",t),delete this._wrappedListeners[e])}},{key:\"_addListener\",value:function(e,t,n,r,i){var o=this,a=function(t){if(t.callClientId===n){if(t.callbackStamp&&o._messageCallbacks[t.callbackStamp]){var i=t.callbackStamp;o._messageCallbacks[i].call(r,t),delete o._messageCallbacks[i]}e.call(r,t)}};this._wrappedListeners[e]=a,t.addListener(\"message\",a)}},{key:\"_sendMessage\",value:function(e,t,n,r,i){var o=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Ma(Object(n),!0).forEach((function(t){d(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ma(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e);if(o.callClientId=n,r){var a=Q();this._messageCallbacks[a]=r,o.callbackStamp=a}t.emit(\"message\",o)}}]),n}(),Ta=\"replace\",Pa=\"shallow-merge\",Oa=[Ta,Pa];var Aa=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=n.data,i=n.mergeStrategy,o=void 0===i?Ta:i;t(this,e),e._validateMergeStrategy(o),e._validateData(r,o),this.mergeStrategy=o,this.data=r}return o(e,[{key:\"isNoOp\",value:function(){return e.isNoOpUpdate(this.data,this.mergeStrategy)}}],[{key:\"isNoOpUpdate\",value:function(e,t){return 0===Object.keys(e).length&&t===Pa}},{key:\"_validateMergeStrategy\",value:function(e){if(!Oa.includes(e))throw Error(\"Unrecognized mergeStrategy provided. Options are: [\".concat(Oa,\"]\"))}},{key:\"_validateData\",value:function(e,t){if(!function(e){if(null==e||\"object\"!==n(e))return!1;var t=Object.getPrototypeOf(e);return null==t||t===Object.prototype}(e))throw Error(\"Meeting session data must be a plain (map-like) object\");var r;try{if(r=JSON.stringify(e),t===Ta){var i=JSON.parse(r);D(i,e)||console.warn(\"The meeting session data provided will be modified when serialized.\",i,e)}else if(t===Pa)for(var o in e)if(Object.hasOwnProperty.call(e,o)&&void 0!==e[o]){var a=JSON.parse(JSON.stringify(e[o]));D(e[o],a)||console.warn(\"At least one key in the meeting session data provided will be modified when serialized.\",a,e[o])}}catch(e){throw Error(\"Meeting session data must be serializable to JSON: \".concat(e))}if(r.length>Jo)throw Error(\"Meeting session data is too large (\".concat(r.length,\" characters). Maximum size suppported is \").concat(Jo,\".\"))}}]),e}();function ja(e,t,n){return ja=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}()?Reflect.construct.bind():function(e,t,n){var r=[null];r.push.apply(r,t);var i=new(Function.bind.apply(e,r));return n&&s(i,n.prototype),i},ja.apply(null,arguments)}function xa(e){var t=\"function\"==typeof Map?new Map:void 0;return xa=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf(\"[native code]\")))return e;var n;if(\"function\"!=typeof e)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return ja(e,arguments,u(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),s(r,e)},xa(e)}function La(e){var t=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=u(e);if(t){var i=u(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return l(this,n)}}function Ia(e){var t,n=null===(t=window._daily)||void 0===t?void 0:t.pendings;if(n){var r=n.indexOf(e);-1!==r&&n.splice(r,1)}}var Da=function(){function e(n){t(this,e),this._currentLoad=null,this._callClientId=n}return o(e,[{key:\"load\",value:function(){var e,t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0,i=arguments.length>2?arguments[2]:void 0;if(this.loaded)return window._daily.instances[this._callClientId].callMachine.reset(),void r(!0);e=this._callClientId,window._daily.pendings.push(e),this._currentLoad&&this._currentLoad.cancel(),this._currentLoad=new Na(n,(function(){r(!1)}),(function(e,n){n||Ia(t._callClientId),i(e,n)})),this._currentLoad.start()}},{key:\"cancel\",value:function(){this._currentLoad&&this._currentLoad.cancel(),Ia(this._callClientId)}},{key:\"loaded\",get:function(){return this._currentLoad&&this._currentLoad.succeeded}}]),e}(),Na=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0,i=arguments.length>2?arguments[2]:void 0;t(this,e),this._attemptsRemaining=3,this._currentAttempt=null,this._dailyConfig=n,this._successCallback=r,this._failureCallback=i}return o(e,[{key:\"start\",value:function(){var e=this;if(!this._currentAttempt){this._currentAttempt=new Ba(this._dailyConfig,this._successCallback,(function t(n){e._currentAttempt.cancelled||(e._attemptsRemaining--,e._failureCallback(n,e._attemptsRemaining>0),e._attemptsRemaining<=0||setTimeout((function(){e._currentAttempt.cancelled||(e._currentAttempt=new Ba(e._dailyConfig,e._successCallback,t),e._currentAttempt.start())}),3e3))})),this._currentAttempt.start()}}},{key:\"cancel\",value:function(){this._currentAttempt&&this._currentAttempt.cancel()}},{key:\"cancelled\",get:function(){return this._currentAttempt&&this._currentAttempt.cancelled}},{key:\"succeeded\",get:function(){return this._currentAttempt&&this._currentAttempt.succeeded}}]),e}(),Ra=function(){c(n,xa(Error));var e=La(n);function n(){return t(this,n),e.apply(this,arguments)}return o(n)}(),Fa=2e4,Ba=function(){function e(n,r,i){t(this,e),this._loadAttemptImpl=na()||!n.avoidEval?new Ua(n,r,i):new Va(n,r,i)}var n;return o(e,[{key:\"start\",value:(n=h((function*(){return this._loadAttemptImpl.start()})),function(){return n.apply(this,arguments)})},{key:\"cancel\",value:function(){this._loadAttemptImpl.cancel()}},{key:\"cancelled\",get:function(){return this._loadAttemptImpl.cancelled}},{key:\"succeeded\",get:function(){return this._loadAttemptImpl.succeeded}}]),e}(),Ua=function(){function e(n,r,i){t(this,e),this.cancelled=!1,this.succeeded=!1,this._networkTimedOut=!1,this._networkTimeout=null,this._iosCache=\"undefined\"!=typeof iOSCallObjectBundleCache&&iOSCallObjectBundleCache,this._refetchHeaders=null,this._dailyConfig=n,this._successCallback=r,this._failureCallback=i}var n,r,i,a;return o(e,[{key:\"start\",value:(a=h((function*(){var e=X(this._dailyConfig);!(yield this._tryLoadFromIOSCache(e))&&this._loadFromNetwork(e)})),function(){return a.apply(this,arguments)})},{key:\"cancel\",value:function(){clearTimeout(this._networkTimeout),this.cancelled=!0}},{key:\"_tryLoadFromIOSCache\",value:(i=h((function*(e){if(!this._iosCache)return!1;try{var t=yield this._iosCache.get(e);return!!this.cancelled||!!t&&(t.code?(Function('\"use strict\";'+t.code)(),this.succeeded=!0,this._successCallback(),!0):(this._refetchHeaders=t.refetchHeaders,!1))}catch(e){return!1}})),function(e){return i.apply(this,arguments)})},{key:\"_loadFromNetwork\",value:(r=h((function*(e){var t=this;this._networkTimeout=setTimeout((function(){t._networkTimedOut=!0,t._failureCallback({msg:\"Timed out (>\".concat(Fa,\" ms) when loading call object bundle \").concat(e),type:\"timeout\"})}),Fa);try{var n=this._refetchHeaders?{headers:this._refetchHeaders}:{},r=yield fetch(e,n);if(clearTimeout(this._networkTimeout),this.cancelled||this._networkTimedOut)throw new Ra;var i=yield this._getBundleCodeFromResponse(e,r);if(this.cancelled)throw new Ra;Function('\"use strict\";'+i)(),this._iosCache&&this._iosCache.set(e,i,r.headers),this.succeeded=!0,this._successCallback()}catch(t){if(clearTimeout(this._networkTimeout),t instanceof Ra||this.cancelled||this._networkTimedOut)return;this._failureCallback({msg:\"Failed to load call object bundle \".concat(e,\": \").concat(t),type:t.message})}})),function(e){return r.apply(this,arguments)})},{key:\"_getBundleCodeFromResponse\",value:(n=h((function*(e,t){if(t.ok)return yield t.text();if(this._iosCache&&304===t.status)return(yield this._iosCache.renew(e,t.headers)).code;throw new Error(\"Received \".concat(t.status,\" response\"))})),function(e,t){return n.apply(this,arguments)})}]),e}(),Va=function(){function e(n,r,i){t(this,e),this.cancelled=!1,this.succeeded=!1,this._dailyConfig=n,this._successCallback=r,this._failureCallback=i,this._attemptId=Q(),this._networkTimeout=null,this._scriptElement=null}return o(e,[{key:\"start\",value:function(){window._dailyCallMachineLoadWaitlist||(window._dailyCallMachineLoadWaitlist=new Set);var e=X(this._dailyConfig);\"object\"===(\"undefined\"==typeof document?\"undefined\":n(document))?this._startLoading(e):this._failureCallback({msg:\"Call object bundle must be loaded in a DOM/web context\",type:\"missing context\"})}},{key:\"cancel\",value:function(){this._stopLoading(),this.cancelled=!0}},{key:\"_startLoading\",value:function(e){var t=this;this._signUpForCallMachineLoadWaitlist(),this._networkTimeout=setTimeout((function(){t._stopLoading(),t._failureCallback({msg:\"Timed out (>\".concat(Fa,\" ms) when loading call object bundle \").concat(e),type:\"timeout\"})}),Fa);var n=document.getElementsByTagName(\"head\")[0],r=document.createElement(\"script\");this._scriptElement=r,r.onload=function(){t._stopLoading(),t.succeeded=!0,t._successCallback()},r.onerror=function(e){t._stopLoading(),t._failureCallback({msg:\"Failed to load call object bundle \".concat(e.target.src),type:e.message})},r.src=e,n.appendChild(r)}},{key:\"_stopLoading\",value:function(){this._withdrawFromCallMachineLoadWaitlist(),clearTimeout(this._networkTimeout),this._scriptElement&&(this._scriptElement.onload=null,this._scriptElement.onerror=null)}},{key:\"_signUpForCallMachineLoadWaitlist\",value:function(){window._dailyCallMachineLoadWaitlist.add(this._attemptId)}},{key:\"_withdrawFromCallMachineLoadWaitlist\",value:function(){window._dailyCallMachineLoadWaitlist.delete(this._attemptId)}}]),e}(),Ja=function(e,t,n){return!0===Wa(e.local,t,n)},$a=function(e,t,n){return e.local.streams&&e.local.streams[t]&&e.local.streams[t].stream&&e.local.streams[t].stream[\"get\".concat(\"video\"===n?\"Video\":\"Audio\",\"Tracks\")]()[0]},qa=function(e,t,n,r){var i=za(e,t,n,r);return i&&i.pendingTrack},Wa=function(e,t,n){if(!e)return!1;var r=function(e){switch(e){case\"avatar\":return!0;case\"staged\":return e;default:return!!e}},i=e.public.subscribedTracks;return i&&i[t]?-1===[\"cam-audio\",\"cam-video\",\"screen-video\",\"screen-audio\",\"rmpAudio\",\"rmpVideo\"].indexOf(n)&&i[t].custom?[!0,\"staged\"].includes(i[t].custom)?r(i[t].custom):r(i[t].custom[n]):r(i[t][n]):!i||r(i.ALL)},za=function(e,t,n,r){var i=Object.values(e.streams||{}).filter((function(e){return e.participantId===t&&e.type===n&&e.pendingTrack&&e.pendingTrack.kind===r})).sort((function(e,t){return new Date(t.starttime)-new Date(e.starttime)}));return i&&i[0]},Ha=function(e,t){var n=e.local.public.customTracks;if(n&&n[t])return n[t].track};function Ga(e,t){for(var n=t.getState(),r=0,i=[\"cam\",\"screen\"];r<i.length;r++)for(var o=i[r],a=0,s=[\"video\",\"audio\"];a<s.length;a++){var c=s[a],l=\"cam\"===o?c:\"screen\".concat(c.charAt(0).toUpperCase()+c.slice(1)),u=e.tracks[l];if(u){var d=e.local?$a(n,o,c):qa(n,e.session_id,o,c);\"playable\"===u.state&&(u.track=d),u.persistentTrack=d}}}function Qa(e,t){try{var n=t.getState();for(var r in e.tracks)if(!Ka(r)){var i=e.tracks[r].kind;if(i){var o=e.tracks[r];if(o){var a=e.local?Ha(n,r):qa(n,e.session_id,r,i);\"playable\"===o.state&&(e.tracks[r].track=a),o.persistentTrack=a}}else console.error(\"unknown type for custom track\")}}catch(e){console.error(e)}}function Ka(e){return[\"video\",\"audio\",\"screenVideo\",\"screenAudio\"].includes(e)}function Ya(e,t,n){var r=n.getState();if(e.local){if(e.audio)try{e.audioTrack=r.local.streams.cam.stream.getAudioTracks()[0],e.audioTrack||(e.audio=!1)}catch(e){}if(e.video)try{e.videoTrack=r.local.streams.cam.stream.getVideoTracks()[0],e.videoTrack||(e.video=!1)}catch(e){}if(e.screen)try{e.screenVideoTrack=r.local.streams.screen.stream.getVideoTracks()[0],e.screenAudioTrack=r.local.streams.screen.stream.getAudioTracks()[0],e.screenVideoTrack||e.screenAudioTrack||(e.screen=!1)}catch(e){}}else{var i=!0;try{var o=r.participants[e.session_id];o&&o.public&&o.public.rtcType&&\"peer-to-peer\"===o.public.rtcType.impl&&o.private&&![\"connected\",\"completed\"].includes(o.private.peeringState)&&(i=!1)}catch(e){console.error(e)}if(!i)return e.audio=!1,e.audioTrack=!1,e.video=!1,e.videoTrack=!1,e.screen=!1,void(e.screenTrack=!1);try{r.streams;if(e.audio&&Ja(r,e.session_id,\"cam-audio\")){var a=qa(r,e.session_id,\"cam\",\"audio\");a&&(t&&t.audioTrack&&t.audioTrack.id===a.id?e.audioTrack=a:a.muted||(e.audioTrack=a)),e.audioTrack||(e.audio=!1)}if(e.video&&Ja(r,e.session_id,\"cam-video\")){var s=qa(r,e.session_id,\"cam\",\"video\");s&&(t&&t.videoTrack&&t.videoTrack.id===s.id?e.videoTrack=s:s.muted||(e.videoTrack=s)),e.videoTrack||(e.video=!1)}if(e.screen&&Ja(r,e.session_id,\"screen-audio\")){var c=qa(r,e.session_id,\"screen\",\"audio\");c&&(t&&t.screenAudioTrack&&t.screenAudioTrack.id===c.id?e.screenAudioTrack=c:c.muted||(e.screenAudioTrack=c))}if(e.screen&&Ja(r,e.session_id,\"screen-video\")){var l=qa(r,e.session_id,\"screen\",\"video\");l&&(t&&t.screenVideoTrack&&t.screenVideoTrack.id===l.id?e.screenVideoTrack=l:l.muted||(e.screenVideoTrack=l))}e.screenVideoTrack||e.screenAudioTrack||(e.screen=!1)}catch(e){console.error(\"unexpected error matching up tracks\",e)}}}function Xa(e,t){var n=\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if(\"string\"==typeof e)return Za(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Za(e,t)}(e))||t&&e&&\"number\"==typeof e.length){n&&(e=n);var r=0,i=function(){};return{s:i,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:i}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var o,a=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){s=!0,o=e},f:function(){try{a||null==n.return||n.return()}finally{if(s)throw o}}}}function Za(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var es=new Map,ts=null;function ns(e,t){var n=\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if(\"string\"==typeof e)return rs(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return rs(e,t)}(e))||t&&e&&\"number\"==typeof e.length){n&&(e=n);var r=0,i=function(){};return{s:i,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:i}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var o,a=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){s=!0,o=e},f:function(){try{a||null==n.return||n.return()}finally{if(s)throw o}}}}function rs(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var is=new Map,os=null;function as(e){cs()?function(e){es.has(e)||(es.set(e,{}),navigator.mediaDevices.enumerateDevices().then((function(t){es.has(e)&&(es.get(e).lastDevicesString=JSON.stringify(t),ts||(ts=function(){var e=h((function*(){var e,t=yield navigator.mediaDevices.enumerateDevices(),n=Xa(es.keys());try{for(n.s();!(e=n.n()).done;){var r=e.value,i=JSON.stringify(t);i!==es.get(r).lastDevicesString&&(es.get(r).lastDevicesString=i,r(t))}}catch(e){n.e(e)}finally{n.f()}}));return function(){return e.apply(this,arguments)}}(),navigator.mediaDevices.addEventListener(\"devicechange\",ts)))})).catch((function(){})))}(e):function(e){is.has(e)||(is.set(e,{}),navigator.mediaDevices.enumerateDevices().then((function(t){is.has(e)&&(is.get(e).lastDevicesString=JSON.stringify(t),os||(os=setInterval(h((function*(){var e,t=yield navigator.mediaDevices.enumerateDevices(),n=ns(is.keys());try{for(n.s();!(e=n.n()).done;){var r=e.value,i=JSON.stringify(t);i!==is.get(r).lastDevicesString&&(is.get(r).lastDevicesString=i,r(t))}}catch(e){n.e(e)}finally{n.f()}})),3e3)))})))}(e)}function ss(e){cs()?function(e){es.has(e)&&(es.delete(e),0===es.size&&ts&&(navigator.mediaDevices.removeEventListener(\"devicechange\",ts),ts=null))}(e):function(e){is.has(e)&&(is.delete(e),0===is.size&&os&&(clearInterval(os),os=null))}(e)}function cs(){return na()||void 0!==navigator.mediaDevices.ondevicechange}var ls=new Set;function us(e,t){var n=t.isLocalScreenVideo;return e&&\"live\"===e.readyState&&!function(e,t){return(!t.isLocalScreenVideo||\"Chrome\"!==pa())&&e.muted&&!ls.has(e.id)}(e,{isLocalScreenVideo:n})}var ds=[\"result\"],ps=[\"preserveIframe\"];function hs(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function fs(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?hs(Object(n),!0).forEach((function(t){d(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):hs(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function vs(e){var t=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=u(e);if(t){var i=u(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return l(this,n)}}function ms(e,t){var n=\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if(\"string\"==typeof e)return gs(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return gs(e,t)}(e))||t&&e&&\"number\"==typeof e.length){n&&(e=n);var r=0,i=function(){};return{s:i,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:i}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var o,a=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){s=!0,o=e},f:function(){try{a||null==n.return||n.return()}finally{if(s)throw o}}}}function gs(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var ys={};var _s=\"video\",bs=\"voice\",ws=na()?{data:{}}:{data:{},topology:\"none\"},Ss={present:0,hidden:0},ks={maxBitrate:{min:1e5,max:25e5},maxFramerate:{min:1,max:30},scaleResolutionDownBy:{min:1,max:8}},Ms=Object.keys(ks),Cs=[\"state\",\"volume\",\"simulcastEncodings\"],Es={androidInCallNotification:{title:\"string\",subtitle:\"string\",iconName:\"string\",disableForCustomOverride:\"boolean\"},disableAutoDeviceManagement:{audio:\"boolean\",video:\"boolean\"}},Ts={id:{iconPath:\"string\",iconPathDarkMode:\"string\",label:\"string\",tooltip:\"string\",visualState:\"'default' | 'sidebar-open' | 'active'\"}},Ps={id:{allow:\"string\",controlledBy:\"'*' | 'owners' | string[]\",csp:\"string\",iconURL:\"string\",label:\"string\",loading:\"'eager' | 'lazy'\",location:\"'main' | 'sidebar'\",name:\"string\",referrerPolicy:\"string\",sandbox:\"string\",src:\"string\",srcdoc:\"string\",shared:\"string[] | 'owners' | boolean\"}},Os={customIntegrations:{validate:Ks,help:Gs()},customTrayButtons:{validate:Qs,help:\"customTrayButtons should be a dictionary of the type \".concat(JSON.stringify(Ts))},url:{validate:function(e){return\"string\"==typeof e},help:\"url should be a string\"},baseUrl:{validate:function(e){return\"string\"==typeof e},help:\"baseUrl should be a string\"},token:{validate:function(e){return\"string\"==typeof e},help:\"token should be a string\",queryString:\"t\"},dailyConfig:{validate:function(e,t){try{return t.validateDailyConfig(e),!0}catch(e){console.error(\"Failed to validate dailyConfig\",e)}return!1},help:\"Unsupported dailyConfig. Check error logs for detailed info.\"},reactNativeConfig:{validate:function(e){return Ys(e,Es)},help:\"reactNativeConfig should look like \".concat(JSON.stringify(Es),\", all fields optional\")},lang:{validate:function(e){return[\"da\",\"de\",\"en-us\",\"en\",\"es\",\"fi\",\"fr\",\"it\",\"jp\",\"ka\",\"nl\",\"no\",\"pl\",\"pt\",\"pt-BR\",\"ru\",\"sv\",\"tr\",\"user\"].includes(e)},help:\"language not supported. Options are: da, de, en-us, en, es, fi, fr, it, jp, ka, nl, no, pl, pt, pt-BR, ru, sv, tr, user\"},userName:!0,userData:{validate:function(e){try{return Js(e),!0}catch(e){return console.error(e),!1}},help:\"invalid userData type provided\"},startVideoOff:!0,startAudioOff:!0,activeSpeakerMode:!0,showLeaveButton:!0,showLocalVideo:!0,showParticipantsBar:!0,showFullscreenButton:!0,showUserNameChangeUI:!0,iframeStyle:!0,customLayout:!0,cssFile:!0,cssText:!0,bodyClass:!0,videoSource:{validate:function(e,t){return e instanceof MediaStreamTrack&&(t._sharedTracks.videoDeviceId=e),t._preloadCache.videoDeviceId=e,!0}},audioSource:{validate:function(e,t){return e instanceof MediaStreamTrack&&(t._sharedTracks.audioDeviceId=e),t._preloadCache.audioDeviceId=e,!0}},subscribeToTracksAutomatically:{validate:function(e,t){return t._preloadCache.subscribeToTracksAutomatically=e,!0}},theme:{validate:function(e){var t=[\"accent\",\"accentText\",\"background\",\"backgroundAccent\",\"baseText\",\"border\",\"mainAreaBg\",\"mainAreaBgAccent\",\"mainAreaText\",\"supportiveText\"],r=function(e){for(var n=0,r=Object.keys(e);n<r.length;n++){var i=r[n];if(!t.includes(i))return console.error('unsupported color \"'.concat(i,'\". Valid colors: ').concat(t.join(\", \"))),!1;if(!e[i].match(/^#[0-9a-f]{6}|#[0-9a-f]{3}$/i))return console.error(\"\".concat(i,' theme color should be provided in valid hex color format. Received: \"').concat(e[i],'\"')),!1}return!0};return\"object\"===n(e)&&(\"light\"in e&&\"dark\"in e||\"colors\"in e)?\"light\"in e&&\"dark\"in e?\"colors\"in e.light?\"colors\"in e.dark?r(e.light.colors)&&r(e.dark.colors):(console.error('Dark theme is missing \"colors\" property.',e),!1):(console.error('Light theme is missing \"colors\" property.',e),!1):r(e.colors):(console.error('Theme must contain either both \"light\" and \"dark\" properties, or \"colors\".',e),!1)},help:\"unsupported theme configuration. Check error logs for detailed info.\"},layoutConfig:{validate:function(e){if(\"grid\"in e){var t=e.grid;if(\"maxTilesPerPage\"in t){if(!Number.isInteger(t.maxTilesPerPage))return console.error(\"grid.maxTilesPerPage should be an integer. You passed \".concat(t.maxTilesPerPage,\".\")),!1;if(t.maxTilesPerPage>49)return console.error(\"grid.maxTilesPerPage can't be larger than 49 without sacrificing browser performance. Please contact us at https://www.daily.co/contact to talk about your use case.\"),!1}if(\"minTilesPerPage\"in t){if(!Number.isInteger(t.minTilesPerPage))return console.error(\"grid.minTilesPerPage should be an integer. You passed \".concat(t.minTilesPerPage,\".\")),!1;if(t.minTilesPerPage<1)return console.error(\"grid.minTilesPerPage can't be lower than 1.\"),!1;if(\"maxTilesPerPage\"in t&&t.minTilesPerPage>t.maxTilesPerPage)return console.error(\"grid.minTilesPerPage can't be higher than grid.maxTilesPerPage.\"),!1}}return!0},help:\"unsupported layoutConfig. Check error logs for detailed info.\"},receiveSettings:{validate:function(e){return $s(e,{allowAllParticipantsKey:!1})},help:Hs({allowAllParticipantsKey:!1})},sendSettings:{validate:function(e,t){return!!function(e,t){try{return t.validateUpdateSendSettings(e),!0}catch(e){return console.error(\"Failed to validate send settings\",e),!1}}(e,t)&&(t._preloadCache.sendSettings=e,!0)},help:\"Invalid sendSettings provided. Check error logs for detailed info.\"},inputSettings:{validate:function(e,t){var n;return!!qs(e)&&(t._preloadCache.inputSettings||(t._preloadCache.inputSettings={}),Ws(e,null===(n=t.properties)||void 0===n?void 0:n.dailyConfig),e.audio&&(t._preloadCache.inputSettings.audio=e.audio),e.video&&(t._preloadCache.inputSettings.video=e.video),!0)},help:zs()},layout:{validate:function(e){return\"custom-v1\"===e||\"browser\"===e||\"none\"===e},help:'layout may only be set to \"custom-v1\"',queryString:\"layout\"},emb:{queryString:\"emb\"},embHref:{queryString:\"embHref\"},dailyJsVersion:{queryString:\"dailyJsVersion\"},proxy:{queryString:\"proxy\"},strictMode:!0,allowMultipleCallInstances:!0},As={styles:{validate:function(e){for(var t in e)if(\"cam\"!==t&&\"screen\"!==t)return!1;if(e.cam)for(var n in e.cam)if(\"div\"!==n&&\"video\"!==n)return!1;if(e.screen)for(var r in e.screen)if(\"div\"!==r&&\"video\"!==r)return!1;return!0},help:\"styles format should be a subset of: { cam: {div: {}, video: {}}, screen: {div: {}, video: {}} }\"},setSubscribedTracks:{validate:function(e,t){if(t._preloadCache.subscribeToTracksAutomatically)return!1;var n=[!0,!1,\"staged\"];if(n.includes(e)||!na()&&\"avatar\"===e)return!0;var r=[\"audio\",\"video\",\"screenAudio\",\"screenVideo\",\"rmpAudio\",\"rmpVideo\"];return function e(t){var i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];for(var o in t)if(\"custom\"===o){if(!n.includes(t[o])&&!e(t[o],!0))return!1}else{var a=!i&&!r.includes(o),s=!n.includes(t[o]);if(a||s)return!1}return!0}(e)},help:\"setSubscribedTracks cannot be used when setSubscribeToTracksAutomatically is enabled, and should be of the form: \"+\"true\".concat(na()?\"\":\" | 'avatar'\",\" | false | 'staged' | { [audio: true|false|'staged'], [video: true|false|'staged'], [screenAudio: true|false|'staged'], [screenVideo: true|false|'staged'] }\")},setAudio:!0,setVideo:!0,setScreenShare:{validate:function(e){return!1===e},help:\"setScreenShare must be false, as it's only meant for stopping remote participants' screen shares\"},eject:!0,updatePermissions:{validate:function(e){for(var t=0,n=Object.entries(e);t<n.length;t++){var r=v(n[t],2),i=r[0],o=r[1];switch(i){case\"hasPresence\":if(\"boolean\"!=typeof o)return!1;break;case\"canSend\":if(o instanceof Set||o instanceof Array||Array.isArray(o)){var a,s=[\"video\",\"audio\",\"screenVideo\",\"screenAudio\",\"customVideo\",\"customAudio\"],c=ms(o);try{for(c.s();!(a=c.n()).done;){var l=a.value;if(!s.includes(l))return!1}}catch(e){c.e(e)}finally{c.f()}}else if(\"boolean\"!=typeof o)return!1;(o instanceof Array||Array.isArray(o))&&(e.canSend=new Set(o));break;case\"canAdmin\":if(o instanceof Set||o instanceof Array||Array.isArray(o)){var u,d=[\"participants\",\"streaming\",\"transcription\"],p=ms(o);try{for(p.s();!(u=p.n()).done;){var h=u.value;if(!d.includes(h))return!1}}catch(e){p.e(e)}finally{p.f()}}else if(\"boolean\"!=typeof o)return!1;(o instanceof Array||Array.isArray(o))&&(e.canAdmin=new Set(o));break;default:return!1}}return!0},help:\"updatePermissions can take hasPresence, canSend, and canAdmin permissions. hasPresence must be a boolean. canSend can be a boolean or an Array or Set of media types (video, audio, screenVideo, screenAudio, customVideo, customAudio). canAdmin can be a boolean or an Array or Set of admin types (participants, streaming, transcription).\"}};Promise.any||(Promise.any=function(){var e=h((function*(e){return new Promise((function(t,n){var r=[];e.forEach((function(i){return Promise.resolve(i).then((function(e){t(e)})).catch((function(t){r.push(t),r.length===e.length&&n(r)}))}))}))}));return function(t){return e.apply(this,arguments)}}());var js=function(){c(ee,g);var r,i,s,l,u,p,f,m,y,_,b,w,S,k,M,C,E,T,P,O,A,j,x,L,I,N,R,F,B,U,V,J,$,q,W,z,H,K,Z=vs(ee);function ee(e){var n,r,i,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(t(this,ee),d(a(r=Z.call(this)),\"startListeningForDeviceChanges\",(function(){as(r.handleDeviceChange)})),d(a(r),\"stopListeningForDeviceChanges\",(function(){ss(r.handleDeviceChange)})),d(a(r),\"handleDeviceChange\",(function(e){e=e.map((function(e){return JSON.parse(JSON.stringify(e))})),r.emitDailyJSEvent({action:\"available-devices-updated\",availableDevices:e})})),d(a(r),\"handleNativeAppStateChange\",function(){var e=h((function*(e){if(\"destroyed\"===e)return console.warn(\"App has been destroyed before leaving the meeting. Cleaning up all the resources!\"),void(yield r.destroy());var t=\"active\"===e;r.disableReactNativeAutoDeviceManagement(\"video\")||(t?r.camUnmutedBeforeLosingNativeActiveState&&r.setLocalVideo(!0):(r.camUnmutedBeforeLosingNativeActiveState=r.localVideo(),r.camUnmutedBeforeLosingNativeActiveState&&r.setLocalVideo(!1)))}));return function(t){return e.apply(this,arguments)}}()),d(a(r),\"handleNativeAudioFocusChange\",(function(e){r.disableReactNativeAutoDeviceManagement(\"audio\")||(r._hasNativeAudioFocus=e,r.toggleParticipantAudioBasedOnNativeAudioFocus(),r._hasNativeAudioFocus?r.micUnmutedBeforeLosingNativeAudioFocus&&r.setLocalAudio(!0):(r.micUnmutedBeforeLosingNativeAudioFocus=r.localAudio(),r.setLocalAudio(!1)))})),d(a(r),\"handleNativeSystemScreenCaptureStop\",(function(){r.stopScreenShare()})),r.strictMode=void 0===o.strictMode||o.strictMode,r.allowMultipleCallInstances=null!==(n=o.allowMultipleCallInstances)&&void 0!==n&&n,Object.keys(ys).length&&(r._logDuplicateInstanceAttempt(),!r.allowMultipleCallInstances)){if(r.strictMode)throw new Error(\"Duplicate DailyIframe instances are not allowed\");console.warn(\"Using strictMode: false to allow multiple call instances is now deprecated. Set `allowMultipleCallInstances: true`\")}if(window._daily||(window._daily={pendings:[],instances:{}}),r.callClientId=Q(),i=a(r),ys[i.callClientId]=i,window._daily.instances[r.callClientId]={},r._sharedTracks={},window._daily.instances[r.callClientId].tracks=r._sharedTracks,o.dailyJsVersion=ee.version(),r._iframe=e,r._callObjectMode=\"none\"===o.layout&&!r._iframe,r._preloadCache={subscribeToTracksAutomatically:!0,audioDeviceId:null,videoDeviceId:null,outputDeviceId:null,inputSettings:null,sendSettings:null,videoTrackForNetworkConnectivityTest:null,videoTrackForConnectionQualityTest:null},void 0!==o.showLocalVideo?r._callObjectMode?console.error(\"showLocalVideo is not available in call object mode\"):r._showLocalVideo=!!o.showLocalVideo:r._showLocalVideo=!0,void 0!==o.showParticipantsBar?r._callObjectMode?console.error(\"showParticipantsBar is not available in call object mode\"):r._showParticipantsBar=!!o.showParticipantsBar:r._showParticipantsBar=!0,void 0!==o.customIntegrations?r._callObjectMode?console.error(\"customIntegrations is not available in call object mode\"):r._customIntegrations=o.customIntegrations:r._customIntegrations={},void 0!==o.customTrayButtons?r._callObjectMode?console.error(\"customTrayButtons is not available in call object mode\"):r._customTrayButtons=o.customTrayButtons:r._customTrayButtons={},void 0!==o.activeSpeakerMode?r._callObjectMode?console.error(\"activeSpeakerMode is not available in call object mode\"):r._activeSpeakerMode=!!o.activeSpeakerMode:r._activeSpeakerMode=!1,o.receiveSettings?r._callObjectMode?r._receiveSettings=o.receiveSettings:console.error(\"receiveSettings is only available in call object mode\"):r._receiveSettings={},r.validateProperties(o),r.properties=fs({},o),r._preloadCache.inputSettings||(r._preloadCache.inputSettings={}),o.inputSettings&&o.inputSettings.audio&&(r._preloadCache.inputSettings.audio=o.inputSettings.audio),o.inputSettings&&o.inputSettings.video&&(r._preloadCache.inputSettings.video=o.inputSettings.video),r._callObjectLoader=r._callObjectMode?new Da(r.callClientId):null,r._callState=Zr,r._isPreparingToJoin=!1,r._accessState={access:pi},r._meetingSessionSummary={},r._finalSummaryOfPrevSession={},r._meetingSessionState=tc(ws,r._callObjectMode),r._nativeInCallAudioMode=_s,r._participants={},r._isScreenSharing=!1,r._participantCounts=Ss,r._rmpPlayerState={},r._waitingParticipants={},r._network={threshold:\"good\",quality:100},r._activeSpeaker={},r._localAudioLevel=0,r._isLocalAudioLevelObserverRunning=!1,r._remoteParticipantsAudioLevel={},r._isRemoteParticipantsAudioLevelObserverRunning=!1,r._maxAppMessageSize=Vo,r._messageChannel=na()?new Ea:new ka,r._iframe&&(r._iframe.requestFullscreen?r._iframe.addEventListener(\"fullscreenchange\",(function(){document.fullscreenElement===r._iframe?(r.emitDailyJSEvent({action:Ao}),r.sendMessageToCallMachine({action:Ao})):(r.emitDailyJSEvent({action:jo}),r.sendMessageToCallMachine({action:jo}))})):r._iframe.webkitRequestFullscreen&&r._iframe.addEventListener(\"webkitfullscreenchange\",(function(){document.webkitFullscreenElement===r._iframe?(r.emitDailyJSEvent({action:Ao}),r.sendMessageToCallMachine({action:Ao})):(r.emitDailyJSEvent({action:jo}),r.sendMessageToCallMachine({action:jo}))}))),na()){var s=r.nativeUtils();s.addAudioFocusChangeListener&&s.removeAudioFocusChangeListener&&s.addAppStateChangeListener&&s.removeAppStateChangeListener&&s.addSystemScreenCaptureStopListener&&s.removeSystemScreenCaptureStopListener||console.warn(\"expected (add|remove)(AudioFocusChange|AppActiveStateChange|SystemScreenCaptureStop)Listener to be available in React Native\"),r._hasNativeAudioFocus=!0,s.addAudioFocusChangeListener(r.handleNativeAudioFocusChange),s.addAppStateChangeListener(r.handleNativeAppStateChange),s.addSystemScreenCaptureStopListener(r.handleNativeSystemScreenCaptureStop)}return r._callObjectMode&&r.startListeningForDeviceChanges(),r._messageChannel.addListenerForMessagesFromCallMachine(r.handleMessageFromCallMachine,r.callClientId,a(r)),r}return o(ee,[{key:\"destroy\",value:(K=h((function*(){var e,t;try{yield this.leave()}catch(e){}var n=this._iframe;if(n){var r=n.parentElement;r&&r.removeChild(n)}if(this._messageChannel.removeListener(this.handleMessageFromCallMachine),na()){var i=this.nativeUtils();i.removeAudioFocusChangeListener(this.handleNativeAudioFocusChange),i.removeAppStateChangeListener(this.handleNativeAppStateChange),i.removeSystemScreenCaptureStopListener(this.handleNativeSystemScreenCaptureStop)}this._callObjectMode&&this.stopListeningForDeviceChanges(),this.resetMeetingDependentVars(),this._destroyed=!0,this.emitDailyJSEvent({action:\"call-instance-destroyed\"}),delete ys[this.callClientId],(null===(e=window)||void 0===e||null===(t=e._daily)||void 0===t?void 0:t.instances)&&delete window._daily.instances[this.callClientId],this.strictMode&&(this.callClientId=void 0)})),function(){return K.apply(this,arguments)})},{key:\"isDestroyed\",value:function(){return!!this._destroyed}},{key:\"loadCss\",value:function(e){var t=e.bodyClass,n=e.cssFile,r=e.cssText;return Us(),this.sendMessageToCallMachine({action:\"load-css\",cssFile:this.absoluteUrl(n),bodyClass:t,cssText:r}),this}},{key:\"iframe\",value:function(){return Us(),this._iframe}},{key:\"meetingState\",value:function(){return this._callState}},{key:\"accessState\",value:function(){return Fs(this._callObjectMode,\"accessState()\"),this._accessState}},{key:\"participants\",value:function(){return this._participants}},{key:\"participantCounts\",value:function(){return this._participantCounts}},{key:\"waitingParticipants\",value:function(){return Fs(this._callObjectMode,\"waitingParticipants()\"),this._waitingParticipants}},{key:\"validateParticipantProperties\",value:function(e,t){for(var n in t){if(!As[n])throw new Error(\"unrecognized updateParticipant property \".concat(n));if(As[n].validate&&!As[n].validate(t[n],this,this._participants[e]))throw new Error(As[n].help)}}},{key:\"updateParticipant\",value:function(e,t){return this._participants.local&&this._participants.local.session_id===e&&(e=\"local\"),e&&t&&(this.validateParticipantProperties(e,t),this.sendMessageToCallMachine({action:\"update-participant\",id:e,properties:t})),this}},{key:\"updateParticipants\",value:function(e){var t=this._participants.local&&this._participants.local.session_id;for(var n in e)n===t&&(n=\"local\"),n&&e[n]&&this.validateParticipantProperties(n,e[n]);return this.sendMessageToCallMachine({action:\"update-participants\",participants:e}),this}},{key:\"updateWaitingParticipant\",value:(H=h((function*(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(Fs(this._callObjectMode,\"updateWaitingParticipant()\"),Ls(this._callState,\"updateWaitingParticipant()\"),\"string\"!=typeof t||\"object\"!==n(r))throw new Error(\"updateWaitingParticipant() must take an id string and a updates object\");return new Promise((function(n,i){e.sendMessageToCallMachine({action:\"daily-method-update-waiting-participant\",id:t,updates:r},(function(e){e.error&&i(e.error),e.id||i(new Error(\"unknown error in updateWaitingParticipant()\")),n({id:e.id})}))}))})),function(){return H.apply(this,arguments)})},{key:\"updateWaitingParticipants\",value:(z=h((function*(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(Fs(this._callObjectMode,\"updateWaitingParticipants()\"),Ls(this._callState,\"updateWaitingParticipants()\"),\"object\"!==n(t))throw new Error(\"updateWaitingParticipants() must take a mapping between ids and update objects\");return new Promise((function(n,r){e.sendMessageToCallMachine({action:\"daily-method-update-waiting-participants\",updatesById:t},(function(e){e.error&&r(e.error),e.ids||r(new Error(\"unknown error in updateWaitingParticipants()\")),n({ids:e.ids})}))}))})),function(){return z.apply(this,arguments)})},{key:\"requestAccess\",value:(W=h((function*(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.access,r=void 0===n?{level:hi}:n,i=t.name,o=void 0===i?\"\":i;return Fs(this._callObjectMode,\"requestAccess()\"),Ls(this._callState,\"requestAccess()\"),new Promise((function(t,n){e.sendMessageToCallMachine({action:\"daily-method-request-access\",access:r,name:o},(function(e){e.error&&n(e.error),e.access||n(new Error(\"unknown error in requestAccess()\")),t({access:e.access,granted:e.granted})}))}))})),function(){return W.apply(this,arguments)})},{key:\"localAudio\",value:function(){return this._participants.local?![\"blocked\",\"off\"].includes(this._participants.local.tracks.audio.state):null}},{key:\"localVideo\",value:function(){return this._participants.local?![\"blocked\",\"off\"].includes(this._participants.local.tracks.video.state):null}},{key:\"setLocalAudio\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"forceDiscardTrack\"in t&&(na()?(console.warn(\"forceDiscardTrack option not supported in React Native; ignoring\"),t={}):e&&(console.warn(\"forceDiscardTrack option only supported when calling setLocalAudio(false); ignoring\"),t={})),this.sendMessageToCallMachine({action:\"local-audio\",state:e,options:t}),this}},{key:\"localScreenAudio\",value:function(){return this._participants.local?![\"blocked\",\"off\"].includes(this._participants.local.tracks.screenAudio.state):null}},{key:\"localScreenVideo\",value:function(){return this._participants.local?![\"blocked\",\"off\"].includes(this._participants.local.tracks.screenVideo.state):null}},{key:\"updateScreenShare\",value:function(e){if(this._isScreenSharing)return this.sendMessageToCallMachine({action:\"local-screen-update\",options:e}),this;console.warn(\"There is no screen share in progress. Try calling startScreenShare first.\")}},{key:\"setLocalVideo\",value:function(e){return this.sendMessageToCallMachine({action:\"local-video\",state:e}),this}},{key:\"getReceiveSettings\",value:(q=h((function*(e){var t=this,r=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).showInheritedValues,i=void 0!==r&&r;if(Fs(this._callObjectMode,\"getReceiveSettings()\"),!this._callMachineInitialized)return this._receiveSettings;switch(n(e)){case\"string\":return new Promise((function(n){t.sendMessageToCallMachine({action:\"get-single-participant-receive-settings\",id:e,showInheritedValues:i},(function(e){n(e.receiveSettings)}))}));case\"undefined\":return this._receiveSettings;default:throw new Error('first argument to getReceiveSettings() must be a participant id (or \"base\"), or there should be no arguments')}})),function(e){return q.apply(this,arguments)})},{key:\"updateReceiveSettings\",value:($=h((function*(e){var t=this;if(Fs(this._callObjectMode,\"updateReceiveSettings()\"),!$s(e,{allowAllParticipantsKey:!0}))throw new Error(Hs({allowAllParticipantsKey:!0}));return Ls(this._callState,\"updateReceiveSettings()\",\"To specify receive settings earlier, use the receiveSettings config property.\"),new Promise((function(n){t.sendMessageToCallMachine({action:\"update-receive-settings\",receiveSettings:e},(function(e){n({receiveSettings:e.receiveSettings})}))}))})),function(e){return $.apply(this,arguments)})},{key:\"_prepInputSettingsToPresentToUser\",value:function(e){var t,n,r,i,o,a,s,c;if(e){var l={},u=\"none\"===(null===(t=e.audio)||void 0===t||null===(n=t.processor)||void 0===n?void 0:n.type)&&(null===(r=e.audio)||void 0===r||null===(i=r.processor)||void 0===i?void 0:i._isDefaultWhenNone);if(e.audio&&!u){var d=fs({},e.audio.processor);delete d._isDefaultWhenNone,l.audio=fs(fs({},e.audio),{},{processor:d})}var p=\"none\"===(null===(o=e.video)||void 0===o||null===(a=o.processor)||void 0===a?void 0:a.type)&&(null===(s=e.video)||void 0===s||null===(c=s.processor)||void 0===c?void 0:c._isDefaultWhenNone);if(e.video&&!p){var h=fs({},e.video.processor);delete h._isDefaultWhenNone,l.video=fs(fs({},e.video),{},{processor:h})}return l}}},{key:\"getInputSettings\",value:function(){var e=this;return Us(),new Promise((function(t){t(e._getInputSettings())}))}},{key:\"_getInputSettings\",value:function(){var e,t,n,r,i,o,a,s,c={processor:{type:\"none\",_isDefaultWhenNone:!0}};this._inputSettings?(e=(null===(n=this._inputSettings)||void 0===n?void 0:n.video)||c,t=(null===(r=this._inputSettings)||void 0===r?void 0:r.audio)||c):(e=(null===(i=this._preloadCache)||void 0===i||null===(o=i.inputSettings)||void 0===o?void 0:o.video)||c,t=(null===(a=this._preloadCache)||void 0===a||null===(s=a.inputSettings)||void 0===s?void 0:s.audio)||c);var l={audio:t,video:e};return this._prepInputSettingsToPresentToUser(l)}},{key:\"updateInputSettings\",value:(J=h((function*(e){var t=this;return Us(),qs(e)?(e&&(this._preloadCache.inputSettings||(this._preloadCache.inputSettings={}),Ws(e,this.properties.dailyConfig),e.audio&&(this._preloadCache.inputSettings.audio=e.audio),e.video&&(this._preloadCache.inputSettings.video=e.video)),e.video||e.audio?this._callObjectMode&&!this._callMachineInitialized?this._getInputSettings():new Promise((function(n,r){t.sendMessageToCallMachine({action:\"update-input-settings\",inputSettings:e},(function(e){e.error?r(e.error):n({inputSettings:t._prepInputSettingsToPresentToUser(e.inputSettings)})}))})):this._getInputSettings()):(console.error(zs()),Promise.reject(zs()))})),function(e){return J.apply(this,arguments)})},{key:\"setBandwidth\",value:function(e){var t=e.kbs,n=e.trackConstraints;if(Us(),this._callMachineInitialized)return this.sendMessageToCallMachine({action:\"set-bandwidth\",kbs:t,trackConstraints:n}),this}},{key:\"getDailyLang\",value:function(){var e=this;if(Us(),this._callMachineInitialized)return new Promise((function(t){e.sendMessageToCallMachine({action:\"get-daily-lang\"},(function(e){delete e.action,delete e.callbackStamp,t(e)}))}))}},{key:\"setDailyLang\",value:function(e){return Us(),this.sendMessageToCallMachine({action:\"set-daily-lang\",lang:e}),this}},{key:\"setProxyUrl\",value:function(e){return this.sendMessageToCallMachine({action:\"set-proxy-url\",proxyUrl:e}),this}},{key:\"setIceConfig\",value:function(e){return this.sendMessageToCallMachine({action:\"set-ice-config\",iceConfig:e}),this}},{key:\"meetingSessionSummary\",value:function(){return[ii,oi].includes(this._callState)?this._finalSummaryOfPrevSession:this._meetingSessionSummary}},{key:\"getMeetingSession\",value:(V=h((function*(){var e=this;return console.warn(\"getMeetingSession() is deprecated: use meetingSessionSummary(), which will return immediately\"),Ls(this._callState,\"getMeetingSession()\"),new Promise((function(t){e.sendMessageToCallMachine({action:\"get-meeting-session\"},(function(e){delete e.action,delete e.callbackStamp,t(e)}))}))})),function(){return V.apply(this,arguments)})},{key:\"meetingSessionState\",value:function(){return Ls(this._callState,\"meetingSessionState\"),this._meetingSessionState}},{key:\"setMeetingSessionData\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"replace\";Fs(this._callObjectMode,\"setMeetingSessionData()\"),Ls(this._callState,\"setMeetingSessionData\");try{!function(e,t){new Aa({data:e,mergeStrategy:t})}(e,t)}catch(e){throw console.error(e),e}try{this.sendMessageToCallMachine({action:\"set-session-data\",data:e,mergeStrategy:t})}catch(e){throw new Error(\"Error setting meeting session data: \".concat(e))}}},{key:\"setUserName\",value:function(e,t){var n=this;return this.properties.userName=e,new Promise((function(r){n.sendMessageToCallMachine({action:\"set-user-name\",name:null!=e?e:\"\",thisMeetingOnly:na()||!!t&&!!t.thisMeetingOnly},(function(e){delete e.action,delete e.callbackStamp,r(e)}))}))}},{key:\"setUserData\",value:(U=h((function*(e){var t=this;try{Js(e)}catch(e){throw console.error(e),e}if(this.properties.userData=e,this._callMachineInitialized)return new Promise((function(n){try{t.sendMessageToCallMachine({action:\"set-user-data\",userData:e},(function(e){delete e.action,delete e.callbackStamp,n(e)}))}catch(e){throw new Error(\"Error setting user data: \".concat(e))}}))})),function(e){return U.apply(this,arguments)})},{key:\"validateAudioLevelInterval\",value:function(e){if(e&&(e<100||\"number\"!=typeof e))throw new Error(\"The interval must be a number greater than or equal to 100 milliseconds.\")}},{key:\"startLocalAudioLevelObserver\",value:function(e){var t=this;if(\"undefined\"==typeof AudioWorkletNode&&!na())throw new Error(\"startLocalAudioLevelObserver() is not supported on this browser\");if(this.validateAudioLevelInterval(e),this._callMachineInitialized)return this._isLocalAudioLevelObserverRunning=!0,new Promise((function(n,r){t.sendMessageToCallMachine({action:\"start-local-audio-level-observer\",interval:e},(function(e){t._isLocalAudioLevelObserverRunning=!e.error,e.error?r({error:e.error}):n()}))}));this._preloadCache.localAudioLevelObserver={enabled:!0,interval:e}}},{key:\"isLocalAudioLevelObserverRunning\",value:function(){return this._isLocalAudioLevelObserverRunning}},{key:\"stopLocalAudioLevelObserver\",value:function(){this._preloadCache.localAudioLevelObserver=null,this._localAudioLevel=0,this._isLocalAudioLevelObserverRunning=!1,this.sendMessageToCallMachine({action:\"stop-local-audio-level-observer\"})}},{key:\"startRemoteParticipantsAudioLevelObserver\",value:function(e){var t=this;if(this.validateAudioLevelInterval(e),this._callMachineInitialized)return this._isRemoteParticipantsAudioLevelObserverRunning=!0,new Promise((function(n,r){t.sendMessageToCallMachine({action:\"start-remote-participants-audio-level-observer\",interval:e},(function(e){t._isRemoteParticipantsAudioLevelObserverRunning=!e.error,e.error?r({error:e.error}):n()}))}));this._preloadCache.remoteParticipantsAudioLevelObserver={enabled:!0,interval:e}}},{key:\"isRemoteParticipantsAudioLevelObserverRunning\",value:function(){return this._isRemoteParticipantsAudioLevelObserverRunning}},{key:\"stopRemoteParticipantsAudioLevelObserver\",value:function(){this._preloadCache.remoteParticipantsAudioLevelObserver=null,this._remoteParticipantsAudioLevel={},this._isRemoteParticipantsAudioLevelObserverRunning=!1,this.sendMessageToCallMachine({action:\"stop-remote-participants-audio-level-observer\"})}},{key:\"startCamera\",value:(B=h((function*(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(Fs(this._callObjectMode,\"startCamera()\"),Ds(this._callState,this._isPreparingToJoin,\"startCamera()\",\"Did you mean to use setLocalAudio() and/or setLocalVideo() instead?\"),this.needsLoad())try{yield this.load(t)}catch(e){return Promise.reject(e)}else{if(this._didPreAuth){if(t.url&&t.url!==this.properties.url)return console.error(\"url in startCamera() is different than the one used in preAuth()\"),Promise.reject();if(t.token&&t.token!==this.properties.token)return console.error(\"token in startCamera() is different than the one used in preAuth()\"),Promise.reject()}this.validateProperties(t),this.properties=fs(fs({},this.properties),t)}return new Promise((function(t){e.sendMessageToCallMachine({action:\"start-camera\",properties:xs(e.properties,e.callClientId),preloadCache:xs(e._preloadCache,e.callClientId)},(function(e){delete e.action,delete e.callbackStamp,t(e)}))}))})),function(){return B.apply(this,arguments)})},{key:\"validateCustomTrack\",value:function(e,t,n){if(n&&n.length>50)throw new Error(\"Custom track `trackName` must not be more than 50 characters\");if(t&&\"music\"!==t&&\"speech\"!==t&&!(t instanceof Object))throw new Error(\"Custom track `mode` must be either `music` | `speech` | `DailyMicAudioModeSettings` or `undefined`\");if(!!n&&[\"cam-audio\",\"cam-video\",\"screen-video\",\"screen-audio\",\"rmpAudio\",\"rmpVideo\",\"customVideoDefaults\"].includes(n))throw new Error(\"Custom track `trackName` must not match a track name already used by daily: cam-audio, cam-video, customVideoDefaults, screen-video, screen-audio, rmpAudio, rmpVideo\");if(!(e instanceof MediaStreamTrack))throw new Error(\"Custom tracks provided must be instances of MediaStreamTrack\")}},{key:\"startCustomTrack\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{track:track,mode:mode,trackName:trackName};return Us(),Ls(this._callState,\"startCustomTrack()\"),this.validateCustomTrack(t.track,t.mode,t.trackName),new Promise((function(n,r){e._sharedTracks.customTrack=t.track,t.track=Ho,e.sendMessageToCallMachine({action:\"start-custom-track\",properties:t},(function(e){e.error?r({error:e.error}):n(e.mediaTag)}))}))}},{key:\"stopCustomTrack\",value:function(e){var t=this;return Us(),Ls(this._callState,\"stopCustomTrack()\"),new Promise((function(n){t.sendMessageToCallMachine({action:\"stop-custom-track\",mediaTag:e},(function(e){n(e.mediaTag)}))}))}},{key:\"setCamera\",value:function(e){var t=this;return Vs(),Ns(this._callMachineInitialized,\"setCamera()\"),new Promise((function(n){t.sendMessageToCallMachine({action:\"set-camera\",cameraDeviceId:e},(function(e){n({device:e.device})}))}))}},{key:\"setAudioDevice\",value:(F=h((function*(e){return Vs(),this.nativeUtils().setAudioDevice(e),{deviceId:yield this.nativeUtils().getAudioDevice()}})),function(e){return F.apply(this,arguments)})},{key:\"cycleCamera\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new Promise((function(n){e.sendMessageToCallMachine({action:\"cycle-camera\",properties:t},(function(e){n({device:e.device})}))}))}},{key:\"cycleMic\",value:function(){var e=this;return Us(),new Promise((function(t){e.sendMessageToCallMachine({action:\"cycle-mic\"},(function(e){t({device:e.device})}))}))}},{key:\"getCameraFacingMode\",value:function(){var e=this;return Vs(),new Promise((function(t){e.sendMessageToCallMachine({action:\"get-camera-facing-mode\"},(function(e){t(e.facingMode)}))}))}},{key:\"setInputDevicesAsync\",value:(R=h((function*(e){var t=this,n=e.audioDeviceId,r=e.videoDeviceId,i=e.audioSource,o=e.videoSource;return Us(),void 0!==i&&(n=i),void 0!==o&&(r=o),n&&(this._preloadCache.audioDeviceId=n,this._sharedTracks.audioDeviceId=n),r&&(this._preloadCache.videoDeviceId=r,this._sharedTracks.videoDeviceId=r),this._callObjectMode&&this.needsLoad()?{camera:{deviceId:this._preloadCache.videoDeviceId},mic:{deviceId:this._preloadCache.audioDeviceId},speaker:{deviceId:this._preloadCache.outputDeviceId}}:(n instanceof MediaStreamTrack&&(n=Ho),r instanceof MediaStreamTrack&&(r=Ho),new Promise((function(e){t.sendMessageToCallMachine({action:\"set-input-devices\",audioDeviceId:n,videoDeviceId:r},(function(n){delete n.action,delete n.callbackStamp,n.returnPreloadCache?e({camera:{deviceId:t._preloadCache.videoDeviceId},mic:{deviceId:t._preloadCache.audioDeviceId},speaker:{deviceId:t._preloadCache.outputDeviceId}}):e(n)}))})))})),function(e){return R.apply(this,arguments)})},{key:\"setOutputDeviceAsync\",value:(N=h((function*(e){var t=this,n=e.outputDeviceId;return Us(),n&&(this._preloadCache.outputDeviceId=n),this._callObjectMode&&this.needsLoad()?{camera:{deviceId:this._preloadCache.videoDeviceId},mic:{deviceId:this._preloadCache.audioDeviceId},speaker:{deviceId:this._preloadCache.outputDeviceId}}:new Promise((function(e){t.sendMessageToCallMachine({action:\"set-output-device\",outputDeviceId:n},(function(n){delete n.action,delete n.callbackStamp,n.returnPreloadCache?e({camera:{deviceId:t._preloadCache.videoDeviceId},mic:{deviceId:t._preloadCache.audioDeviceId},speaker:{deviceId:t._preloadCache.outputDeviceId}}):e(n)}))}))})),function(e){return N.apply(this,arguments)})},{key:\"getInputDevices\",value:(I=h((function*(){var e=this;return this._callObjectMode&&this.needsLoad()?{camera:{deviceId:this._preloadCache.videoDeviceId},mic:{deviceId:this._preloadCache.audioDeviceId},speaker:{deviceId:this._preloadCache.outputDeviceId}}:new Promise((function(t){e.sendMessageToCallMachine({action:\"get-input-devices\"},(function(n){delete n.action,delete n.callbackStamp,n.returnPreloadCache?t({camera:{deviceId:e._preloadCache.videoDeviceId},mic:{deviceId:e._preloadCache.audioDeviceId},speaker:{deviceId:e._preloadCache.outputDeviceId}}):t(n)}))}))})),function(){return I.apply(this,arguments)})},{key:\"nativeInCallAudioMode\",value:function(){return Vs(),this._nativeInCallAudioMode}},{key:\"setNativeInCallAudioMode\",value:function(e){if(Vs(),[_s,bs].includes(e)){if(e!==this._nativeInCallAudioMode)return this._nativeInCallAudioMode=e,!this.disableReactNativeAutoDeviceManagement(\"audio\")&&Is(this._callState,this._isPreparingToJoin)&&this.nativeUtils().setAudioMode(this._nativeInCallAudioMode),this}else console.error(\"invalid in-call audio mode specified: \",e)}},{key:\"preAuth\",value:(L=h((function*(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(Fs(this._callObjectMode,\"preAuth()\"),Ds(this._callState,this._isPreparingToJoin,\"preAuth()\"),this.needsLoad()&&(yield this.load(t)),!t.url)throw new Error(\"preAuth() requires at least a url to be provided\");return this.validateProperties(t),this.properties=fs(fs({},this.properties),t),new Promise((function(t,n){e.sendMessageToCallMachine({action:\"daily-method-preauth\",properties:xs(e.properties,e.callClientId),preloadCache:xs(e._preloadCache,e.callClientId)},(function(r){return r.error?n(r.error):r.access?(e._didPreAuth=!0,void t({access:r.access})):n(new Error(\"unknown error in preAuth()\"))}))}))})),function(){return L.apply(this,arguments)})},{key:\"load\",value:(x=h((function*(e){var t=this;if(this.needsLoad()){if(this._destroyed&&(this._logUseAfterDestroy(),this.strictMode))throw new Error(\"Use after destroy\");if(e&&(this.validateProperties(e),this.properties=fs(fs({},this.properties),e)),!this._callObjectMode&&!this.properties.url)throw new Error(\"can't load iframe meeting because url property isn't set\");return this._updateCallState(ei),this.emitDailyJSEvent({action:Bi}),this._callObjectMode?new Promise((function(e,n){t._callObjectLoader.cancel();var r=Date.now();t._callObjectLoader.load(t.properties.dailyConfig,(function(n){t._bundleLoadTime=n?\"no-op\":Date.now()-r,t._updateCallState(ti),n&&t.emitDailyJSEvent({action:Vi}),e()}),(function(e,r){if(t.emitDailyJSEvent({action:Ui}),!r){t._updateCallState(oi),t.resetMeetingDependentVars();var i={action:Uo,errorMsg:e.msg,error:{type:\"connection-error\",msg:\"Failed to load call object bundle.\",details:{on:\"load\",sourceError:e,bundleUrl:X(t.properties.dailyConfig)}}};t._maybeSendToSentry(i),t.emitDailyJSEvent(i),n(e.msg)}}))})):(this._iframe.src=Y(this.assembleMeetingUrl(),this.properties.dailyConfig),new Promise((function(e,n){t._loadedCallback=function(r){t._callState!==oi?(t._updateCallState(ti),(t.properties.cssFile||t.properties.cssText)&&t.loadCss(t.properties),e()):n(r)}})))}})),function(e){return x.apply(this,arguments)})},{key:\"join\",value:(j=h((function*(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this._testCallInProgress&&this.stopTestCallQuality();var n=!1;if(this.needsLoad()){this.updateIsPreparingToJoin(!0);try{yield this.load(t)}catch(e){return this.updateIsPreparingToJoin(!1),Promise.reject(e)}}else{if(n=!(!this.properties.cssFile&&!this.properties.cssText),this._didPreAuth){if(t.url&&t.url!==this.properties.url)return console.error(\"url in join() is different than the one used in preAuth()\"),this.updateIsPreparingToJoin(!1),Promise.reject();if(t.token&&t.token!==this.properties.token)return console.error(\"token in join() is different than the one used in preAuth()\"),this.updateIsPreparingToJoin(!1),Promise.reject()}if(t.url&&!this._callObjectMode&&t.url&&t.url!==this.properties.url)return console.error(\"url in join() is different than the one used in load() (\".concat(this.properties.url,\" -> \").concat(t.url,\")\")),this.updateIsPreparingToJoin(!1),Promise.reject();this.validateProperties(t),this.properties=fs(fs({},this.properties),t)}return void 0!==t.showLocalVideo&&(this._callObjectMode?console.error(\"showLocalVideo is not available in callObject mode\"):this._showLocalVideo=!!t.showLocalVideo),void 0!==t.showParticipantsBar&&(this._callObjectMode?console.error(\"showParticipantsBar is not available in callObject mode\"):this._showParticipantsBar=!!t.showParticipantsBar),this._callState===ri||this._callState===ni?(console.warn(\"already joined meeting, call leave() before joining again\"),void this.updateIsPreparingToJoin(!1)):(this._updateCallState(ni,!1),this.emitDailyJSEvent({action:qi}),this._preloadCache.inputSettings||(this._preloadCache.inputSettings={}),t.inputSettings&&t.inputSettings.audio&&(this._preloadCache.inputSettings.audio=t.inputSettings.audio),t.inputSettings&&t.inputSettings.video&&(this._preloadCache.inputSettings.video=t.inputSettings.video),this.sendMessageToCallMachine({action:\"join-meeting\",properties:xs(this.properties,this.callClientId),preloadCache:xs(this._preloadCache,this.callClientId)}),new Promise((function(t,r){e._joinedCallback=function(i,o){if(e._callState!==oi){if(e._updateCallState(ri),i)for(var a in i){if(e._callObjectMode){var s=e._callMachine().store;Ga(i[a],s),Qa(i[a],s),Ya(i[a],e._participants[a],s)}e._participants[a]=fs({},i[a]),e.toggleParticipantAudioBasedOnNativeAudioFocus()}n&&e.loadCss(e.properties),t(i)}else r(o)}})))})),function(){return j.apply(this,arguments)})},{key:\"leave\",value:(A=h((function*(){var e=this;return this._testCallInProgress&&this.stopTestCallQuality(),new Promise((function(t){e._callState===ii||e._callState===oi?t():e._callObjectLoader&&!e._callObjectLoader.loaded?(e._callObjectLoader.cancel(),e._updateCallState(ii),e.resetMeetingDependentVars(),e.emitDailyJSEvent({action:ii}),t()):(e._resolveLeave=t,e.sendMessageToCallMachine({action:\"leave-meeting\"}))}))})),function(){return A.apply(this,arguments)})},{key:\"startScreenShare\",value:(O=h((function*(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(Ns(this._callMachineInitialized,\"startScreenShare()\"),t.screenVideoSendSettings&&this._validateVideoSendSettings(\"screenVideo\",t.screenVideoSendSettings),t.mediaStream&&(this._sharedTracks.screenMediaStream=t.mediaStream,t.mediaStream=Ho),\"undefined\"!=typeof DailyNativeUtils&&void 0!==DailyNativeUtils.isIOS&&DailyNativeUtils.isIOS){var n=this.nativeUtils();if(yield n.isScreenBeingCaptured())return void this.emitDailyJSEvent({action:Bo,type:\"screen-share-error\",errorMsg:\"Could not start the screen sharing. The screen is already been captured!\"});n.setSystemScreenCaptureStartCallback((function(){n.setSystemScreenCaptureStartCallback(null),e.sendMessageToCallMachine({action:qo,captureOptions:t})})),n.presentSystemScreenCapturePrompt()}else this.sendMessageToCallMachine({action:qo,captureOptions:t})})),function(){return O.apply(this,arguments)})},{key:\"stopScreenShare\",value:function(){Ns(this._callMachineInitialized,\"stopScreenShare()\"),this.sendMessageToCallMachine({action:\"local-screen-stop\"})}},{key:\"startRecording\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.type;if(t&&\"cloud\"!==t&&\"raw-tracks\"!==t&&\"local\"!==t)throw new Error(\"invalid type: \".concat(t,\", allowed values 'cloud', 'raw-tracks', or 'local'\"));this.sendMessageToCallMachine(fs({action:\"local-recording-start\"},e))}},{key:\"updateRecording\",value:function(e){var t=e.layout,n=void 0===t?{preset:\"default\"}:t,r=e.instanceId;this.sendMessageToCallMachine({action:\"daily-method-update-recording\",layout:n,instanceId:r})}},{key:\"stopRecording\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.sendMessageToCallMachine(fs({action:\"local-recording-stop\"},e))}},{key:\"startLiveStreaming\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.sendMessageToCallMachine(fs({action:\"daily-method-start-live-streaming\"},e))}},{key:\"updateLiveStreaming\",value:function(e){var t=e.layout,n=void 0===t?{preset:\"default\"}:t,r=e.instanceId;this.sendMessageToCallMachine({action:\"daily-method-update-live-streaming\",layout:n,instanceId:r})}},{key:\"addLiveStreamingEndpoints\",value:function(e){var t=e.endpoints,n=e.instanceId;this.sendMessageToCallMachine({action:Wo,endpointsOp:Xo,endpoints:t,instanceId:n})}},{key:\"removeLiveStreamingEndpoints\",value:function(e){var t=e.endpoints,n=e.instanceId;this.sendMessageToCallMachine({action:Wo,endpointsOp:Zo,endpoints:t,instanceId:n})}},{key:\"stopLiveStreaming\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.sendMessageToCallMachine(fs({action:\"daily-method-stop-live-streaming\"},e))}},{key:\"validateDailyConfig\",value:function(e){e.camSimulcastEncodings&&(console.warn(\"camSimulcastEncodings is deprecated. Use sendSettings, found in DailyCallOptions, to provide camera simulcast settings.\"),this.validateSimulcastEncodings(e.camSimulcastEncodings)),e.screenSimulcastEncodings&&console.warn(\"screenSimulcastEncodings is deprecated. Use sendSettings, found in DailyCallOptions, to provide screen simulcast settings.\"),ua()&&e.noAutoDefaultDeviceChange&&console.warn(\"noAutoDefaultDeviceChange is not supported on Android, and will be ignored.\")}},{key:\"validateSimulcastEncodings\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(e){if(!(e instanceof Array||Array.isArray(e)))throw new Error(\"encodings must be an Array\");if(!ec(e.length,1,3))throw new Error(\"encodings must be an Array with between 1 to \".concat(3,\" layers\"));for(var r=0;r<e.length;r++){var i=e[r];for(var o in this._validateEncodingLayerHasValidProperties(i),i)if(Ms.includes(o)){if(\"number\"!=typeof i[o])throw new Error(\"\".concat(o,\" must be a number\"));if(t){var a=t[o],s=a.min,c=a.max;if(!ec(i[o],s,c))throw new Error(\"\".concat(o,\" value not in range. valid range: \").concat(s,\" to \").concat(c))}}else if(![\"active\",\"scalabilityMode\"].includes(o))throw new Error(\"Invalid key \".concat(o,\", valid keys are:\")+Object.values(Ms));if(n&&!i.hasOwnProperty(\"maxBitrate\"))throw new Error(\"maxBitrate is not specified\")}}}},{key:\"startRemoteMediaPlayer\",value:(P=h((function*(e){var t=this,n=e.url,r=e.settings,i=void 0===r?{state:Ko.PLAY}:r;try{!function(e){if(\"string\"!=typeof e)throw new Error('url parameter must be \"string\" type')}(n),Zs(i),function(e){for(var t in e)if(!Cs.includes(t))throw new Error(\"Invalid key \".concat(t,\", valid keys are: \").concat(Cs));e.simulcastEncodings&&this.validateSimulcastEncodings(e.simulcastEncodings,ks,!0)}(i)}catch(e){throw console.error(\"invalid argument Error: \".concat(e)),console.error('startRemoteMediaPlayer arguments must be of the form:\\n  { url: \"playback url\",\\n  settings?:\\n  {state: \"play\"|\"pause\", simulcastEncodings?: [{}] } }'),e}return new Promise((function(e,r){t.sendMessageToCallMachine({action:\"daily-method-start-remote-media-player\",url:n,settings:i},(function(t){t.error?r({error:t.error,errorMsg:t.errorMsg}):e({session_id:t.session_id,remoteMediaPlayerState:{state:t.state,settings:t.settings}})}))}))})),function(e){return P.apply(this,arguments)})},{key:\"stopRemoteMediaPlayer\",value:(T=h((function*(e){var t=this;if(\"string\"!=typeof e)throw new Error(\" remotePlayerID must be of type string\");return new Promise((function(n,r){t.sendMessageToCallMachine({action:\"daily-method-stop-remote-media-player\",session_id:e},(function(e){e.error?r({error:e.error,errorMsg:e.errorMsg}):n()}))}))})),function(e){return T.apply(this,arguments)})},{key:\"updateRemoteMediaPlayer\",value:(E=h((function*(e){var t=this,n=e.session_id,r=e.settings;try{Zs(r)}catch(e){throw console.error(\"invalid argument Error: \".concat(e)),console.error('updateRemoteMediaPlayer arguments must be of the form:\\n  session_id: \"participant session\",\\n  { settings?: {state: \"play\"|\"pause\"} }'),e}return new Promise((function(e,i){t.sendMessageToCallMachine({action:\"daily-method-update-remote-media-player\",session_id:n,settings:r},(function(t){t.error?i({error:t.error,errorMsg:t.errorMsg}):e({session_id:t.session_id,remoteMediaPlayerState:{state:t.state,settings:t.settings}})}))}))})),function(e){return E.apply(this,arguments)})},{key:\"startTranscription\",value:function(e){Ls(this._callState,\"startTranscription()\"),this.sendMessageToCallMachine(fs({action:\"daily-method-start-transcription\"},e))}},{key:\"updateTranscription\",value:function(e){if(Ls(this._callState,\"updateTranscription()\"),!e)throw new Error(\"updateTranscription Error: options is mandatory\");if(\"object\"!==n(e))throw new Error(\"updateTranscription Error: options must be object type\");if(e.participants&&!Array.isArray(e.participants))throw new Error(\"updateTranscription Error: participants must be an array\");this.sendMessageToCallMachine(fs({action:\"daily-method-update-transcription\"},e))}},{key:\"stopTranscription\",value:function(e){if(Ls(this._callState,\"stopTranscription()\"),e&&\"object\"!==n(e))throw new Error(\"stopTranscription Error: options must be object type\");if(e&&!e.instanceId)throw new Error('\"instanceId\" not provided');this.sendMessageToCallMachine(fs({action:\"daily-method-stop-transcription\"},e))}},{key:\"startDialOut\",value:(C=h((function*(e){var t=this;Ls(this._callState,\"startDialOut()\");var n=function(e){if(e){if(!Array.isArray(e))throw new Error(\"Error starting dial out: audio codec must be an array\");if(e.length<=0)throw new Error(\"Error starting dial out: audio codec array specified but empty\");e.forEach((function(e){if(\"string\"!=typeof e)throw new Error(\"Error starting dial out: audio codec must be a string\");if(\"OPUS\"!==e&&\"PCMU\"!==e&&\"PCMA\"!==e&&\"G722\"!==e)throw new Error(\"Error starting dial out: audio codec must be one of OPUS, PCMU, PCMA, G722\")}))}};if(!e.sipUri&&!e.phoneNumber)throw new Error(\"Error starting dial out: either a sip uri or phone number must be provided\");if(e.sipUri&&e.phoneNumber)throw new Error(\"Error starting dial out: only one of sip uri or phone number must be provided\");if(e.sipUri){if(\"string\"!=typeof e.sipUri)throw new Error(\"Error starting dial out: sipUri must be a string\");if(!e.sipUri.startsWith(\"sip:\"))throw new Error(\"Error starting dial out: Invalid SIP URI, must start with 'sip:'\");if(e.video&&\"boolean\"!=typeof e.video)throw new Error(\"Error starting dial out: video must be a boolean value\");!function(e){if(e&&(n(e.audio),e.video)){if(!Array.isArray(e.video))throw new Error(\"Error starting dial out: video codec must be an array\");if(e.video.length<=0)throw new Error(\"Error starting dial out: video codec array specified but empty\");e.video.forEach((function(e){if(\"string\"!=typeof e)throw new Error(\"Error starting dial out: video codec must be a string\");if(\"H264\"!==e&&\"VP8\"!==e)throw new Error(\"Error starting dial out: video codec must be H264 or VP8\")}))}}(e.codecs)}if(e.phoneNumber){if(\"string\"!=typeof e.phoneNumber)throw new Error(\"Error starting dial out: phoneNumber must be a string\");if(!/^\\+\\d{1,}$/.test(e.phoneNumber))throw new Error(\"Error starting dial out: Invalid phone number, must be valid phone number as per E.164\");e.codecs&&n(e.codecs.audio)}if(e.callerId){if(\"string\"!=typeof e.callerId)throw new Error(\"Error starting dial out: callerId must be a string\");if(e.sipUri)throw new Error(\"Error starting dial out: callerId not allowed with sipUri\")}if(e.displayName){if(\"string\"!=typeof e.displayName)throw new Error(\"Error starting dial out: displayName must be a string\");if(e.displayName.length>=200)throw new Error(\"Error starting dial out: displayName length must be less than 200\")}if(e.userId){if(\"string\"!=typeof e.userId)throw new Error(\"Error starting dial out: userId must be a string\");if(e.userId.length>36)throw new Error(\"Error starting dial out: userId length must be less than or equal to 36\")}return new Promise((function(n,r){t.sendMessageToCallMachine(fs({action:\"dialout-start\"},e),(function(e){e.error?r(e.error):n(e)}))}))})),function(e){return C.apply(this,arguments)})},{key:\"stopDialOut\",value:function(e){var t=this;return Ls(this._callState,\"stopDialOut()\"),new Promise((function(n,r){t.sendMessageToCallMachine(fs({action:\"dialout-stop\"},e),(function(e){e.error?r(e.error):n(e)}))}))}},{key:\"sipCallTransfer\",value:(M=h((function*(e){var t=this;if(Ls(this._callState,\"sipCallTransfer()\"),!e)throw new Error(\"sipCallTransfer() requires a sessionId and toEndPoint\");return e.useSipRefer=!1,Xs(e,\"sipCallTransfer\"),new Promise((function(n,r){t.sendMessageToCallMachine(fs({action:ea},e),(function(e){e.error?r(e.error):n(e)}))}))})),function(e){return M.apply(this,arguments)})},{key:\"sipRefer\",value:(k=h((function*(e){var t=this;if(Ls(this._callState,\"sipRefer()\"),!e)throw new Error(\"sessionId and toEndPoint are mandatory parameter\");return e.useSipRefer=!0,Xs(e,\"sipRefer\"),new Promise((function(n,r){t.sendMessageToCallMachine(fs({action:ea},e),(function(e){e.error?r(e.error):n(e)}))}))})),function(e){return k.apply(this,arguments)})},{key:\"sendDTMF\",value:(S=h((function*(e){var t=this;return Ls(this._callState,\"sendDTMF()\"),function(e){var t=e.sessionId,n=e.tones;if(!t||!n)throw new Error(\"sessionId and tones are mandatory parameter\");if(\"string\"!=typeof t||\"string\"!=typeof n)throw new Error(\"sessionId and tones should be of string type\");if(n.length>20)throw new Error(\"tones string must be upto 20 characters\");var r=/[^0-9A-D*#]/g,i=n.match(r);if(i&&i[0])throw new Error(\"\".concat(i[0],\" is not valid DTMF tone\"))}(e),new Promise((function(n,r){t.sendMessageToCallMachine(fs({action:\"send-dtmf\"},e),(function(e){e.error?r(e.error):n(e)}))}))})),function(e){return S.apply(this,arguments)})},{key:\"getNetworkStats\",value:function(){var e=this;if(this._callState!==ri){return{stats:{latest:{}}}}return new Promise((function(t){e.sendMessageToCallMachine({action:\"get-calc-stats\"},(function(n){t(fs({stats:n.stats},e._network))}))}))}},{key:\"testWebsocketConnectivity\",value:(w=h((function*(){var e=this;if(Rs(this._testCallInProgress,\"testWebsocketConnectivity()\"),this.needsLoad())try{yield this.load()}catch(e){return Promise.reject(e)}return new Promise((function(t,n){e.sendMessageToCallMachine({action:\"test-websocket-connectivity\"},(function(e){e.error?n(e.error):t(e.results)}))}))})),function(){return w.apply(this,arguments)})},{key:\"abortTestWebsocketConnectivity\",value:function(){this.sendMessageToCallMachine({action:\"abort-test-websocket-connectivity\"})}},{key:\"_validateVideoTrackForNetworkTests\",value:function(e){return e?e instanceof MediaStreamTrack?!!us(e,{isLocalScreenVideo:!1})||(console.error(\"Video track is not playable. This test needs a live video track.\"),!1):(console.error(\"Video track needs to be of type `MediaStreamTrack`.\"),!1):(console.error(\"Missing video track. You must provide a video track in order to run this test.\"),!1)}},{key:\"testCallQuality\",value:(b=h((function*(){var t=this;Us(),Fs(this._callObjectMode,\"testCallQuality()\"),Ns(this._callMachineInitialized,\"testCallQuality()\",null,!0),Ds(this._callState,this._isPreparingToJoin,\"testCallQuality()\");var n=this._testCallAlreadyInProgress,r=function(e){n||(t._testCallInProgress=e)};if(r(!0),this.needsLoad())try{var i=this._callState;yield this.load(),this._callState=i}catch(e){return r(!1),Promise.reject(e)}return new Promise((function(n){t.sendMessageToCallMachine({action:\"test-call-quality\",dailyJsVersion:t.properties.dailyJsVersion},(function(i){var o=i.results,a=o.result,s=e(o,ds);if(\"failed\"===a){var c,l=fs({},s);null!==(c=s.error)&&void 0!==c&&c.details?(s.error.details=JSON.parse(s.error.details),l.error=fs(fs({},l.error),{},{details:fs({},l.error.details)}),l.error.details.duringTest=\"testCallQuality\"):(l.error=l.error?fs({},l.error):{},l.error.details={duringTest:\"testCallQuality\"}),t._maybeSendToSentry(l)}r(!1),n(fs({result:a},s))}))}))})),function(){return b.apply(this,arguments)})},{key:\"stopTestCallQuality\",value:function(){this.sendMessageToCallMachine({action:\"stop-test-call-quality\"})}},{key:\"testConnectionQuality\",value:(_=h((function*(e){var t;na()?(console.warn(\"testConnectionQuality() is deprecated: use testPeerToPeerCallQuality() instead\"),t=yield this.testPeerToPeerCallQuality(e)):(console.warn(\"testConnectionQuality() is deprecated: use testCallQuality() instead\"),t=yield this.testCallQuality());var n={result:t.result,secondsElapsed:t.secondsElapsed};return t.data&&(n.data={maxRTT:t.data.maxRoundTripTime,packetLoss:t.data.avgRecvPacketLoss}),n})),function(e){return _.apply(this,arguments)})},{key:\"testPeerToPeerCallQuality\",value:(y=h((function*(e){var t=this;if(Rs(this._testCallInProgress,\"testPeerToPeerCallQuality()\"),this.needsLoad())try{yield this.load()}catch(e){return Promise.reject(e)}var n=e.videoTrack,r=e.duration;if(!this._validateVideoTrackForNetworkTests(n))throw new Error(\"Video track error\");return this._sharedTracks.videoTrackForConnectionQualityTest=n,new Promise((function(e,n){t.sendMessageToCallMachine({action:\"test-p2p-call-quality\",duration:r},(function(t){t.error?n(t.error):e(t.results)}))}))})),function(e){return y.apply(this,arguments)})},{key:\"stopTestConnectionQuality\",value:function(){na()?(console.warn(\"stopTestConnectionQuality() is deprecated: use testPeerToPeerCallQuality() and stopTestPeerToPeerCallQuality() instead\"),this.stopTestPeerToPeerCallQuality()):(console.warn(\"stopTestConnectionQuality() is deprecated: use testCallQuality() and stopTestCallQuality() instead\"),this.stopTestCallQuality())}},{key:\"stopTestPeerToPeerCallQuality\",value:function(){this.sendMessageToCallMachine({action:\"stop-test-p2p-call-quality\"})}},{key:\"testNetworkConnectivity\",value:(m=h((function*(e){var t=this;if(Rs(this._testCallInProgress,\"testNetworkConnectivity()\"),this.needsLoad())try{yield this.load()}catch(e){return Promise.reject(e)}if(!this._validateVideoTrackForNetworkTests(e))throw new Error(\"Video track error\");return this._sharedTracks.videoTrackForNetworkConnectivityTest=e,new Promise((function(e,n){t.sendMessageToCallMachine({action:\"test-network-connectivity\"},(function(t){t.error?n(t.error):e(t.results)}))}))})),function(e){return m.apply(this,arguments)})},{key:\"abortTestNetworkConnectivity\",value:function(){this.sendMessageToCallMachine({action:\"abort-test-network-connectivity\"})}},{key:\"getCpuLoadStats\",value:function(){var e=this;return new Promise((function(t){if(e._callState===ri){e.sendMessageToCallMachine({action:\"get-cpu-load-stats\"},(function(e){t(e.cpuStats)}))}else t({cpuLoadState:void 0,cpuLoadStateReason:void 0,stats:{}})}))}},{key:\"_validateEncodingLayerHasValidProperties\",value:function(e){var t;if(!((null===(t=Object.keys(e))||void 0===t?void 0:t.length)>0))throw new Error(\"Empty encoding is not allowed. At least one of these valid keys should be specified:\"+Object.values(Ms))}},{key:\"_validateVideoSendSettings\",value:function(e,t){var r=\"screenVideo\"===e?[\"default-screen-video\",\"detail-optimized\",\"motion-optimized\",\"motion-and-detail-balanced\"]:[\"default-video\",\"bandwidth-optimized\",\"bandwidth-and-quality-balanced\",\"quality-optimized\",\"adaptive-2-layers\",\"adaptive-3-layers\"],i=\"Video send settings should be either an object or one of the supported presets: \".concat(r.join());if(\"string\"==typeof t){if(!r.includes(t))throw new Error(i)}else{if(\"object\"!==n(t))throw new Error(i);if(!t.maxQuality&&!t.encodings&&void 0===t.allowAdaptiveLayers)throw new Error(\"Video send settings must contain at least maxQuality, allowAdaptiveLayers or encodings attribute\");if(t.maxQuality&&-1===[\"low\",\"medium\",\"high\"].indexOf(t.maxQuality))throw new Error(\"maxQuality must be either low, medium or high\");if(t.encodings){var o=!1;switch(Object.keys(t.encodings).length){case 1:o=!t.encodings.low;break;case 2:o=!t.encodings.low||!t.encodings.medium;break;case 3:o=!t.encodings.low||!t.encodings.medium||!t.encodings.high;break;default:o=!0}if(o)throw new Error(\"Encodings must be defined as: low, low and medium, or low, medium and high.\");t.encodings.low&&this._validateEncodingLayerHasValidProperties(t.encodings.low),t.encodings.medium&&this._validateEncodingLayerHasValidProperties(t.encodings.medium),t.encodings.high&&this._validateEncodingLayerHasValidProperties(t.encodings.high)}}}},{key:\"validateUpdateSendSettings\",value:function(e){var t=this;if(!e||0===Object.keys(e).length)throw new Error(\"Send settings must contain at least information for one track!\");Object.entries(e).forEach((function(e){var n=v(e,2),r=n[0],i=n[1];t._validateVideoSendSettings(r,i)}))}},{key:\"updateSendSettings\",value:function(e){var t=this;return this.validateUpdateSendSettings(e),this.needsLoad()?(this._preloadCache.sendSettings=e,{sendSettings:this._preloadCache.sendSettings}):new Promise((function(n,r){t.sendMessageToCallMachine({action:\"update-send-settings\",sendSettings:e},(function(e){e.error?r(e.error):n(e.sendSettings)}))}))}},{key:\"getSendSettings\",value:function(){return this._sendSettings||this._preloadCache.sendSettings}},{key:\"getLocalAudioLevel\",value:function(){return this._localAudioLevel}},{key:\"getRemoteParticipantsAudioLevel\",value:function(){return this._remoteParticipantsAudioLevel}},{key:\"getActiveSpeaker\",value:function(){return Us(),this._activeSpeaker}},{key:\"setActiveSpeakerMode\",value:function(e){return Us(),this.sendMessageToCallMachine({action:\"set-active-speaker-mode\",enabled:e}),this}},{key:\"activeSpeakerMode\",value:function(){return Us(),this._activeSpeakerMode}},{key:\"subscribeToTracksAutomatically\",value:function(){return this._preloadCache.subscribeToTracksAutomatically}},{key:\"setSubscribeToTracksAutomatically\",value:function(e){return Ls(this._callState,\"setSubscribeToTracksAutomatically()\",\"Use the subscribeToTracksAutomatically configuration property.\"),this._preloadCache.subscribeToTracksAutomatically=e,this.sendMessageToCallMachine({action:\"daily-method-subscribe-to-tracks-automatically\",enabled:e}),this}},{key:\"enumerateDevices\",value:(f=h((function*(){var e=this;if(this._callObjectMode){var t=yield navigator.mediaDevices.enumerateDevices();return\"Firefox\"===pa()&&ha().major>115&&ha().major<123&&(t=t.filter((function(e){return\"audiooutput\"!==e.kind}))),{devices:t.map((function(e){var t=JSON.parse(JSON.stringify(e));if(!na()&&\"videoinput\"===e.kind&&e.getCapabilities){var n,r=e.getCapabilities();t.facing=(null==r||null===(n=r.facingMode)||void 0===n?void 0:n.length)>=1?r.facingMode[0]:void 0}return t}))}}return new Promise((function(t){e.sendMessageToCallMachine({action:\"enumerate-devices\"},(function(e){t({devices:e.devices})}))}))})),function(){return f.apply(this,arguments)})},{key:\"sendAppMessage\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"*\";if(Ls(this._callState,\"sendAppMessage()\"),JSON.stringify(e).length>this._maxAppMessageSize)throw new Error(\"Message data too large. Max size is \"+this._maxAppMessageSize);return this.sendMessageToCallMachine({action:\"app-msg\",data:e,to:t}),this}},{key:\"addFakeParticipant\",value:function(e){return Us(),Ls(this._callState,\"addFakeParticipant()\"),this.sendMessageToCallMachine(fs({action:\"add-fake-participant\"},e)),this}},{key:\"setShowNamesMode\",value:function(e){return Bs(this._callObjectMode,\"setShowNamesMode()\"),Us(),e&&\"always\"!==e&&\"never\"!==e?(console.error('setShowNamesMode argument should be \"always\", \"never\", or false'),this):(this.sendMessageToCallMachine({action:\"set-show-names\",mode:e}),this)}},{key:\"setShowLocalVideo\",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return Bs(this._callObjectMode,\"setShowLocalVideo()\"),Us(),Ls(this._callState,\"setShowLocalVideo()\"),\"boolean\"!=typeof e?(console.error(\"setShowLocalVideo only accepts a boolean value\"),this):(this.sendMessageToCallMachine({action:\"set-show-local-video\",show:e}),this._showLocalVideo=e,this)}},{key:\"showLocalVideo\",value:function(){return Bs(this._callObjectMode,\"showLocalVideo()\"),Us(),this._showLocalVideo}},{key:\"setShowParticipantsBar\",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return Bs(this._callObjectMode,\"setShowParticipantsBar()\"),Us(),Ls(this._callState,\"setShowParticipantsBar()\"),\"boolean\"!=typeof e?(console.error(\"setShowParticipantsBar only accepts a boolean value\"),this):(this.sendMessageToCallMachine({action:\"set-show-participants-bar\",show:e}),this._showParticipantsBar=e,this)}},{key:\"showParticipantsBar\",value:function(){return Bs(this._callObjectMode,\"showParticipantsBar()\"),Us(),this._showParticipantsBar}},{key:\"customIntegrations\",value:function(){return Us(),Bs(this._callObjectMode,\"customIntegrations()\"),this._customIntegrations}},{key:\"setCustomIntegrations\",value:function(e){return Us(),Bs(this._callObjectMode,\"setCustomIntegrations()\"),Ls(this._callState,\"setCustomIntegrations()\"),Ks(e)?(this.sendMessageToCallMachine({action:\"set-custom-integrations\",integrations:e}),this._customIntegrations=e,this):this}},{key:\"startCustomIntegrations\",value:function(e){var t=this;if(Us(),Bs(this._callObjectMode,\"startCustomIntegrations()\"),Ls(this._callState,\"startCustomIntegrations()\"),Array.isArray(e)&&e.some((function(e){return\"string\"!=typeof e}))||!Array.isArray(e)&&\"string\"!=typeof e)return console.error(\"startCustomIntegrations() only accepts string | string[]\"),this;var n=\"string\"==typeof e?[e]:e,r=n.filter((function(e){return!(e in t._customIntegrations)}));return r.length?(console.error(\"Can't find custom integration(s): \\\"\".concat(r.join(\", \"),'\"')),this):(this.sendMessageToCallMachine({action:\"start-custom-integrations\",ids:n}),this)}},{key:\"stopCustomIntegrations\",value:function(e){var t=this;if(Us(),Bs(this._callObjectMode,\"stopCustomIntegrations()\"),Ls(this._callState,\"stopCustomIntegrations()\"),Array.isArray(e)&&e.some((function(e){return\"string\"!=typeof e}))||!Array.isArray(e)&&\"string\"!=typeof e)return console.error(\"stopCustomIntegrations() only accepts string | string[]\"),this;var n=\"string\"==typeof e?[e]:e,r=n.filter((function(e){return!(e in t._customIntegrations)}));return r.length?(console.error(\"Can't find custom integration(s): \\\"\".concat(r.join(\", \"),'\"')),this):(this.sendMessageToCallMachine({action:\"stop-custom-integrations\",ids:n}),this)}},{key:\"customTrayButtons\",value:function(){return Bs(this._callObjectMode,\"customTrayButtons()\"),Us(),this._customTrayButtons}},{key:\"updateCustomTrayButtons\",value:function(e){return Bs(this._callObjectMode,\"updateCustomTrayButtons()\"),Us(),Ls(this._callState,\"updateCustomTrayButtons()\"),Qs(e)?(this.sendMessageToCallMachine({action:\"update-custom-tray-buttons\",btns:e}),this._customTrayButtons=e,this):(console.error(\"updateCustomTrayButtons only accepts a dictionary of the type \".concat(JSON.stringify(Ts))),this)}},{key:\"theme\",value:function(){return Bs(this._callObjectMode,\"theme()\"),this.properties.theme}},{key:\"setTheme\",value:function(e){var t=this;return Bs(this._callObjectMode,\"setTheme()\"),new Promise((function(n,r){try{t.validateProperties({theme:e}),t.properties.theme=fs({},e),t.sendMessageToCallMachine({action:\"set-theme\",theme:t.properties.theme});try{t.emitDailyJSEvent({action:Fi,theme:t.properties.theme})}catch(e){console.log(\"could not emit 'theme-updated'\",e)}n(t.properties.theme)}catch(e){r(e)}}))}},{key:\"requestFullscreen\",value:(p=h((function*(){if(Us(),this._iframe&&!document.fullscreenElement&&oa())try{(yield this._iframe.requestFullscreen)?this._iframe.requestFullscreen():this._iframe.webkitRequestFullscreen()}catch(e){console.log(\"could not make video call fullscreen\",e)}})),function(){return p.apply(this,arguments)})},{key:\"exitFullscreen\",value:function(){Us(),document.fullscreenElement?document.exitFullscreen():document.webkitFullscreenElement&&document.webkitExitFullscreen()}},{key:\"getSidebarView\",value:(u=h((function*(){var e=this;return this._callObjectMode?(console.error(\"getSidebarView is not available in callObject mode\"),Promise.resolve(null)):new Promise((function(t){e.sendMessageToCallMachine({action:\"get-sidebar-view\"},(function(e){t(e.view)}))}))})),function(){return u.apply(this,arguments)})},{key:\"setSidebarView\",value:function(e){return this._callObjectMode?(console.error(\"setSidebarView is not available in callObject mode\"),this):(this.sendMessageToCallMachine({action:\"set-sidebar-view\",view:e}),this)}},{key:\"room\",value:(l=h((function*(){var e=this,t=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).includeRoomConfigDefaults,n=void 0===t||t;return this._accessState.access===pi||this.needsLoad()?this.properties.url?{roomUrlPendingJoin:this.properties.url}:null:new Promise((function(t){e.sendMessageToCallMachine({action:\"lib-room-info\",includeRoomConfigDefaults:n},(function(e){delete e.action,delete e.callbackStamp,t(e)}))}))})),function(){return l.apply(this,arguments)})},{key:\"geo\",value:(s=h((function*(){try{var e=yield fetch(\"https://gs.daily.co/_ks_/x-swsl/:\");return{current:(yield e.json()).geo}}catch(e){return console.error(\"geo lookup failed\",e),{current:\"\"}}})),function(){return s.apply(this,arguments)})},{key:\"setNetworkTopology\",value:(i=h((function*(e){var t=this;return Us(),Ls(this._callState,\"setNetworkTopology()\"),new Promise((function(n,r){t.sendMessageToCallMachine({action:\"set-network-topology\",opts:e},(function(e){e.error?r({error:e.error}):n({workerId:e.workerId})}))}))})),function(e){return i.apply(this,arguments)})},{key:\"getNetworkTopology\",value:(r=h((function*(){var e=this;return new Promise((function(t,n){e.needsLoad()&&t({topology:\"none\"}),e.sendMessageToCallMachine({action:\"get-network-topology\"},(function(e){e.error?n({error:e.error}):t({topology:e.topology})}))}))})),function(){return r.apply(this,arguments)})},{key:\"setPlayNewParticipantSound\",value:function(e){if(Us(),\"number\"!=typeof e&&!0!==e&&!1!==e)throw new Error(\"argument to setShouldPlayNewParticipantSound should be true, false, or a number, but is \".concat(e));this.sendMessageToCallMachine({action:\"daily-method-set-play-ding\",arg:e})}},{key:\"on\",value:function(e,t){return g.prototype.on.call(this,e,t)}},{key:\"once\",value:function(e,t){return g.prototype.once.call(this,e,t)}},{key:\"off\",value:function(e,t){return g.prototype.off.call(this,e,t)}},{key:\"validateProperties\",value:function(e){for(var t in e){if(!Os[t])throw new Error(\"unrecognized property '\".concat(t,\"'\"));if(Os[t].validate&&!Os[t].validate(e[t],this))throw new Error(\"property '\".concat(t,\"': \").concat(Os[t].help))}}},{key:\"assembleMeetingUrl\",value:function(){var e,t,n=fs(fs({},this.properties),{},{emb:this.callClientId,embHref:encodeURIComponent(window.location.href),proxy:null!==(e=this.properties.dailyConfig)&&void 0!==e&&e.proxyUrl?encodeURIComponent(null===(t=this.properties.dailyConfig)||void 0===t?void 0:t.proxyUrl):void 0}),r=n.url.match(/\\?/)?\"&\":\"?\";return n.url+r+Object.keys(Os).filter((function(e){return Os[e].queryString&&void 0!==n[e]})).map((function(e){return\"\".concat(Os[e].queryString,\"=\").concat(n[e])})).join(\"&\")}},{key:\"needsLoad\",value:function(){return[Zr,ei,ii,oi].includes(this._callState)}},{key:\"sendMessageToCallMachine\",value:function(e,t){if(this._destroyed&&(this._logUseAfterDestroy(),this.strictMode))throw new Error(\"Use after destroy\");this._messageChannel.sendMessageToCallMachine(e,t,this.callClientId,this._iframe)}},{key:\"forwardPackagedMessageToCallMachine\",value:function(e){this._messageChannel.forwardPackagedMessageToCallMachine(e,this._iframe,this.callClientId)}},{key:\"addListenerForPackagedMessagesFromCallMachine\",value:function(e){return this._messageChannel.addListenerForPackagedMessagesFromCallMachine(e,this.callClientId)}},{key:\"removeListenerForPackagedMessagesFromCallMachine\",value:function(e){this._messageChannel.removeListenerForPackagedMessagesFromCallMachine(e)}},{key:\"handleMessageFromCallMachine\",value:function(t){switch(t.action){case Ni:this.sendMessageToCallMachine(fs({action:Ri},this.properties));break;case\"call-machine-initialized\":this._callMachineInitialized=!0;var n={action:zo,level:\"log\",code:1011,stats:{event:\"bundle load\",time:\"no-op\"===this._bundleLoadTime?0:this._bundleLoadTime,preLoaded:\"no-op\"===this._bundleLoadTime,url:X(this.properties.dailyConfig)}};this.sendMessageToCallMachine(n),this._delayDuplicateInstanceLog&&this._logDuplicateInstanceAttempt();break;case Vi:this._loadedCallback&&(this._loadedCallback(),this._loadedCallback=null),this.emitDailyJSEvent(t);break;case Wi:var r,i=fs({},t);delete i.internal,this._maxAppMessageSize=(null===(r=t.internal)||void 0===r?void 0:r._maxAppMessageSize)||Vo,this._joinedCallback&&(this._joinedCallback(t.participants),this._joinedCallback=null),this.emitDailyJSEvent(i);break;case Hi:case Gi:if(this._callState===ii)return;if(t.participant&&t.participant.session_id){var o=t.participant.local?\"local\":t.participant.session_id;if(this._callObjectMode){var a=this._callMachine().store;Ga(t.participant,a),Qa(t.participant,a),Ya(t.participant,this._participants[o],a)}try{this.maybeParticipantTracksStopped(this._participants[o],t.participant),this.maybeParticipantTracksStarted(this._participants[o],t.participant),this.maybeEventRecordingStopped(this._participants[o],t.participant),this.maybeEventRecordingStarted(this._participants[o],t.participant)}catch(e){console.error(\"track events error\",e)}this.compareEqualForParticipantUpdateEvent(t.participant,this._participants[o])||(this._participants[o]=fs({},t.participant),this.toggleParticipantAudioBasedOnNativeAudioFocus(),this.emitDailyJSEvent(t))}break;case Qi:if(t.participant&&t.participant.session_id){var s=this._participants[t.participant.session_id];s&&this.maybeParticipantTracksStopped(s,null),delete this._participants[t.participant.session_id],this.emitDailyJSEvent(t)}break;case Ki:D(this._participantCounts,t.participantCounts)||(this._participantCounts=t.participantCounts,this.emitDailyJSEvent(t));break;case Yi:var c={access:t.access};t.awaitingAccess&&(c.awaitingAccess=t.awaitingAccess),D(this._accessState,c)||(this._accessState=c,this.emitDailyJSEvent(t));break;case Xi:if(t.meetingSession){this._meetingSessionSummary=t.meetingSession,this.emitDailyJSEvent(t);var l=fs(fs({},t),{},{action:\"meeting-session-updated\"});this.emitDailyJSEvent(l)}break;case Uo:var u;this._iframe&&!t.preserveIframe&&(this._iframe.src=\"\"),this._updateCallState(oi),this.resetMeetingDependentVars(),this._loadedCallback&&(this._loadedCallback(t.errorMsg),this._loadedCallback=null),t.preserveIframe;var d=e(t,ps);null!=d&&null!==(u=d.error)&&void 0!==u&&u.details&&(d.error.details=JSON.parse(d.error.details)),this._maybeSendToSentry(t),this._joinedCallback&&(this._joinedCallback(null,d),this._joinedCallback=null),this.emitDailyJSEvent(d);break;case zi:this._callState!==oi&&this._updateCallState(ii),this.resetMeetingDependentVars(),this._resolveLeave&&(this._resolveLeave(),this._resolveLeave=null),this.emitDailyJSEvent(t);break;case\"selected-devices-updated\":t.devices&&this.emitDailyJSEvent(t);break;case Eo:var p=t.threshold,h=t.quality;p===this._network.threshold&&h===this._network.quality||(this._network.quality=h,this._network.threshold=p,this.emitDailyJSEvent(t));break;case Po:t&&t.cpuLoadState&&this.emitDailyJSEvent(t);break;case Oo:t&&void 0!==t.faceCounts&&this.emitDailyJSEvent(t);break;case Mo:var f=t.activeSpeaker;this._activeSpeaker.peerId!==f.peerId&&(this._activeSpeaker.peerId=f.peerId,this.emitDailyJSEvent({action:t.action,activeSpeaker:this._activeSpeaker}));break;case\"show-local-video-changed\":if(this._callObjectMode)return;var v=t.show;this._showLocalVideo=v,this.emitDailyJSEvent({action:t.action,show:v});break;case Co:var m=t.enabled;this._activeSpeakerMode!==m&&(this._activeSpeakerMode=m,this.emitDailyJSEvent({action:t.action,enabled:this._activeSpeakerMode}));break;case to:case no:case ro:this._waitingParticipants=t.allWaitingParticipants,this.emitDailyJSEvent({action:t.action,participant:t.participant});break;case Ro:D(this._receiveSettings,t.receiveSettings)||(this._receiveSettings=t.receiveSettings,this.emitDailyJSEvent({action:t.action,receiveSettings:t.receiveSettings}));break;case Fo:if(!D(this._inputSettings,t.inputSettings)){var g=this._getInputSettings();this._inputSettings=t.inputSettings,this._preloadCache.inputSettings={},D(g,this._getInputSettings())||this.emitDailyJSEvent({action:t.action,inputSettings:this._getInputSettings()})}break;case\"send-settings-updated\":D(this._sendSettings,t.sendSettings)||(this._sendSettings=t.sendSettings,this._preloadCache.sendSettings=null,this.emitDailyJSEvent({action:t.action,sendSettings:t.sendSettings}));break;case\"local-audio-level\":this._localAudioLevel=t.audioLevel,this._preloadCache.localAudioLevelObserver=null,this.emitDailyJSEvent(t);break;case\"remote-participants-audio-level\":this._remoteParticipantsAudioLevel=t.participantsAudioLevel,this._preloadCache.remoteParticipantsAudioLevelObserver=null,this.emitDailyJSEvent(t);break;case yo:var y=t.session_id;this._rmpPlayerState[y]=t.playerState,this.emitDailyJSEvent(t);break;case bo:delete this._rmpPlayerState[t.session_id],this.emitDailyJSEvent(t);break;case _o:var _=t.session_id,b=this._rmpPlayerState[_];b&&this.compareEqualForRMPUpdateEvent(b,t.remoteMediaPlayerState)||(this._rmpPlayerState[_]=t.remoteMediaPlayerState,this.emitDailyJSEvent(t));break;case\"custom-button-click\":case\"sidebar-view-changed\":this.emitDailyJSEvent(t);break;case Zi:var w=this._meetingSessionState.topology!==(t.meetingSessionState&&t.meetingSessionState.topology);this._meetingSessionState=tc(t.meetingSessionState,this._callObjectMode),(this._callObjectMode||w)&&this.emitDailyJSEvent(t);break;case wo:this._isScreenSharing=!0,this.emitDailyJSEvent(t);break;case So:case ko:this._isScreenSharing=!1,this.emitDailyJSEvent(t);break;case lo:case uo:case po:case ho:case fo:case ao:case so:case co:case Ji:case $i:case mo:case go:case\"test-completed\":case To:case vo:case xo:case Lo:case Io:case Do:case Bo:case No:case\"dialin-ready\":case\"dialin-connected\":case\"dialin-error\":case\"dialin-stopped\":case\"dialin-warning\":case\"dialout-connected\":case\"dialout-answered\":case\"dialout-error\":case\"dialout-stopped\":case\"dialout-warning\":this.emitDailyJSEvent(t);break;case\"request-fullscreen\":this.requestFullscreen();break;case\"request-exit-fullscreen\":this.exitFullscreen()}}},{key:\"maybeEventRecordingStopped\",value:function(e,t){var n=\"record\";e&&(t.local||!1!==t[n]||e[n]===t[n]||this.emitDailyJSEvent({action:uo}))}},{key:\"maybeEventRecordingStarted\",value:function(e,t){var n=\"record\";e&&(t.local||!0!==t[n]||e[n]===t[n]||this.emitDailyJSEvent({action:lo}))}},{key:\"maybeEventTrackStopped\",value:function(e,t,n,r){e&&(\"ended\"!==e.readyState&&t&&e.id===t.id||this.emitDailyJSEvent({action:oo,track:e,participant:n,type:r}))}},{key:\"maybeEventTrackStarted\",value:function(e,t,n,r){t&&(e&&\"ended\"!==e.readyState&&t.id===e.id||this.emitDailyJSEvent({action:io,track:t,participant:n,type:r}))}},{key:\"maybeParticipantTracksStopped\",value:function(e,t){if(e)for(var n in e.tracks)this.maybeEventTrackStopped(e.tracks[n].track,t&&t.tracks[n]?t.tracks[n].track:null,t,n)}},{key:\"maybeParticipantTracksStarted\",value:function(e,t){if(t)for(var n in t.tracks)this.maybeEventTrackStarted(e&&e.tracks[n]?e.tracks[n].track:null,t.tracks[n].track,t,n)}},{key:\"compareEqualForRMPUpdateEvent\",value:function(e,t){var n,r;return e.state===t.state&&(null===(n=e.settings)||void 0===n?void 0:n.volume)===(null===(r=t.settings)||void 0===r?void 0:r.volume)}},{key:\"emitDailyJSEvent\",value:function(e){try{e.callClientId=this.callClientId,this.emit(e.action,e)}catch(t){console.log(\"could not emit\",e,t)}}},{key:\"compareEqualForParticipantUpdateEvent\",value:function(e,t){return!!D(e,t)&&((!e.videoTrack||!t.videoTrack||e.videoTrack.id===t.videoTrack.id&&e.videoTrack.muted===t.videoTrack.muted&&e.videoTrack.enabled===t.videoTrack.enabled)&&(!e.audioTrack||!t.audioTrack||e.audioTrack.id===t.audioTrack.id&&e.audioTrack.muted===t.audioTrack.muted&&e.audioTrack.enabled===t.audioTrack.enabled))}},{key:\"nativeUtils\",value:function(){return na()?\"undefined\"==typeof DailyNativeUtils?(console.warn(\"in React Native, DailyNativeUtils is expected to be available\"),null):DailyNativeUtils:null}},{key:\"updateIsPreparingToJoin\",value:function(e){this._updateCallState(this._callState,e)}},{key:\"_updateCallState\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._isPreparingToJoin;if(e!==this._callState||t!==this._isPreparingToJoin){var n=this._callState,r=this._isPreparingToJoin;this._callState=e,this._isPreparingToJoin=t;var i=this._callState===ri;this.updateShowAndroidOngoingMeetingNotification(i);var o=Is(n,r),a=Is(this._callState,this._isPreparingToJoin);o!==a&&(this.updateKeepDeviceAwake(a),this.updateDeviceAudioMode(a),this.updateNoOpRecordingEnsuringBackgroundContinuity(a))}}},{key:\"resetMeetingDependentVars\",value:function(){this._participants={},this._participantCounts=Ss,this._waitingParticipants={},this._activeSpeaker={},this._activeSpeakerMode=!1,this._didPreAuth=!1,this._accessState={access:pi},this._finalSummaryOfPrevSession=this._meetingSessionSummary,this._meetingSessionSummary={},this._meetingSessionState=tc(ws,this._callObjectMode),this._isScreenSharing=!1,this._receiveSettings={},this._inputSettings=void 0,this._sendSettings={},this._localAudioLevel=0,this._isLocalAudioLevelObserverRunning=!1,this._remoteParticipantsAudioLevel={},this._isRemoteParticipantsAudioLevelObserverRunning=!1,this._maxAppMessageSize=Vo,this._callMachineInitialized=!1,this._bundleLoadTime=void 0,this._preloadCache}},{key:\"updateKeepDeviceAwake\",value:function(e){na()&&this.nativeUtils().setKeepDeviceAwake(e,this.callClientId)}},{key:\"updateDeviceAudioMode\",value:function(e){if(na()&&!this.disableReactNativeAutoDeviceManagement(\"audio\")){var t=e?this._nativeInCallAudioMode:\"idle\";this.nativeUtils().setAudioMode(t)}}},{key:\"updateShowAndroidOngoingMeetingNotification\",value:function(e){if(na()&&this.nativeUtils().setShowOngoingMeetingNotification){var t,n,r,i;if(this.properties.reactNativeConfig&&this.properties.reactNativeConfig.androidInCallNotification){var o=this.properties.reactNativeConfig.androidInCallNotification;t=o.title,n=o.subtitle,r=o.iconName,i=o.disableForCustomOverride}i&&(e=!1),this.nativeUtils().setShowOngoingMeetingNotification(e,t,n,r,this.callClientId)}}},{key:\"updateNoOpRecordingEnsuringBackgroundContinuity\",value:function(e){na()&&this.nativeUtils().enableNoOpRecordingEnsuringBackgroundContinuity&&this.nativeUtils().enableNoOpRecordingEnsuringBackgroundContinuity(e)}},{key:\"toggleParticipantAudioBasedOnNativeAudioFocus\",value:function(){var e,t;if(na()){var n=null===(e=this._callMachine())||void 0===e||null===(t=e.store)||void 0===t?void 0:t.getState();for(var r in null==n?void 0:n.streams){var i=n.streams[r];i&&i.pendingTrack&&\"audio\"===i.pendingTrack.kind&&(i.pendingTrack.enabled=this._hasNativeAudioFocus)}}}},{key:\"disableReactNativeAutoDeviceManagement\",value:function(e){return this.properties.reactNativeConfig&&this.properties.reactNativeConfig.disableAutoDeviceManagement&&this.properties.reactNativeConfig.disableAutoDeviceManagement[e]}},{key:\"absoluteUrl\",value:function(e){if(void 0!==e){var t=document.createElement(\"a\");return t.href=e,t.href}}},{key:\"sayHello\",value:function(){var e=\"hello, world.\";return console.log(e),e}},{key:\"_logUseAfterDestroy\",value:function(){var e=Object.values(ys)[0];if(this.needsLoad()){if(e&&!e.needsLoad()){var t={action:zo,level:\"error\",code:this.strictMode?9995:9997};e.sendMessageToCallMachine(t)}else if(!this.strictMode){console.error(\"You are are attempting to use a call instance that was previously destroyed, which is unsupported. Please remove `strictMode: false` from your constructor properties to enable strict mode to track down and fix this unsupported usage.\")}}else{var n={action:zo,level:\"error\",code:this.strictMode?9995:9997};this._messageChannel.sendMessageToCallMachine(n,null,this.callClientId,this._iframe)}}},{key:\"_logDuplicateInstanceAttempt\",value:function(){for(var e=0,t=Object.values(ys);e<t.length;e++){var n=t[e];n._callMachineInitialized?(n.sendMessageToCallMachine({action:zo,level:\"warn\",code:this.allowMultipleCallInstances?9993:9992}),n._delayDuplicateInstanceLog=!1):n._delayDuplicateInstanceLog=!0}}},{key:\"_maybeSendToSentry\",value:function(e){var t,n,r,i,o,a;if(null!==(t=e.error)&&void 0!==t&&t.type){if(![Ti,Ci,ki].includes(e.error.type))return;if(e.error.type===ki&&e.error.msg.includes(\"deleted\"))return}var s=null!==(n=this.properties)&&void 0!==n&&n.url?new URL(this.properties.url):void 0,c=\"production\";s&&s.host.includes(\".staging.daily\")&&(c=\"staging\");var l,u,d,p,h,f=[Yn(),Qn(),$r(),Vr(),Gr(),Xr(),Zn(),Yr()].filter((function(e){return![\"BrowserApiErrors\",\"Breadcrumbs\",\"GlobalHandlers\"].includes(e.name)})),v=new gr({dsn:\"https://f10f1c81e5d44a4098416c0867a8b740@o77906.ingest.sentry.io/168844\",transport:jr,stackParser:Fr,integrations:f,environment:c}),m=new on;if(m.setClient(v),v.init(),this.session_id&&m.setExtra(\"sessionId\",this.session_id),this.properties){var g=fs({},this.properties);g.userName=g.userName?\"[Filtered]\":void 0,g.userData=g.userData?\"[Filtered]\":void 0,g.token=g.token?\"[Filtered]\":void 0,m.setExtra(\"properties\",g)}if(s){var y=s.searchParams.get(\"domain\");if(!y){var _=s.host.match(/(.*?)\\./);y=_&&_[1]||\"\"}y&&m.setTag(\"domain\",y)}e.error&&(m.setTag(\"fatalErrorType\",e.error.type),m.setExtra(\"errorDetails\",e.error.details),(null===(l=e.error.details)||void 0===l?void 0:l.uri)&&m.setTag(\"serverAddress\",e.error.details.uri),(null===(u=e.error.details)||void 0===u?void 0:u.workerGroup)&&m.setTag(\"workerGroup\",e.error.details.workerGroup),(null===(d=e.error.details)||void 0===d?void 0:d.geoGroup)&&m.setTag(\"geoGroup\",e.error.details.geoGroup),(null===(p=e.error.details)||void 0===p?void 0:p.on)&&m.setTag(\"connectionAttempt\",e.error.details.on),null!==(h=e.error.details)&&void 0!==h&&h.bundleUrl&&(m.setTag(\"bundleUrl\",e.error.details.bundleUrl),m.setTag(\"bundleError\",e.error.details.sourceError.type)));m.setTags({callMode:this._callObjectMode?na()?\"reactNative\":null!==(r=this.properties)&&void 0!==r&&null!==(i=r.dailyConfig)&&void 0!==i&&null!==(o=i.callMode)&&void 0!==o&&o.includes(\"prebuilt\")?this.properties.dailyConfig.callMode:\"custom\":\"prebuilt-frame\",version:ee.version()});var b=(null===(a=e.error)||void 0===a?void 0:a.msg)||e.errorMsg;m.captureException(new Error(b))}},{key:\"_callMachine\",value:function(){var e,t,n;return null===(e=window._daily)||void 0===e||null===(t=e.instances)||void 0===t||null===(n=t[this.callClientId])||void 0===n?void 0:n.callMachine}}],[{key:\"supportedBrowser\",value:function(){if(na())return{supported:!0,mobile:!0,name:\"React Native\",version:null,supportsScreenShare:!0,supportsSfu:!0,supportsVideoProcessing:!1,supportsAudioProcessing:!1};var e=G.getParser(ta());return{supported:!!la(),mobile:\"mobile\"===e.getPlatformType(),name:e.getBrowserName(),version:e.getBrowserVersion(),supportsFullscreen:!!oa(),supportsScreenShare:!!ia(),supportsSfu:!!la(),supportsVideoProcessing:sa(),supportsAudioProcessing:ca()}}},{key:\"version\",value:function(){return\"0.74.0\"}},{key:\"createCallObject\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e.layout=\"none\",new ee(null,e)}},{key:\"wrap\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(Us(),!e||!e.contentWindow||\"string\"!=typeof e.src)throw new Error(\"DailyIframe::Wrap needs an iframe-like first argument\");return t.layout||(t.customLayout?t.layout=\"custom-v1\":t.layout=\"browser\"),new ee(e,t)}},{key:\"createFrame\",value:function(e,t){var n,r;Us(),e&&t?(n=e,r=t):e&&e.append?(n=e,r={}):(n=document.body,r=e||{});var i=r.iframeStyle;i||(i=n===document.body?{position:\"fixed\",border:\"1px solid black\",backgroundColor:\"white\",width:\"375px\",height:\"450px\",right:\"1em\",bottom:\"1em\"}:{border:0,width:\"100%\",height:\"100%\"});var o=document.createElement(\"iframe\");window.navigator&&window.navigator.userAgent.match(/Chrome\\/61\\./)?o.allow=\"microphone, camera\":o.allow=\"microphone; camera; autoplay; display-capture; screen-wake-lock\",o.style.visibility=\"hidden\",n.appendChild(o),o.style.visibility=null,Object.keys(i).forEach((function(e){return o.style[e]=i[e]})),r.layout||(r.customLayout?r.layout=\"custom-v1\":r.layout=\"browser\");try{return new ee(o,r)}catch(e){throw n.removeChild(o),e}}},{key:\"createTransparentFrame\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Us();var t=document.createElement(\"iframe\");return t.allow=\"microphone; camera; autoplay\",t.style.cssText=\"\\n      position: fixed;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n      border: 0;\\n      pointer-events: none;\\n    \",document.body.appendChild(t),e.layout||(e.layout=\"custom-v1\"),ee.wrap(t,e)}},{key:\"getCallInstance\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;return e?ys[e]:Object.values(ys)[0]}}]),ee}();function xs(e,t){var n={};for(var r in e)if(e[r]instanceof MediaStreamTrack)n[r]=Ho;else if(\"dailyConfig\"===r){if(e[r].modifyLocalSdpHook){var i=window._daily.instances[t].customCallbacks||{};i.modifyLocalSdpHook=e[r].modifyLocalSdpHook,window._daily.instances[t].customCallbacks=i,delete e[r].modifyLocalSdpHook}if(e[r].modifyRemoteSdpHook){var o=window._daily.instances[t].customCallbacks||{};o.modifyRemoteSdpHook=e[r].modifyRemoteSdpHook,window._daily.instances[t].customCallbacks=o,delete e[r].modifyRemoteSdpHook}n[r]=e[r]}else n[r]=e[r];return n}function Ls(e){var t=arguments.length>2?arguments[2]:void 0;if(e!==ri){var n=\"\".concat(arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"This daily-js method\",\" only supported after join.\");throw t&&(n+=\" \".concat(t)),console.error(n),new Error(n)}}function Is(e,t){return[ni,ri].includes(e)||t}function Ds(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"This daily-js method\",r=arguments.length>3?arguments[3]:void 0;if(Is(e,t)){var i=\"\".concat(n,\" not supported after joining a meeting.\");throw r&&(i+=\" \".concat(r)),console.error(i),new Error(i)}}function Ns(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"This daily-js method\",n=arguments.length>2?arguments[2]:void 0;if(!e){var r=\"\".concat(t,arguments.length>3&&void 0!==arguments[3]&&arguments[3]?\" requires preAuth() or startCamera() to initialize call state.\":\" requires preAuth(), startCamera(), or join() to initialize call state.\");throw n&&(r+=\" \".concat(n)),console.error(r),new Error(r)}}function Rs(e){if(e){var t=\"A pre-call quality test is in progress. Please try \".concat(arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"This daily-js method\",\" again once testing has completed. Use stopTestCallQuality() to end it early.\");throw console.error(t),new Error(t)}}function Fs(e){if(!e){var t=\"\".concat(arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"This daily-js method\",\" is only supported on custom callObject instances\");throw console.error(t),new Error(t)}}function Bs(e){if(e){var t=\"\".concat(arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"This daily-js method\",\" is only supported as part of Daily's Prebuilt\");throw console.error(t),new Error(t)}}function Us(){if(na())throw new Error(\"This daily-js method is not currently supported in React Native\")}function Vs(){if(!na())throw new Error(\"This daily-js method is only supported in React Native\")}function Js(e){if(void 0===e)return!0;var t;if(\"string\"==typeof e)t=e;else try{t=JSON.stringify(e),D(JSON.parse(t),e)||console.warn(\"The userData provided will be modified when serialized.\")}catch(e){throw Error(\"userData must be serializable to JSON: \".concat(e))}if(t.length>4096)throw Error(\"userData is too large (\".concat(t.length,\" characters). Maximum size suppported is \").concat(4096,\".\"));return!0}function $s(e,t){for(var n=t.allowAllParticipantsKey,r=function(e){var t=[\"local\"];return n||t.push(\"*\"),e&&!t.includes(e)},i=function(e){return!!(void 0===e.layer||Number.isInteger(e.layer)&&e.layer>=0||\"inherit\"===e.layer)},o=function(e){return!!e&&(!(e.video&&!i(e.video))&&!(e.screenVideo&&!i(e.screenVideo)))},a=0,s=Object.entries(e);a<s.length;a++){var c=v(s[a],2),l=c[0],u=c[1];if(!r(l)||!o(u))return!1}return!0}function qs(e){return\"object\"===n(e)&&(!(e.video&&(\"object\"!==n(e.video)||!function(e){var t=[\"type\",\"config\"];if(!e)return!1;if(\"object\"!==n(e))return!1;if(!function(e){if(\"string\"!=typeof e)return!1;if(!Object.values(Go).includes(e))return console.error(\"inputSettings video processor type invalid\"),!1;return!0}(e.type))return!1;if(e.config){if(\"object\"!==n(e.config))return!1;if(!function(e,t){var n=Object.keys(t);if(0===n.length)return!0;var r=\"invalid object in inputSettings -> video -> processor -> config\";switch(e){case Go.BGBLUR:return n.length>1||\"strength\"!==n[0]?(console.error(r),!1):!(\"number\"!=typeof t.strength||t.strength<=0||t.strength>1||isNaN(t.strength))||(console.error(\"\".concat(r,\"; expected: {0 < strength <= 1}, got: \").concat(t.strength)),!1);case Go.BGIMAGE:return!(void 0!==t.source&&!function(e){if(\"default\"===e.source)return e.type=\"default\",!0;if(e.source instanceof ArrayBuffer)return!0;if(Z(e.source))return e.type=\"url\",!!function(e){var t=new URL(e),n=t.pathname;if(\"data:\"===t.protocol)try{var r=n.substring(n.indexOf(\":\")+1,n.indexOf(\";\")).split(\"/\")[1];return Yo.includes(r)}catch(e){return console.error(\"failed to deduce blob content type\",e),!1}var i=n.split(\".\").at(-1).toLowerCase().trim();return Yo.includes(i)}(e.source)||(console.error(\"invalid image type; supported types: [\".concat(Yo.join(\", \"),\"]\")),!1);return t=e.source,n=Number(t),isNaN(n)||!Number.isInteger(n)||n<=0||n>10?(console.error(\"invalid image selection; must be an int, > 0, <= \".concat(10)),!1):(e.type=\"daily-preselect\",!0);var t,n}(t));default:return!0}}(e.type,e.config))return!1}return Object.keys(e).filter((function(e){return!t.includes(e)})).forEach((function(t){console.warn(\"invalid key inputSettings -> video -> processor : \".concat(t)),delete e[t]})),!0}(e.video.processor)))&&!(e.audio&&(\"object\"!==n(e.audio)||(r=e.audio.processor,i=[\"type\"],!r||\"object\"!==n(r)||(Object.keys(r).filter((function(e){return!i.includes(e)})).forEach((function(e){console.warn(\"invalid key inputSettings -> audio -> processor : \".concat(e)),delete r[e]})),t=r.type,\"string\"!=typeof t||!Object.values(Qo).includes(t)&&(console.error(\"inputSettings audio processor type invalid\"),1))))));var t,r,i}function Ws(e,t){var n,r=[];e.video&&!sa(null!==(n=null==t?void 0:t.useLegacyVideoProcessor)&&void 0!==n&&n)&&(delete e.video,r.push(\"video\")),e.audio&&!ca()&&(delete e.audio,r.push(\"audio\")),r.length>0&&console.error(\"Ignoring settings for browser- or platform-unsupported input processor(s): \".concat(r.join(\", \")))}function zs(){var e=Object.values(Go).join(\" | \"),t=Object.values(Qo).join(\" | \");return\"inputSettings must be of the form: { video?: { processor: { type: [ \".concat(e,\" ], config?: {} } }, audio?: { processor: {type: [ \").concat(t,\" ] } } }\")}function Hs(e){var t=e.allowAllParticipantsKey;return\"receiveSettings must be of the form { [<remote participant id> | \".concat(mi).concat(t?' | \"'.concat(\"*\",'\"'):\"\",\"]: \")+'{ [video: [{ layer: [<non-negative integer> | \"inherit\"] } | \"inherit\"]], [screenVideo: [{ layer: [<non-negative integer> | \"inherit\"] } | \"inherit\"]] }}}'}function Gs(){return\"customIntegrations should be an object of type \".concat(JSON.stringify(Ps),\".\")}function Qs(e){if(e&&\"object\"!==n(e)||Array.isArray(e))return console.error(\"customTrayButtons should be an Object of the type \".concat(JSON.stringify(Ts),\".\")),!1;if(e)for(var t=0,r=Object.entries(e);t<r.length;t++)for(var i=v(r[t],1)[0],o=0,a=Object.entries(e[i]);o<a.length;o++){var s=v(a[o],2),c=s[0],l=s[1],u=Ts.id[c];if(!u)return console.error(\"customTrayButton does not support key \".concat(c)),!1;switch(c){case\"iconPath\":case\"iconPathDarkMode\":if(!Z(l))return console.error(\"customTrayButton \".concat(c,\" should be a url.\")),!1;break;case\"visualState\":if(![\"default\",\"sidebar-open\",\"active\"].includes(l))return console.error(\"customTrayButton \".concat(c,\" should be \").concat(u,\". Got: \").concat(l)),!1;break;default:if(n(l)!==u)return console.error(\"customTrayButton \".concat(c,\" should be a \").concat(u,\".\")),!1}}return!0}function Ks(e){if(!e||e&&\"object\"!==n(e)||Array.isArray(e))return console.error(Gs()),!1;for(var t=function(e){return\"\".concat(e,\" should be \").concat(Ps.id[e])},r=function(e,t){return console.error(\"customIntegration \".concat(e,\": \").concat(t))},i=0,o=Object.entries(e);i<o.length;i++){var a=v(o[i],1)[0];if(!(\"label\"in e[a]))return r(a,\"label is required\"),!1;if(!(\"location\"in e[a]))return r(a,\"location is required\"),!1;if(!(\"src\"in e[a])&&!(\"srcdoc\"in e[a]))return r(a,\"src or srcdoc is required\"),!1;for(var s=0,c=Object.entries(e[a]);s<c.length;s++){var l=v(c[s],2),u=l[0],d=l[1];switch(u){case\"allow\":case\"csp\":case\"name\":case\"referrerPolicy\":case\"sandbox\":if(\"string\"!=typeof d)return r(a,t(u)),!1;break;case\"iconURL\":if(!Z(d))return r(a,\"\".concat(u,\" should be a url\")),!1;break;case\"src\":if(\"srcdoc\"in e[a])return r(a,\"cannot have both src and srcdoc\"),!1;if(!Z(d))return r(a,'src \"'.concat(d,'\" is not a valid URL')),!1;break;case\"srcdoc\":if(\"src\"in e[a])return r(a,\"cannot have both src and srcdoc\"),!1;if(\"string\"!=typeof d)return r(a,t(u)),!1;break;case\"location\":if(![\"main\",\"sidebar\"].includes(d))return r(a,t(u)),!1;break;case\"controlledBy\":if(\"*\"!==d&&\"owners\"!==d&&(!Array.isArray(d)||d.some((function(e){return\"string\"!=typeof e}))))return r(a,t(u)),!1;break;case\"shared\":if((!Array.isArray(d)||d.some((function(e){return\"string\"!=typeof e})))&&\"owners\"!==d&&\"boolean\"!=typeof d)return r(a,t(u)),!1;break;default:if(!Ps.id[u])return console.error(\"customIntegration does not support key \".concat(u)),!1}}}return!0}function Ys(e,t){if(void 0===t)return!1;switch(n(t)){case\"string\":return n(e)===t;case\"object\":if(\"object\"!==n(e))return!1;for(var r in e)if(!Ys(e[r],t[r]))return!1;return!0;default:return!1}}function Xs(e,t){var n=e.sessionId,r=e.toEndPoint,i=e.useSipRefer;if(!n||!r)throw new Error(\"\".concat(t,\"() requires a sessionId and toEndPoint\"));if(\"string\"!=typeof n||\"string\"!=typeof r)throw new Error(\"Invalid paramater: sessionId and toEndPoint must be of type string\");if(i&&!r.startsWith(\"sip:\"))throw new Error('\"toEndPoint\" must be a \"sip\" address');if(!r.startsWith(\"sip:\")&&!r.startsWith(\"+\"))throw new Error(\"toEndPoint: \".concat(r,' must starts with either \"sip:\" or \"+\"'))}function Zs(e){if(\"object\"!==n(e))throw new Error('RemoteMediaPlayerSettings: must be \"object\" type');if(e.state&&!Object.values(Ko).includes(e.state))throw new Error(\"Invalid value for RemoteMediaPlayerSettings.state, valid values are: \"+JSON.stringify(Ko));if(e.volume){if(\"number\"!=typeof e.volume)throw new Error('RemoteMediaPlayerSettings.volume: must be \"number\" type');if(e.volume<0||e.volume>2)throw new Error(\"RemoteMediaPlayerSettings.volume: must be between 0.0 - 2.0\")}}function ec(e,t,n){return!(\"number\"!=typeof e||e<t||e>n)}function tc(e,t){return e&&!t&&delete e.data,e}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@daily-co/daily-js/dist/daily-esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@daily-co/daily-react/dist/daily-react.esm.js":
/*!********************************************************************!*\
  !*** ./node_modules/@daily-co/daily-react/dist/daily-react.esm.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DailyAudio: () => (/* binding */ DailyAudio),\n/* harmony export */   DailyAudioTrack: () => (/* binding */ DailyAudioTrack),\n/* harmony export */   DailyProvider: () => (/* binding */ DailyProvider),\n/* harmony export */   DailyVideo: () => (/* binding */ DailyVideo),\n/* harmony export */   useActiveParticipant: () => (/* binding */ useActiveParticipant),\n/* harmony export */   useActiveSpeakerId: () => (/* binding */ useActiveSpeakerId),\n/* harmony export */   useAppMessage: () => (/* binding */ useAppMessage),\n/* harmony export */   useAudioLevel: () => (/* binding */ useAudioLevel),\n/* harmony export */   useAudioLevelObserver: () => (/* binding */ useAudioLevelObserver),\n/* harmony export */   useAudioTrack: () => (/* binding */ useAudioTrack),\n/* harmony export */   useCPULoad: () => (/* binding */ useCPULoad),\n/* harmony export */   useCallFrame: () => (/* binding */ useCallFrame),\n/* harmony export */   useCallObject: () => (/* binding */ useCallObject),\n/* harmony export */   useDaily: () => (/* binding */ useDaily),\n/* harmony export */   useDailyError: () => (/* binding */ useDailyError),\n/* harmony export */   useDailyEvent: () => (/* binding */ useDailyEvent),\n/* harmony export */   useDevices: () => (/* binding */ useDevices),\n/* harmony export */   useInputSettings: () => (/* binding */ useInputSettings),\n/* harmony export */   useLiveStreaming: () => (/* binding */ useLiveStreaming),\n/* harmony export */   useLocalParticipant: () => (/* binding */ useLocalParticipant),\n/* harmony export */   useLocalSessionId: () => (/* binding */ useLocalSessionId),\n/* harmony export */   useMediaTrack: () => (/* binding */ useMediaTrack),\n/* harmony export */   useMeetingSessionState: () => (/* binding */ useMeetingSessionState),\n/* harmony export */   useMeetingState: () => (/* binding */ useMeetingState),\n/* harmony export */   useNetwork: () => (/* binding */ useNetwork),\n/* harmony export */   useParticipant: () => (/* binding */ useParticipant),\n/* harmony export */   useParticipantCounts: () => (/* binding */ useParticipantCounts),\n/* harmony export */   useParticipantIds: () => (/* binding */ useParticipantIds),\n/* harmony export */   useParticipantProperty: () => (/* binding */ useParticipantProperty),\n/* harmony export */   usePermissions: () => (/* binding */ usePermissions),\n/* harmony export */   useReceiveSettings: () => (/* binding */ useReceiveSettings),\n/* harmony export */   useRecording: () => (/* binding */ useRecording),\n/* harmony export */   useRoom: () => (/* binding */ useRoom),\n/* harmony export */   useRoomExp: () => (/* binding */ useRoomExp),\n/* harmony export */   useScreenAudioTrack: () => (/* binding */ useScreenAudioTrack),\n/* harmony export */   useScreenShare: () => (/* binding */ useScreenShare),\n/* harmony export */   useScreenVideoTrack: () => (/* binding */ useScreenVideoTrack),\n/* harmony export */   useSendSettings: () => (/* binding */ useSendSettings),\n/* harmony export */   useThrottledDailyEvent: () => (/* binding */ useThrottledDailyEvent),\n/* harmony export */   useTranscription: () => (/* binding */ useTranscription),\n/* harmony export */   useVideoTrack: () => (/* binding */ useVideoTrack),\n/* harmony export */   useWaitingParticipants: () => (/* binding */ useWaitingParticipants)\n/* harmony export */ });\n/* harmony import */ var jotai_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! jotai/utils */ \"(ssr)/./node_modules/jotai/esm/vanilla/utils.mjs\");\n/* harmony import */ var jotai_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! jotai/utils */ \"(ssr)/./node_modules/jotai/esm/react/utils.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var jotai__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jotai */ \"(ssr)/./node_modules/jotai/esm/vanilla.mjs\");\n/* harmony import */ var jotai__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! jotai */ \"(ssr)/./node_modules/jotai/esm/react.mjs\");\n/* harmony import */ var lodash_throttle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash.throttle */ \"(ssr)/./node_modules/lodash.throttle/index.js\");\n/* harmony import */ var lodash_throttle__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_throttle__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _daily_co_daily_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @daily-co/daily-js */ \"(ssr)/./node_modules/@daily-co/daily-js/dist/daily-esm.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fast-deep-equal */ \"(ssr)/./node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar DailyContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\n\n/**\r\n * Returns callObject instance passed to or created by closest <DailyProvider>.\r\n */\nvar useDaily = function useDaily() {\n  var daily = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(DailyContext);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(daily);\n  return daily;\n};\n\nvar DailyEventContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  on: function on() {},\n  off: function off() {}\n});\n\nvar priorityCounter = -1;\nvar getPriorityUnique = function getPriorityUnique() {\n  return priorityCounter--;\n};\nvar uniqueCounter = 1;\nvar getUnique = function getUnique() {\n  return uniqueCounter++;\n};\n/**\r\n * Sets up a daily event listener using [on](https://docs.daily.co/reference/daily-js/instance-methods/on) method.\r\n * When this hook is unmounted the event listener is unregistered using [off](https://docs.daily.co/reference/daily-js/instance-methods/off).\r\n *\r\n * Warning: callback has to be a memoized reference (e.g. via [useCallback](https://reactjs.org/docs/hooks-reference.html#usecallback)).\r\n * Otherwise a console error might be thrown indicating a re-render loop issue.\r\n *\r\n * @param ev The DailyEvent to register.\r\n * @param callback A memoized callback reference to run when the event is emitted.\r\n */\nvar useDailyEvent = function useDailyEvent(ev, callback, INTERNAL_priority) {\n  if (INTERNAL_priority === void 0) {\n    INTERNAL_priority = false;\n  }\n  var _useContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(DailyEventContext),\n    off = _useContext.off,\n    on = _useContext.on;\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),\n    isBlocked = _useState[0],\n    setIsBlocked = _useState[1];\n  var reassignCount = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  var eventId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    return INTERNAL_priority ? getPriorityUnique() : getUnique();\n  }, [INTERNAL_priority]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (!ev || isBlocked) return;\n    /**\r\n     * Check if callback has been reassigned often enough without hitting the 50ms timeout.\r\n     */\n    if (reassignCount.current > 100000) {\n      console.error(\"useDailyEvent called with potentially non-memoized event callback or due to too many re-renders.\\n        Memoize using useCallback to avoid re-render loop or reduce the amount of state transitions the callback depends on.\\n        Passed callback for '\" + ev + \"' event is NOT registered.\", callback);\n      setIsBlocked(true);\n      return;\n    }\n    reassignCount.current++;\n    var timeout = setTimeout(function () {\n      reassignCount.current = 0;\n    }, 50);\n    on(ev, callback, eventId);\n    return function () {\n      clearTimeout(timeout);\n      off(ev, eventId);\n    };\n  }, [callback, ev, eventId, isBlocked, off, on]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)({\n    event: ev,\n    eventId: eventId,\n    isBlocked: isBlocked,\n    callback: callback\n  });\n};\n\n/**\r\n * Compares two variables for deep equality.\r\n * Gracefully handles equality checks on MediaStreamTracks by comparing their ids.\r\n */\nfunction customDeepEqual(a, b) {\n  if (a === b) return true;\n  // Handle arrays separately\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) return false;\n    for (var i = 0; i < a.length; i++) {\n      if (!customDeepEqual(a[i], b[i])) return false;\n    }\n    return true;\n  }\n  // Handle specific cases like MediaStream, MediaStreamTrack, Date, etc.\n  if (MediaStream) {\n    if (a instanceof MediaStream && b instanceof MediaStream) {\n      return a.id === b.id && a.active === b.active && a.getTracks().length === b.getTracks().length && a.getTracks().every(function (track, idx) {\n        return customDeepEqual(track, b.getTracks()[idx]);\n      });\n    }\n  }\n  // Handle special case for MediaStreamTrack\n  if (MediaStreamTrack) {\n    if (a instanceof MediaStreamTrack && b instanceof MediaStreamTrack) {\n      return a.id === b.id && a.kind === b.kind && a.readyState === b.readyState;\n    }\n  }\n  // Handle special case for Date\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n  // Handle special case for RegExp\n  if (a instanceof RegExp && b instanceof RegExp) {\n    return a.source === b.source && a.flags === b.flags;\n  }\n  // Handle Set comparisons\n  if (a instanceof Set && b instanceof Set) {\n    if (a.size !== b.size) return false;\n    var arrA = Array.from(a).sort();\n    var arrB = Array.from(b).sort();\n    return arrA.every(function (val, idx) {\n      return customDeepEqual(val, arrB[idx]);\n    });\n  }\n  // Handle Map comparisons\n  if (a instanceof Map && b instanceof Map) {\n    if (a.size !== b.size) return false;\n    for (var _iterator = _createForOfIteratorHelperLoose(a.entries()), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n        key = _step$value[0],\n        value = _step$value[1];\n      if (!b.has(key) || !customDeepEqual(value, b.get(key))) return false;\n    }\n    return true;\n  }\n  // Primitive types and null checks\n  if (typeof a !== 'object' || a === null || typeof b !== 'object' || b === null) {\n    return false;\n  }\n  // Generic object handling\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n  if (keysA.length !== keysB.length) return false;\n  for (var _i = 0; _i < keysA.length; _i++) {\n    var _key = keysA[_i];\n    if (!Object.prototype.hasOwnProperty.call(b, _key) || !customDeepEqual(a[_key], b[_key])) {\n      return false;\n    }\n  }\n  // All keys and values match -> the objects are deeply equal\n  return true;\n}\n/**\r\n * Comparison function optimized for comparing arrays.\r\n */\nfunction arraysDeepEqual(a, b) {\n  // Check for reference equality\n  if (a === b) return true;\n  // Check if both arrays are of the same length\n  if (a.length !== b.length) return false;\n  // Compare each element in the array\n  for (var i = 0; i < a.length; i++) {\n    var valueA = a[i];\n    var valueB = b[i];\n    var isComplexTypeA = valueA !== null && typeof valueA === 'object';\n    var isComplexTypeB = valueB !== null && typeof valueB === 'object';\n    // Use customDeepEqual only if either value is a complex type\n    if (isComplexTypeA || isComplexTypeB) {\n      if (!customDeepEqual(valueA, valueB)) return false;\n    } else if (valueA !== valueB) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction jotaiDebugLabel(label) {\n  return 'daily-react-' + label;\n}\nfunction equalAtomFamily(options) {\n  var atomCache = new Map();\n  var priorValues = new Map();\n  return function (param) {\n    if (!atomCache.has(param)) {\n      var baseAtom = (0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)(function (get) {\n        var derivedValue = options.get(param)(get);\n        var prior = priorValues.get(param);\n        if (prior != null && options.equals(derivedValue, prior)) {\n          return prior;\n        }\n        priorValues.set(param, derivedValue);\n        return derivedValue;\n      });\n      atomCache.set(param, baseAtom);\n    }\n    return atomCache.get(param);\n  };\n}\n\nvar DELIM = '::';\nvar PATHS_DELIM = ';';\nvar getPropertyParam = function getPropertyParam(id, property) {\n  return id + DELIM + property;\n};\nvar getPropertiesParam = function getPropertiesParam(id, properties) {\n  return id + DELIM + properties.join(PATHS_DELIM);\n};\nvar getParticipantPropertyAtom = function getParticipantPropertyAtom(id, property) {\n  return participantPropertyState(getPropertyParam(id, property));\n};\n/**\r\n * Stores all property paths for a given participant.\r\n */\nvar participantPropertyPathsState = /*#__PURE__*/(0,jotai_utils__WEBPACK_IMPORTED_MODULE_5__.atomFamily)(function (id) {\n  var participantPropertyPathsAtom = (0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)([]);\n  participantPropertyPathsAtom.debugLabel = jotaiDebugLabel(\"participant-property-paths-\" + id);\n  return participantPropertyPathsAtom;\n});\n/**\r\n * Stores resolved values for each participant and property path.\r\n */\nvar participantPropertyState = /*#__PURE__*/(0,jotai_utils__WEBPACK_IMPORTED_MODULE_5__.atomFamily)(function (param) {\n  var participantPropertyAtom = (0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)(null);\n  participantPropertyAtom.debugLabel = jotaiDebugLabel(\"participant-property-\" + param);\n  return participantPropertyAtom;\n});\n/**\r\n * Stores resolved values for each participant and property path.\r\n */\nvar participantPropertiesState = /*#__PURE__*/equalAtomFamily({\n  equals: arraysDeepEqual,\n  get: function get(param) {\n    return function (get) {\n      var _param$split = param.split(DELIM),\n        id = _param$split[0],\n        paths = _param$split[1];\n      var properties = paths.split(PATHS_DELIM);\n      return properties.map(function (path) {\n        return get(getParticipantPropertyAtom(id, path));\n      });\n    };\n  }\n});\n/**\r\n * Returns a participant's property that you subscribe to.\r\n * @param participantId The participant's session_id.\r\n * @param propertyPaths the array of participant property that you want to subscribe to.\r\n */\nvar useParticipantProperty = function useParticipantProperty(participantId, propertyPaths) {\n  var _ref;\n  var properties = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(Array.isArray(propertyPaths) ? participantPropertiesState(getPropertiesParam(participantId, propertyPaths)) : participantPropertyState(getPropertyParam(participantId, propertyPaths)));\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(Array.isArray(propertyPaths) ? propertyPaths.reduce(function (o, path, i) {\n    o[path] = properties[i];\n    return o;\n  }, {}) : (_ref = {}, _ref[propertyPaths] = properties, _ref));\n  return properties;\n};\n\n/**\r\n * Sets up a throttled daily event listener using [on](https://docs.daily.co/reference/daily-js/instance-methods/on) method.\r\n * When this hook is unmounted the event listener is unregistered using [off](https://docs.daily.co/reference/daily-js/instance-methods/off).\r\n *\r\n * In comparison to useDailyEvent the callback passed here will be called with an array of event objects.\r\n *\r\n * You can pass an array of DailyEvents to register multiple daily events with a single callback handler.\r\n * The events returned in the callback parameter are guaranteed to be in the same order as they were emitted.\r\n *\r\n * @param ev The DailyEvent to register or an array of DailyEvent to register.\r\n * @param callback A memoized callback reference to run when throttled events are emitted.\r\n * @param throttleTimeout The minimum waiting time until the callback is called again. Default: 500\r\n */\nvar useThrottledDailyEvent = function useThrottledDailyEvent(ev, callback, throttleTimeout, INTERNAL_priority) {\n  if (throttleTimeout === void 0) {\n    throttleTimeout = 500;\n  }\n  if (INTERNAL_priority === void 0) {\n    INTERNAL_priority = false;\n  }\n  var _useContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(DailyEventContext),\n    off = _useContext.off,\n    on = _useContext.on;\n  var eventId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    var _ref;\n    if (Array.isArray(ev)) return ev.reduce(function (r, e) {\n      r[e] = INTERNAL_priority ? getPriorityUnique() : getUnique();\n      return r;\n    }, {});\n    return _ref = {}, _ref[ev] = INTERNAL_priority ? getPriorityUnique() : getUnique(), _ref;\n  }, [ev, INTERNAL_priority]);\n  var throttledEvents = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n  useDailyEvent('call-instance-destroyed', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    throttledEvents.current.length = 0;\n  }, []));\n  var emitEvents = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    return lodash_throttle__WEBPACK_IMPORTED_MODULE_1___default()(function () {\n      if (throttledEvents.current.length === 0) return;\n      callback(throttledEvents.current);\n      throttledEvents.current.length = 0;\n    }, throttleTimeout, {\n      trailing: true\n    });\n  }, [callback, throttleTimeout]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (!ev) return;\n    var addEvent = function addEvent(ev) {\n      throttledEvents.current.push(ev);\n      emitEvents();\n    };\n    if (Array.isArray(ev)) {\n      ev.forEach(function (e) {\n        return on(e, addEvent, eventId[e]);\n      });\n    } else {\n      on(ev, addEvent, eventId[ev]);\n    }\n    return function () {\n      if (Array.isArray(ev)) {\n        ev.forEach(function (e) {\n          return off(e, eventId[e]);\n        });\n      } else {\n        off(ev, eventId[ev]);\n      }\n    };\n  }, [emitEvents, ev, eventId, off, on]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)({\n    event: ev,\n    eventId: eventId\n  });\n};\n\n/**\r\n * Returns all property paths for an object.\r\n */\nvar getPaths = function getPaths(o, currentPath, visited) {\n  if (currentPath === void 0) {\n    currentPath = '';\n  }\n  if (visited === void 0) {\n    visited = new Set();\n  }\n  if (typeof o !== 'object' || o === null || visited.has(o)) {\n    return [currentPath];\n  }\n  visited.add(o);\n  var paths = [];\n  for (var key in o) {\n    if (Object.prototype.hasOwnProperty.call(o, key)) {\n      var newPath = currentPath ? currentPath + \".\" + key : key;\n      paths.push.apply(paths, [newPath].concat(getPaths(o[key], newPath, visited)));\n    }\n  }\n  visited[\"delete\"](o);\n  return paths;\n};\n/**\r\n * Returns all property paths for a given participant object.\r\n */\nvar getParticipantPaths = function getParticipantPaths(p) {\n  return getPaths(p);\n};\n\nvar resolvePath = function resolvePath(participant, path) {\n  return String(path).split('.').filter(function (key) {\n    return key.length;\n  }).reduce(function (p, key) {\n    return p && p[key];\n  }, participant);\n};\nvar resolveParticipantPaths = function resolveParticipantPaths(participant, paths) {\n  return paths.map(function (path) {\n    return resolvePath(participant, path);\n  });\n};\n\n/**\r\n * Stores the most recent peerId as reported from [active-speaker-change](https://docs.daily.co/reference/daily-js/events/meeting-events#active-speaker-change) event.\r\n */\nvar activeIdState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)(null);\nactiveIdState.debugLabel = /*#__PURE__*/jotaiDebugLabel('active-id');\nvar localIdState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)('');\nlocalIdState.debugLabel = /*#__PURE__*/jotaiDebugLabel('local-id');\nvar localJoinDateState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)(null);\nlocalJoinDateState.debugLabel = /*#__PURE__*/jotaiDebugLabel('local-join-date');\nvar participantIdsState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)([]);\nparticipantIdsState.debugLabel = /*#__PURE__*/jotaiDebugLabel('participant-ids');\nvar participantState = /*#__PURE__*/(0,jotai_utils__WEBPACK_IMPORTED_MODULE_5__.atomFamily)(function (id) {\n  var participantAtom = (0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)(null);\n  participantAtom.debugLabel = jotaiDebugLabel(\"participant-\" + id);\n  return participantAtom;\n});\nvar waitingParticipantsState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)([]);\nwaitingParticipantsState.debugLabel = /*#__PURE__*/jotaiDebugLabel('waiting-participants');\nvar waitingParticipantState = /*#__PURE__*/(0,jotai_utils__WEBPACK_IMPORTED_MODULE_5__.atomFamily)(function (id) {\n  var waitingParticipantAtom = (0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)({\n    awaitingAccess: {\n      level: 'full'\n    },\n    id: id,\n    name: ''\n  });\n  waitingParticipantAtom.debugLabel = jotaiDebugLabel(\"waiting-participant-\" + id);\n  return waitingParticipantAtom;\n});\nvar allWaitingParticipantsSelector = /*#__PURE__*/equalAtomFamily({\n  equals: arraysDeepEqual,\n  get: function get() {\n    return function (get) {\n      var ids = get(waitingParticipantsState);\n      return ids.map(function (id) {\n        return get(waitingParticipantState(id));\n      });\n    };\n  }\n});\nvar DailyParticipants = function DailyParticipants(_ref) {\n  var children = _ref.children;\n  var daily = useDaily();\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),\n    initialized = _useState[0],\n    setInitialized = _useState[1];\n  var initParticipants = (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, participants) {\n    set(localIdState, participants.local.session_id);\n    var participantsArray = Object.values(participants);\n    var ids = participantsArray.map(function (p) {\n      return p.session_id;\n    });\n    set(participantIdsState, ids);\n    participantsArray.forEach(function (p) {\n      set(participantState(p.session_id), p);\n      var paths = getParticipantPaths(p);\n      set(participantPropertyPathsState(p.session_id), paths);\n      paths.forEach(function (property) {\n        var _resolveParticipantPa = resolveParticipantPaths(p, [property]),\n          value = _resolveParticipantPa[0];\n        set(getParticipantPropertyAtom(p.session_id, property), value);\n      });\n    });\n    setInitialized(true);\n  }, []));\n  /**\r\n   * Initialize participants state based on daily.participants().\r\n   * Retries every 100ms to initialize the state, until daily is ready.\r\n   */\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (!daily || initialized) return;\n    var interval = setInterval(function () {\n      var participants = daily.participants();\n      if (!('local' in participants)) return;\n      initParticipants(participants);\n      clearInterval(interval);\n    }, 100);\n    return function () {\n      clearInterval(interval);\n    };\n  }, [daily, initialized, initParticipants]);\n  var handleInitEvent = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    if (!daily) return;\n    var participants = daily == null ? void 0 : daily.participants();\n    if (!participants.local) return;\n    initParticipants(participants);\n  }, [daily, initParticipants]);\n  useDailyEvent('started-camera', handleInitEvent, true);\n  useDailyEvent('access-state-updated', handleInitEvent, true);\n  useDailyEvent('joining-meeting', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set) {\n    set(localJoinDateState, new Date());\n    handleInitEvent();\n  }, [handleInitEvent])), true);\n  useDailyEvent('joined-meeting', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    initParticipants(ev.participants);\n  }, [initParticipants]), true);\n  /**\r\n   * Reset stored participants, when meeting has ended.\r\n   */\n  var handleCleanup = (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (get, set) {\n    set(localIdState, '');\n    set(activeIdState, null);\n    var ids = get(participantIdsState);\n    ids.forEach(function (id) {\n      return participantState.remove(id);\n    });\n    set(participantIdsState, []);\n  }, []));\n  useDailyEvent('call-instance-destroyed', handleCleanup, true);\n  useDailyEvent('left-meeting', handleCleanup, true);\n  useThrottledDailyEvent(['active-speaker-change', 'participant-joined', 'participant-updated', 'participant-left'], (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (get, set, evts) {\n    if (!evts.length) return;\n    evts.forEach(function (ev) {\n      switch (ev.action) {\n        case 'active-speaker-change':\n          {\n            set(activeIdState, ev.activeSpeaker.peerId);\n            set(participantState(ev.activeSpeaker.peerId), function (prev) {\n              if (!prev) return null;\n              return _extends({}, prev, {\n                last_active: new Date()\n              });\n            });\n            break;\n          }\n        case 'participant-joined':\n          {\n            // Update list of ids\n            set(participantIdsState, function (prevIds) {\n              return prevIds.includes(ev.participant.session_id) ? prevIds : [].concat(prevIds, [ev.participant.session_id]);\n            });\n            // Store entire object\n            set(participantState(ev.participant.session_id), ev.participant);\n            var paths = getParticipantPaths(ev.participant);\n            // Set list of property paths\n            set(participantPropertyPathsState(ev.participant.session_id), paths);\n            // Set all property path values\n            paths.forEach(function (property) {\n              var _resolveParticipantPa2 = resolveParticipantPaths(ev.participant, [property]),\n                value = _resolveParticipantPa2[0];\n              set(getParticipantPropertyAtom(ev.participant.session_id, property), value);\n            });\n            break;\n          }\n        case 'participant-updated':\n          {\n            // Update entire object\n            set(participantState(ev.participant.session_id), ev.participant);\n            // Update local session_id\n            if (ev.participant.local) {\n              set(localIdState, ev.participant.session_id);\n            }\n            var _paths = getParticipantPaths(ev.participant);\n            var oldPaths = get(participantPropertyPathsState(ev.participant.session_id));\n            var pathsChanged = _paths.length !== oldPaths.length || _paths.some(function (path) {\n              return !oldPaths.includes(path);\n            });\n            // Set list of property paths\n            if (pathsChanged) {\n              set(participantPropertyPathsState(ev.participant.session_id), _paths);\n            }\n            // Create a Set of oldPaths for quick lookup\n            var oldPathSet = new Set(oldPaths);\n            // Resolve all path values in one call\n            var resolvedValues = resolveParticipantPaths(ev.participant, _paths);\n            _paths.forEach(function (property, idx) {\n              var value = resolvedValues[idx];\n              // Remove property from oldPathSet to mark it as processed\n              oldPathSet[\"delete\"](property);\n              // Only update if the new value differs from the current one\n              set(getParticipantPropertyAtom(ev.participant.session_id, property), function (prev) {\n                return customDeepEqual(prev, value) ? prev : value;\n              });\n            });\n            // Set any remaining paths in oldPathSet to null\n            oldPathSet.forEach(function (property) {\n              set(getParticipantPropertyAtom(ev.participant.session_id, property), null);\n            });\n            break;\n          }\n        case 'participant-left':\n          {\n            // Remove from list of ids\n            set(participantIdsState, function (prevIds) {\n              return prevIds.includes(ev.participant.session_id) ? prevIds.filter(function (id) {\n                return id !== ev.participant.session_id;\n              }) : prevIds;\n            });\n            // Remove entire object\n            participantState.remove(ev.participant.session_id);\n            var _oldPaths = get(participantPropertyPathsState(ev.participant.session_id));\n            // Remove property path values\n            _oldPaths.forEach(function (property) {\n              participantPropertyState.remove(getPropertyParam(ev.participant.session_id, property));\n            });\n            // Remove all property paths\n            participantPropertyPathsState.remove(ev.participant.session_id);\n            break;\n          }\n      }\n    });\n  }, [])), 100, true);\n  useThrottledDailyEvent(['waiting-participant-added', 'waiting-participant-updated', 'waiting-participant-removed'], (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, evts) {\n    evts.forEach(function (ev) {\n      switch (ev.action) {\n        case 'waiting-participant-added':\n          set(waitingParticipantsState, function (wps) {\n            return wps.includes(ev.participant.id) ? wps : [].concat(wps, [ev.participant.id]);\n          });\n          set(waitingParticipantState(ev.participant.id), ev.participant);\n          break;\n        case 'waiting-participant-updated':\n          set(waitingParticipantState(ev.participant.id), ev.participant);\n          break;\n        case 'waiting-participant-removed':\n          set(waitingParticipantsState, function (wps) {\n            return wps.filter(function (wp) {\n              return wp !== ev.participant.id;\n            });\n          });\n          waitingParticipantState.remove(ev.participant.id);\n          break;\n      }\n    });\n  }, [])), 100, true);\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, children);\n};\n\n/**\r\n * Returns the local participant's session_id or empty string '',\r\n * if the local participant doesn't exist.\r\n */\nvar useLocalSessionId = function useLocalSessionId() {\n  var localId = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(localIdState);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(localId);\n  return localId;\n};\n\nvar noopFilter = function noopFilter() {\n  return true;\n};\n/**\r\n * Returns the most recent speaker id mentioned in an [active-speaker-change](https://docs.daily.co/reference/daily-js/events/meeting-events#active-speaker-change) event.\r\n */\nvar useActiveSpeakerId = function useActiveSpeakerId(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    _ref$filter = _ref.filter,\n    filter = _ref$filter === void 0 ? noopFilter : _ref$filter,\n    _ref$ignoreLocal = _ref.ignoreLocal,\n    ignoreLocal = _ref$ignoreLocal === void 0 ? false : _ref$ignoreLocal;\n  var localSessionId = useLocalSessionId();\n  var recentActiveId = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(activeIdState);\n  var isIgnoredLocalId = ignoreLocal && recentActiveId === localSessionId;\n  var isFilteredOut = !(filter != null && filter(recentActiveId));\n  var isRecentIdRelevant = !isIgnoredLocalId && !isFilteredOut;\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(isRecentIdRelevant ? recentActiveId : null),\n    activeId = _useState[0],\n    setActiveId = _useState[1];\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (isIgnoredLocalId || isFilteredOut) return;\n    setActiveId(recentActiveId);\n  }, [isFilteredOut, isIgnoredLocalId, recentActiveId]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(activeId);\n  return activeId;\n};\n\nvar isTrackOff = function isTrackOff(trackState) {\n  return ['blocked', 'off'].includes(trackState);\n};\n\nvar SERIALIZABLE_DELIM = ';';\nvar getParticipantIdsFilterSortParam = function getParticipantIdsFilterSortParam(filter, sort) {\n  return \"\" + filter + SERIALIZABLE_DELIM + sort;\n};\n/**\r\n * Short-cut state selector for useParticipantIds({ filter: 'local' })\r\n */\nvar participantIdsFilteredAndSortedState = /*#__PURE__*/equalAtomFamily({\n  equals: customDeepEqual,\n  get: function get(param) {\n    return function (get) {\n      var _param$split = param.split(SERIALIZABLE_DELIM),\n        filter = _param$split[0],\n        sort = _param$split[1];\n      var ids = get(participantIdsState);\n      return ids.filter(function (id) {\n        switch (filter) {\n          /**\r\n           * Simple boolean fields first.\r\n           */\n          case 'local':\n          case 'owner':\n          case 'record':\n            {\n              return get(getParticipantPropertyAtom(id, filter));\n            }\n          case 'remote':\n            {\n              return !get(getParticipantPropertyAtom(id, 'local'));\n            }\n          case 'screen':\n            {\n              var screenAudioState = get(getParticipantPropertyAtom(id, 'tracks.screenAudio.state'));\n              var screenVideoState = get(getParticipantPropertyAtom(id, 'tracks.screenVideo.state'));\n              return !isTrackOff(screenAudioState) || !isTrackOff(screenVideoState);\n            }\n          default:\n            return true;\n        }\n      }).sort(function (idA, idB) {\n        switch (sort) {\n          case 'joined_at':\n          case 'session_id':\n          case 'user_id':\n          case 'user_name':\n            {\n              var aSort = get(getParticipantPropertyAtom(idA, sort));\n              var bSort = get(getParticipantPropertyAtom(idB, sort));\n              if (aSort !== undefined || bSort !== undefined) {\n                if (aSort === undefined) return -1;\n                if (bSort === undefined) return 1;\n                if (aSort > bSort) return 1;\n                if (aSort < bSort) return -1;\n              }\n              return 0;\n            }\n          default:\n            return 0;\n        }\n      });\n    };\n  }\n});\n/**\r\n * Returns a list of participant ids (= session_id).\r\n * The list can optionally be filtered and sorted, using the filter and sort options.\r\n */\nvar useParticipantIds = function useParticipantIds(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    filter = _ref.filter,\n    onActiveSpeakerChange = _ref.onActiveSpeakerChange,\n    onParticipantJoined = _ref.onParticipantJoined,\n    onParticipantLeft = _ref.onParticipantLeft,\n    onParticipantUpdated = _ref.onParticipantUpdated,\n    sort = _ref.sort;\n  /**\r\n   * For instances of useParticipantIds with string-based filter and sort,\r\n   * we can immediately return the correct ids from Jotai's state.\r\n   */\n  var preFilteredSortedIds = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(participantIdsFilteredAndSortedState(getParticipantIdsFilterSortParam(typeof filter === 'string' ? filter : null, typeof sort === 'string' ? sort : null)));\n  var shouldUseCustomIds = typeof filter === 'function' || typeof sort === 'function';\n  var getCustomFilteredIds = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (get) {\n    if (\n    // Ignore if both filter and sort are not functions.\n    typeof filter !== 'function' && typeof sort !== 'function') return [];\n    var participants = preFilteredSortedIds.map(function (id) {\n      return get(participantState(id));\n    });\n    return participants\n    // Make sure we don't accidentally try to filter/sort `null` participants\n    // This can happen when a participant's id is already present in store\n    // but the participant object is not stored, yet.\n    .filter(function (p) {\n      return Boolean(p);\n    })\n    // Run custom filter, if it's a function. Otherwise don't filter any participants.\n    .filter(typeof filter === 'function' ? filter : function () {\n      return true;\n    })\n    // Run custom sort, if it's a function. Otherwise don't sort.\n    .sort(typeof sort === 'function' ? sort : function () {\n      return 0;\n    })\n    // Map back to session_id.\n    .map(function (p) {\n      return p.session_id;\n    })\n    // Filter any potential null/undefined ids.\n    // This shouldn't really happen, but better safe than sorry.\n    .filter(Boolean);\n  }, [filter, preFilteredSortedIds, sort]);\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),\n    customIds = _useState[0],\n    setCustomIds = _useState[1];\n  var maybeUpdateCustomIds = (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (get) {\n    if (!shouldUseCustomIds) return;\n    var newIds = getCustomFilteredIds(get);\n    if (customDeepEqual(newIds, customIds)) return;\n    setCustomIds(newIds);\n  }, [customIds, getCustomFilteredIds, shouldUseCustomIds]));\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    maybeUpdateCustomIds();\n  }, [maybeUpdateCustomIds]);\n  useThrottledDailyEvent(['participant-joined', 'participant-updated', 'active-speaker-change', 'participant-left'], (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (evts) {\n    if (!evts.length) return;\n    evts.forEach(function (ev) {\n      switch (ev.action) {\n        case 'participant-joined':\n          onParticipantJoined == null ? void 0 : onParticipantJoined(ev);\n          break;\n        case 'participant-updated':\n          onParticipantUpdated == null ? void 0 : onParticipantUpdated(ev);\n          break;\n        case 'active-speaker-change':\n          onActiveSpeakerChange == null ? void 0 : onActiveSpeakerChange(ev);\n          break;\n        case 'participant-left':\n          onParticipantLeft == null ? void 0 : onParticipantLeft(ev);\n          break;\n      }\n    });\n    maybeUpdateCustomIds();\n  }, [maybeUpdateCustomIds, onActiveSpeakerChange, onParticipantJoined, onParticipantLeft, onParticipantUpdated]));\n  var result = typeof filter === 'function' || typeof sort === 'function' ? customIds : preFilteredSortedIds;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\nvar screenSharesState = /*#__PURE__*/equalAtomFamily({\n  equals: arraysDeepEqual,\n  get: function get() {\n    return function (get) {\n      var screenIds = get(participantIdsFilteredAndSortedState(getParticipantIdsFilterSortParam('screen', null)));\n      return screenIds.map(function (id) {\n        return {\n          local: get(getParticipantPropertyAtom(id, 'local')),\n          screenAudio: get(getParticipantPropertyAtom(id, 'tracks.screenAudio')),\n          screenVideo: get(getParticipantPropertyAtom(id, 'tracks.screenVideo')),\n          screenId: id + \"-screen\",\n          session_id: id\n        };\n      });\n    };\n  }\n});\n/**\r\n * Allows access to information about shared screens, and methods to start or stop a local screen share.\r\n */\nvar useScreenShare = function useScreenShare(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    onError = _ref.onError,\n    onLocalScreenShareStarted = _ref.onLocalScreenShareStarted,\n    onLocalScreenShareStopped = _ref.onLocalScreenShareStopped;\n  var daily = useDaily();\n  var startScreenShare = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    daily == null ? void 0 : daily.startScreenShare.apply(daily, args);\n  }, [daily]);\n  var stopScreenShare = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    daily == null ? void 0 : daily.stopScreenShare.apply(daily, args);\n  }, [daily]);\n  useDailyEvent('local-screen-share-started', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    return onLocalScreenShareStarted == null ? void 0 : onLocalScreenShareStarted();\n  }, [onLocalScreenShareStarted]));\n  useDailyEvent('local-screen-share-stopped', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    return onLocalScreenShareStopped == null ? void 0 : onLocalScreenShareStopped();\n  }, [onLocalScreenShareStopped]));\n  useDailyEvent('nonfatal-error', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    if (ev.type !== 'screen-share-error') return;\n    onError == null ? void 0 : onError(ev);\n  }, [onError]));\n  var screens = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(screenSharesState(undefined));\n  var result = {\n    isSharingScreen: screens.some(function (s) {\n      return s.local;\n    }),\n    screens: screens,\n    startScreenShare: startScreenShare,\n    stopScreenShare: stopScreenShare\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\n/**\r\n * Returns a participant's track and state, based on the given MediaType.\r\n *\r\n * Equivalent to daily.participants()[participantId].tracks[type].\r\n *\r\n * @param participantId The participant's session_id.\r\n * @param type The track type. Default: \"video\"\r\n */\nvar useMediaTrack = function useMediaTrack(participantId, type) {\n  if (type === void 0) {\n    type = 'video';\n  }\n  var trackState = useParticipantProperty(participantId, \"tracks.\" + type);\n  var result = trackState ? _extends({}, trackState, {\n    isOff: isTrackOff(trackState.state)\n  }) : {\n    isOff: true,\n    persistentTrack: undefined,\n    state: 'off',\n    subscribed: false\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\n/**\r\n * Original source: https://github.com/jaredLunde/react-hook/blob/master/packages/merged-ref/src/index.tsx\r\n * Original author: Jared Lunde (https://github.com/jaredLunde)\r\n * Originally published under the MIT license: https://github.com/jaredLunde/react-hook/blob/master/LICENSE\r\n */\nfunction useMergedRef() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (element) {\n    for (var i = 0; i < refs.length; i++) {\n      var ref = refs[i];\n      if (typeof ref === 'function') ref(element);else if (ref && typeof ref === 'object') ref.current = element;\n    }\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  refs);\n}\n\nvar _excluded = [\"onPlayFailed\", \"sessionId\", \"type\"];\nvar DailyAudioTrack = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function (_ref, ref) {\n  var onPlayFailed = _ref.onPlayFailed,\n    sessionId = _ref.sessionId,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'audio' : _ref$type,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var audioEl = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  var audio = useMediaTrack(sessionId, type);\n  var audioRef = useMergedRef(audioEl, ref);\n  var subscribedState = audio == null ? void 0 : audio.subscribed;\n  /**\r\n   * Setup audio tag.\r\n   */\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    var audioTag = audioEl.current;\n    if (!audioTag || !(audio != null && audio.persistentTrack)) return;\n    var playTimeout;\n    var handleCanPlay = function handleCanPlay() {\n      audioTag.play()[\"catch\"](function (e) {\n        onPlayFailed == null ? void 0 : onPlayFailed({\n          sessionId: sessionId,\n          target: audioTag,\n          type: type,\n          message: e.message,\n          name: e.name\n        });\n      });\n    };\n    var handlePlay = function handlePlay() {\n      clearTimeout(playTimeout);\n    };\n    if (!MediaStream) {\n      console.warn(\"MediaStream API not available. Can't setup \" + type + \" for \" + sessionId);\n      onPlayFailed == null ? void 0 : onPlayFailed({\n        sessionId: sessionId,\n        target: audioTag,\n        type: type,\n        message: 'MediaStream API not available',\n        name: 'MediaStream API not available'\n      });\n      return;\n    }\n    audioTag.addEventListener('canplay', handleCanPlay);\n    audioTag.addEventListener('play', handlePlay);\n    audioTag.srcObject = new MediaStream([audio == null ? void 0 : audio.persistentTrack]);\n    return function () {\n      audioTag == null ? void 0 : audioTag.removeEventListener('canplay', handleCanPlay);\n      audioTag == null ? void 0 : audioTag.removeEventListener('play', handlePlay);\n    };\n  }, [audio == null ? void 0 : audio.persistentTrack, onPlayFailed, sessionId, type]);\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"audio\", Object.assign({\n    autoPlay: true,\n    ref: audioRef\n  }, props, {\n    \"data-session-id\": sessionId,\n    \"data-audio-type\": type,\n    \"data-subscribed\": subscribedState\n  }));\n}));\nDailyAudioTrack.displayName = 'DailyAudioTrack';\n\nvar DailyAudio = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function (_ref, ref) {\n  var _ref$autoSubscribeAct = _ref.autoSubscribeActiveSpeaker,\n    autoSubscribeActiveSpeaker = _ref$autoSubscribeAct === void 0 ? false : _ref$autoSubscribeAct,\n    _ref$maxSpeakers = _ref.maxSpeakers,\n    maxSpeakers = _ref$maxSpeakers === void 0 ? 5 : _ref$maxSpeakers,\n    onPlayFailed = _ref.onPlayFailed,\n    _ref$playLocalScreenA = _ref.playLocalScreenAudio,\n    playLocalScreenAudio = _ref$playLocalScreenA === void 0 ? false : _ref$playLocalScreenA;\n  var daily = useDaily();\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Array(maxSpeakers).fill('')),\n    speakers = _useState[0],\n    setSpeakers = _useState[1];\n  var _useScreenShare = useScreenShare(),\n    screens = _useScreenShare.screens;\n  var localSessionId = useLocalSessionId();\n  var activeSpeakerId = useActiveSpeakerId({\n    ignoreLocal: true\n  });\n  var containerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, function () {\n    return {\n      getActiveSpeakerAudio: function getActiveSpeakerAudio() {\n        var _containerRef$current, _containerRef$current2;\n        return (_containerRef$current = (_containerRef$current2 = containerRef.current) == null ? void 0 : _containerRef$current2.querySelector(\"audio[data-session-id=\\\"\" + activeSpeakerId + \"\\\"][data-audio-type=\\\"audio\\\"]\")) != null ? _containerRef$current : null;\n      },\n      getAllAudio: function getAllAudio() {\n        var _containerRef$current3, _containerRef$current4;\n        return Array.from((_containerRef$current3 = (_containerRef$current4 = containerRef.current) == null ? void 0 : _containerRef$current4.querySelectorAll('audio')) != null ? _containerRef$current3 : []);\n      },\n      getAudioBySessionId: function getAudioBySessionId(id) {\n        var _containerRef$current5, _containerRef$current6;\n        return (_containerRef$current5 = (_containerRef$current6 = containerRef.current) == null ? void 0 : _containerRef$current6.querySelector(\"audio[data-session-id=\\\"\" + id + \"\\\"][data-audio-type=\\\"audio\\\"]\")) != null ? _containerRef$current5 : null;\n      },\n      getRmpAudio: function getRmpAudio() {\n        var _containerRef$current7, _containerRef$current8;\n        return Array.from((_containerRef$current7 = (_containerRef$current8 = containerRef.current) == null ? void 0 : _containerRef$current8.querySelectorAll('audio[data-audio-type=\"rmpAudio\"]')) != null ? _containerRef$current7 : []);\n      },\n      getScreenAudio: function getScreenAudio() {\n        var _containerRef$current9, _containerRef$current10;\n        return Array.from((_containerRef$current9 = (_containerRef$current10 = containerRef.current) == null ? void 0 : _containerRef$current10.querySelectorAll('audio[data-audio-type=\"screenAudio\"]')) != null ? _containerRef$current9 : []);\n      },\n      getRmpAudioBySessionId: function getRmpAudioBySessionId(id) {\n        var _containerRef$current11, _containerRef$current12;\n        return (_containerRef$current11 = (_containerRef$current12 = containerRef.current) == null ? void 0 : _containerRef$current12.querySelector(\"audio[data-session-id=\\\"\" + id + \"\\\"][data-audio-type=\\\"rmpAudio\\\"]\")) != null ? _containerRef$current11 : null;\n      },\n      getScreenAudioBySessionId: function getScreenAudioBySessionId(id) {\n        var _containerRef$current13, _containerRef$current14;\n        return (_containerRef$current13 = (_containerRef$current14 = containerRef.current) == null ? void 0 : _containerRef$current14.querySelector(\"audio[data-session-id=\\\"\" + id + \"\\\"][data-audio-type=\\\"screenAudio\\\"]\")) != null ? _containerRef$current13 : null;\n      }\n    };\n  }, [activeSpeakerId]);\n  var assignSpeaker = (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (get, _set, sessionId) {\n      var _daily$participants;\n      /**\r\n       * Only consider remote participants with subscribed or staged audio.\r\n       */\n      var subscribedParticipants = Object.values((_daily$participants = daily == null ? void 0 : daily.participants()) != null ? _daily$participants : {}).filter(function (p) {\n        return !p.local && Boolean(p.tracks.audio.subscribed);\n      });\n      var isSubscribed = function isSubscribed(id) {\n        return subscribedParticipants.some(function (p) {\n          return p.session_id === id;\n        });\n      };\n      if (!isSubscribed(sessionId)) {\n        if (daily && !daily.isDestroyed() && autoSubscribeActiveSpeaker && !daily.subscribeToTracksAutomatically()) {\n          daily.updateParticipant(sessionId, {\n            setSubscribedTracks: {\n              audio: true\n            }\n          });\n        } else {\n          return;\n        }\n      }\n      setSpeakers(function (prevSpeakers) {\n        var _speakerObjects$;\n        // New speaker is already present\n        if (prevSpeakers.includes(sessionId)) return prevSpeakers;\n        // Try to find a free slot: either unassigned or unsubscribed\n        var freeSlotCheck = function freeSlotCheck(id) {\n          return !id || !isSubscribed(id);\n        };\n        if (prevSpeakers.some(freeSlotCheck)) {\n          var idx = prevSpeakers.findIndex(freeSlotCheck);\n          prevSpeakers[idx] = sessionId;\n          return [].concat(prevSpeakers);\n        }\n        // From here on we can assume that all assigned audio tracks are subscribed.\n        // Try to find muted recent speaker\n        var mutedIdx = prevSpeakers.findIndex(function (id) {\n          return subscribedParticipants.some(function (p) {\n            return p.session_id === id && isTrackOff(p.tracks.audio.state);\n          });\n        });\n        if (mutedIdx >= 0) {\n          prevSpeakers[mutedIdx] = sessionId;\n          return [].concat(prevSpeakers);\n        }\n        // Find least recent non-active speaker and replace with new speaker\n        var speakerObjects = subscribedParticipants.filter(function (p) {\n          return (\n            // Only consider participants currently assigned to speaker slots\n            prevSpeakers.includes(p.session_id) &&\n            // Don't replace current active participant, to avoid audio drop-outs\n            p.session_id !== activeSpeakerId\n          );\n        }).sort(function (a, b) {\n          var _get, _get2;\n          var lastActiveA = (_get = get(getParticipantPropertyAtom(a.session_id, 'last_active'))) != null ? _get : new Date('1970-01-01');\n          var lastActiveB = (_get2 = get(getParticipantPropertyAtom(b.session_id, 'last_active'))) != null ? _get2 : new Date('1970-01-01');\n          if (lastActiveA > lastActiveB) return 1;\n          if (lastActiveA < lastActiveB) return -1;\n          return 0;\n        });\n        // No previous speaker in call anymore. Assign first free slot.\n        if (!speakerObjects.length) {\n          // Don't replace the active speaker. Instead find first non-active speaker slot.\n          var _replaceIdx = prevSpeakers.findIndex(function (id) {\n            return id !== activeSpeakerId;\n          });\n          prevSpeakers[_replaceIdx] = sessionId;\n          return [].concat(prevSpeakers);\n        }\n        // Replace least recent speaker with new speaker\n        var replaceIdx = prevSpeakers.indexOf((_speakerObjects$ = speakerObjects[0]) == null ? void 0 : _speakerObjects$.session_id);\n        prevSpeakers[replaceIdx] = sessionId;\n        return [].concat(prevSpeakers);\n      });\n    });\n    return function (_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [activeSpeakerId, autoSubscribeActiveSpeaker, daily]));\n  /**\r\n   * Unassigns speaker from speaker slot, e.g. because participant left the call.\r\n   */\n  var removeSpeaker = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (sessionId) {\n    setSpeakers(function (prevSpeakers) {\n      if (!prevSpeakers.includes(sessionId)) return prevSpeakers;\n      var newSpeakers = [].concat(prevSpeakers);\n      var idx = newSpeakers.indexOf(sessionId);\n      newSpeakers[idx] = '';\n      return newSpeakers;\n    });\n  }, []);\n  useThrottledDailyEvent(['active-speaker-change', 'track-started', 'participant-left'], (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (evts) {\n    evts.forEach(function (ev) {\n      switch (ev.action) {\n        case 'active-speaker-change':\n          if (ev.activeSpeaker.peerId === localSessionId) return;\n          assignSpeaker(ev.activeSpeaker.peerId);\n          break;\n        case 'track-started':\n          if (ev.track.kind === 'audio' && ev.participant && !ev.participant.local) {\n            assignSpeaker(ev.participant.session_id);\n          }\n          break;\n        case 'participant-left':\n          removeSpeaker(ev.participant.session_id);\n          break;\n      }\n    });\n  }, [assignSpeaker, localSessionId, removeSpeaker]), 200);\n  var rmpAudioIds = useParticipantIds({\n    filter: (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (p) {\n      var _p$tracks;\n      return Boolean(p == null ? void 0 : (_p$tracks = p.tracks) == null ? void 0 : _p$tracks.rmpAudio);\n    }, [])\n  });\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    ref: containerRef\n  }, speakers.map(function (sessionId, idx) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DailyAudioTrack, {\n      key: \"speaker-slot-\" + idx,\n      onPlayFailed: onPlayFailed,\n      sessionId: sessionId,\n      type: \"audio\"\n    });\n  }), screens.filter(function (screen) {\n    return playLocalScreenAudio ? true : !screen.local;\n  }).map(function (screen) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DailyAudioTrack, {\n      key: screen.screenId,\n      onPlayFailed: onPlayFailed,\n      sessionId: screen.session_id,\n      type: \"screenAudio\"\n    });\n  }), rmpAudioIds.map(function (id) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DailyAudioTrack, {\n      key: id + \"-rmp\",\n      onPlayFailed: onPlayFailed,\n      sessionId: id,\n      type: \"rmpAudio\"\n    });\n  }));\n}));\nDailyAudio.displayName = 'DailyAudio';\n\nvar _excluded$1 = [\"automirror\", \"fit\", \"mirror\", \"onResize\", \"playableStyle\", \"sessionId\", \"style\", \"type\"];\nvar DailyVideo = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function DailyVideo(_ref, ref) {\n  var automirror = _ref.automirror,\n    _ref$fit = _ref.fit,\n    fit = _ref$fit === void 0 ? 'contain' : _ref$fit,\n    mirror = _ref.mirror,\n    onResize = _ref.onResize,\n    _ref$playableStyle = _ref.playableStyle,\n    playableStyle = _ref$playableStyle === void 0 ? {} : _ref$playableStyle,\n    sessionId = _ref.sessionId,\n    _ref$style = _ref.style,\n    style = _ref$style === void 0 ? {} : _ref$style,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'video' : _ref$type,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n  var localSessionId = useLocalSessionId();\n  var isLocal = localSessionId === sessionId;\n  var isScreen = type === 'screenVideo';\n  var isLocalCam = isLocal && !isScreen;\n  var videoEl = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  var videoRef = useMergedRef(videoEl, ref);\n  var videoState = useMediaTrack(sessionId, type);\n  var videoTrack = videoState.persistentTrack;\n  /**\r\n   * Considered as playable video:\r\n   * - local cam feed\r\n   * - any screen share\r\n   * - remote cam feed that is subscribed and reported as playable\r\n   */\n  var isPlayable = isLocalCam || isScreen || !videoState.isOff;\n  var trackState = useParticipantProperty(sessionId, \"tracks.\" + type);\n  var subscribedState = trackState == null ? void 0 : trackState.subscribed;\n  /**\r\n   * Determine if video needs to be mirrored.\r\n   */\n  var isMirrored = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    if (typeof mirror === 'boolean') return mirror;\n    if (!automirror) return false;\n    if (!videoTrack) return isLocalCam;\n    var videoTrackSettings = videoTrack.getSettings();\n    var isUsersFrontCamera = 'facingMode' in videoTrackSettings ? isLocalCam && videoTrackSettings.facingMode === 'user' : isLocalCam;\n    // only apply mirror effect to user facing camera\n    return isUsersFrontCamera;\n  }, [automirror, isLocalCam, mirror, videoTrack]);\n  /**\r\n   * Handle canplay & picture-in-picture events.\r\n   */\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function setupVideoEvents() {\n    var video = videoEl.current;\n    if (!video) return;\n    var playVideo = function playVideo() {\n      var promise = video.play();\n      if (promise !== undefined) {\n        promise.then(function () {\n          // All good, playback started.\n          video.controls = false;\n        })[\"catch\"](function (error) {\n          // Auto-play was prevented. Show video controls, so user can play video manually.\n          video.controls = true;\n          console.warn('Failed to play video', error);\n        });\n      }\n    };\n    var handleCanPlay = function handleCanPlay() {\n      if (!video.paused) return;\n      playVideo();\n    };\n    var handleEnterPIP = function handleEnterPIP() {\n      video.style.transform = 'scale(1)';\n    };\n    var handleLeavePIP = function handleLeavePIP() {\n      video.style.transform = '';\n      setTimeout(function () {\n        if (video.paused) playVideo();\n      }, 100);\n    };\n    var handleVisibilityChange = function handleVisibilityChange() {\n      if (document.visibilityState === 'hidden') return;\n      if (!video.paused) return;\n      playVideo();\n    };\n    video.addEventListener('canplay', handleCanPlay);\n    video.addEventListener('enterpictureinpicture', handleEnterPIP);\n    video.addEventListener('leavepictureinpicture', handleLeavePIP);\n    // Videos can be paused if media was played in another app on iOS.\n    // Resuming here, when returning back to Daily call.\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return function () {\n      video.removeEventListener('canplay', handleCanPlay);\n      video.removeEventListener('enterpictureinpicture', handleEnterPIP);\n      video.removeEventListener('leavepictureinpicture', handleLeavePIP);\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n  /**\r\n   * Update srcObject.\r\n   */\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function updateSrcObject() {\n    var video = videoEl.current;\n    if (!video || !videoTrack) return;\n    if (!MediaStream) {\n      console.warn(\"MediaStream API not available. Can't setup \" + type + \" for \" + sessionId);\n      return;\n    }\n    video.srcObject = new MediaStream([videoTrack]);\n    video.load();\n    return function () {\n      // clean up when unmounted\n      video.srcObject = null;\n      video.load();\n    };\n  }, [sessionId, type, videoTrack, videoTrack == null ? void 0 : videoTrack.id]);\n  /**\r\n   * Add optional event listener for resize event so the parent component\r\n   * can know the video's native aspect ratio.\r\n   */\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function reportVideoDimensions() {\n    var video = videoEl.current;\n    if (!onResize || !video) return;\n    var frame;\n    function handleResize() {\n      if (frame) cancelAnimationFrame(frame);\n      frame = requestAnimationFrame(function () {\n        var video = videoEl.current;\n        if (!video || document.hidden) return;\n        var videoWidth = video.videoWidth;\n        var videoHeight = video.videoHeight;\n        if (videoWidth && videoHeight) {\n          onResize == null ? void 0 : onResize({\n            aspectRatio: videoWidth / videoHeight,\n            height: videoHeight,\n            width: videoWidth\n          });\n        }\n      });\n    }\n    handleResize();\n    video.addEventListener('loadedmetadata', handleResize);\n    video.addEventListener('resize', handleResize);\n    return function () {\n      if (frame) cancelAnimationFrame(frame);\n      video.removeEventListener('loadedmetadata', handleResize);\n      video.removeEventListener('resize', handleResize);\n    };\n  }, [onResize]);\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"video\", Object.assign({\n    autoPlay: true,\n    muted: true,\n    playsInline: true,\n    ref: videoRef,\n    \"data-local\": isLocal,\n    \"data-mirrored\": isMirrored || undefined,\n    \"data-playable\": isPlayable || undefined,\n    \"data-session-id\": sessionId,\n    \"data-subscribed\": subscribedState,\n    \"data-video-type\": type,\n    style: _extends({\n      objectFit: fit,\n      transform: isMirrored ? 'scale(-1, 1)' : ''\n    }, style, isPlayable ? playableStyle : {})\n  }, props));\n});\nDailyVideo.displayName = 'DailyVideo';\n\nvar DailyDevicesContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  refreshDevices: function refreshDevices() {\n    return Promise.resolve();\n  }\n});\n\nvar generalCameraState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)('idle');\ngeneralCameraState.debugLabel = /*#__PURE__*/jotaiDebugLabel('camera-state');\nvar generalMicrophoneState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)('idle');\ngeneralMicrophoneState.debugLabel = /*#__PURE__*/jotaiDebugLabel('microphone-state');\nvar cameraDevicesState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)([]);\ncameraDevicesState.debugLabel = /*#__PURE__*/jotaiDebugLabel('camera-devices');\nvar microphoneDevicesState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)([]);\nmicrophoneDevicesState.debugLabel = /*#__PURE__*/jotaiDebugLabel('microphone-devices');\nvar speakerDevicesState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)([]);\nspeakerDevicesState.debugLabel = /*#__PURE__*/jotaiDebugLabel('speaker-devices');\nvar lastCameraErrorState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)(null);\nlastCameraErrorState.debugLabel = /*#__PURE__*/jotaiDebugLabel('last-camera-error');\nvar DailyDevices = function DailyDevices(_ref) {\n  var children = _ref.children;\n  var daily = useDaily();\n  /**\r\n   * Refreshes list of available devices using enumerateDevices.\r\n   * Previous device states are kept in place, otherwise states are initialized as 'granted'.\r\n   */\n  var refreshDevices = (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (_get, set) {\n      var _navigator, _navigator$mediaDevic, _navigator2, _navigator2$mediaDevi;\n      /**\r\n       * Check for legacy browsers.\r\n       */\n      if (typeof ((_navigator = navigator) == null ? void 0 : (_navigator$mediaDevic = _navigator.mediaDevices) == null ? void 0 : _navigator$mediaDevic.getUserMedia) === 'undefined' || typeof ((_navigator2 = navigator) == null ? void 0 : (_navigator2$mediaDevi = _navigator2.mediaDevices) == null ? void 0 : _navigator2$mediaDevi.enumerateDevices) === 'undefined') {\n        set(generalCameraState, 'not-supported');\n        set(generalMicrophoneState, 'not-supported');\n        return;\n      }\n      if (!daily) return;\n      try {\n        var _yield$daily$enumerat = yield daily.enumerateDevices(),\n          devices = _yield$daily$enumerat.devices;\n        /**\r\n         * Filter out \"empty\" devices for when device access has not been granted (yet).\r\n         */\n        var cams = devices.filter(function (d) {\n          return d.kind === 'videoinput' && d.deviceId !== '';\n        });\n        var mics = devices.filter(function (d) {\n          return d.kind === 'audioinput' && d.deviceId !== '';\n        });\n        var speakers = devices.filter(function (d) {\n          return d.kind === 'audiooutput' && d.deviceId !== '';\n        });\n        var _yield$daily$getInput = yield daily.getInputDevices(),\n          camera = _yield$daily$getInput.camera,\n          mic = _yield$daily$getInput.mic,\n          speaker = _yield$daily$getInput.speaker;\n        var mapDevice = function mapDevice(device, d, prevDevices) {\n          var _prevDevices$find$sta, _prevDevices$find;\n          return {\n            device: d,\n            selected: 'deviceId' in device && d.deviceId === device.deviceId,\n            state: (_prevDevices$find$sta = (_prevDevices$find = prevDevices.find(function (p) {\n              return p.device.deviceId === d.deviceId;\n            })) == null ? void 0 : _prevDevices$find.state) != null ? _prevDevices$find$sta : 'granted'\n          };\n        };\n        var sortDeviceByLabel = function sortDeviceByLabel(a, b) {\n          if (a.device.deviceId === 'default') return -1;\n          if (b.device.deviceId === 'default') return 1;\n          if (a.device.label < b.device.label) return -1;\n          if (a.device.label > b.device.label) return 1;\n          return 0;\n        };\n        set(cameraDevicesState, function (prevCams) {\n          return cams.filter(Boolean).map(function (d) {\n            return mapDevice(camera, d, prevCams);\n          }).sort(sortDeviceByLabel);\n        });\n        set(microphoneDevicesState, function (prevMics) {\n          return mics.filter(Boolean).map(function (d) {\n            return mapDevice(mic, d, prevMics);\n          }).sort(sortDeviceByLabel);\n        });\n        set(speakerDevicesState, function (prevSpeakers) {\n          return speakers.filter(Boolean).map(function (d) {\n            return mapDevice(speaker, d, prevSpeakers);\n          }).sort(sortDeviceByLabel);\n        });\n      } catch (e) {\n        set(generalCameraState, 'not-supported');\n        set(generalMicrophoneState, 'not-supported');\n      }\n    });\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [daily]));\n  /**\r\n   * Updates general and specific device states, based on blocked status.\r\n   */\n  var updateDeviceStates = (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(function* (get, set) {\n      var _tracks$video$off, _tracks$audio$off, _tracks$audio, _tracks$audio$blocked, _tracks$audio2, _tracks$audio2$blocke, _tracks$audio3, _tracks$audio3$blocke, _tracks$video, _tracks$video$blocked, _tracks$video2, _tracks$video2$blocke, _tracks$video3, _tracks$video3$blocke;\n      if (!daily) return;\n      var currentCamState = get(generalCameraState);\n      var currentMicState = get(generalMicrophoneState);\n      var participants = daily.participants();\n      // Guard against potentially uninitialized local participant\n      if (!participants.local) return;\n      var tracks = participants.local.tracks;\n      var camPermissionState = 'prompt';\n      var micPermissionState = 'prompt';\n      if (navigator.permissions) {\n        try {\n          var camPermission = yield navigator.permissions.query({\n            // @ts-ignore\n            name: 'camera'\n          });\n          camPermissionState = camPermission.state;\n          var micPermission = yield navigator.permissions.query({\n            // @ts-ignore\n            name: 'microphone'\n          });\n          micPermissionState = micPermission.state;\n        } catch (_unused) {\n          // Permissions query not available\n        }\n      }\n      var awaitingCamAccess = camPermissionState === 'prompt' && ['idle', 'pending'].includes(currentCamState) && tracks.video.state === 'interrupted' && !tracks.video.persistentTrack;\n      var initialCamOff = ['idle', 'pending'].includes(currentCamState) && !tracks.video.persistentTrack && Boolean((_tracks$video$off = tracks.video.off) == null ? void 0 : _tracks$video$off.byUser);\n      var awaitingMicAccess = micPermissionState === 'prompt' && ['idle', 'pending'].includes(currentMicState) && tracks.audio.state === 'interrupted' && !tracks.audio.persistentTrack;\n      var initialMicOff = ['idle', 'pending'].includes(currentMicState) && !tracks.audio.persistentTrack && Boolean((_tracks$audio$off = tracks.audio.off) == null ? void 0 : _tracks$audio$off.byUser);\n      if ((_tracks$audio = tracks.audio) != null && (_tracks$audio$blocked = _tracks$audio.blocked) != null && _tracks$audio$blocked.byDeviceInUse) {\n        set(generalMicrophoneState, 'in-use');\n        set(microphoneDevicesState, function (mics) {\n          return mics.map(function (m) {\n            return m.selected ? _extends({}, m, {\n              state: 'in-use'\n            }) : m;\n          });\n        });\n      } else if ((_tracks$audio2 = tracks.audio) != null && (_tracks$audio2$blocke = _tracks$audio2.blocked) != null && _tracks$audio2$blocke.byDeviceMissing) {\n        set(generalMicrophoneState, 'not-found');\n      } else if ((_tracks$audio3 = tracks.audio) != null && (_tracks$audio3$blocke = _tracks$audio3.blocked) != null && _tracks$audio3$blocke.byPermissions || micPermissionState === 'denied') {\n        set(generalMicrophoneState, 'blocked');\n      } else if (awaitingMicAccess) {\n        set(generalMicrophoneState, 'pending');\n      } else if (initialMicOff) {\n        set(generalMicrophoneState, 'idle');\n      } else {\n        set(generalMicrophoneState, 'granted');\n        set(microphoneDevicesState, function (mics) {\n          return mics.map(function (m) {\n            return m.selected ? _extends({}, m, {\n              state: 'granted'\n            }) : m;\n          });\n        });\n      }\n      if ((_tracks$video = tracks.video) != null && (_tracks$video$blocked = _tracks$video.blocked) != null && _tracks$video$blocked.byDeviceInUse) {\n        set(generalCameraState, 'in-use');\n        set(cameraDevicesState, function (cams) {\n          return cams.map(function (m) {\n            return m.selected ? _extends({}, m, {\n              state: 'in-use'\n            }) : m;\n          });\n        });\n      } else if ((_tracks$video2 = tracks.video) != null && (_tracks$video2$blocke = _tracks$video2.blocked) != null && _tracks$video2$blocke.byDeviceMissing) {\n        set(generalCameraState, 'not-found');\n      } else if ((_tracks$video3 = tracks.video) != null && (_tracks$video3$blocke = _tracks$video3.blocked) != null && _tracks$video3$blocke.byPermissions || camPermissionState === 'denied') {\n        set(generalCameraState, 'blocked');\n      } else if (awaitingCamAccess) {\n        set(generalCameraState, 'pending');\n      } else if (initialCamOff) {\n        set(generalCameraState, 'idle');\n      } else {\n        set(generalCameraState, 'granted');\n        set(cameraDevicesState, function (cams) {\n          return cams.map(function (m) {\n            return m.selected ? _extends({}, m, {\n              state: 'granted'\n            }) : m;\n          });\n        });\n      }\n      refreshDevices();\n    });\n    return function (_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [daily, refreshDevices]));\n  useDailyEvent('participant-updated', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    if (!ev.participant.local) return;\n    updateDeviceStates();\n  }, [updateDeviceStates]));\n  useDailyEvent('available-devices-updated', refreshDevices);\n  useDailyEvent('selected-devices-updated', refreshDevices);\n  useDailyEvent('camera-error', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, ev) {\n    var _ev$error, _ev$error2, _ev$error3, _ev$error4, _ev$error5, _ev$error6, _ev$error7;\n    set(lastCameraErrorState, ev.error);\n    switch ((_ev$error = ev.error) == null ? void 0 : _ev$error.type) {\n      case 'cam-in-use':\n        set(generalCameraState, 'in-use');\n        break;\n      case 'mic-in-use':\n        set(generalMicrophoneState, 'in-use');\n        break;\n      case 'cam-mic-in-use':\n        set(generalCameraState, 'in-use');\n        set(generalMicrophoneState, 'in-use');\n        break;\n      case 'not-found':\n        if ((_ev$error2 = ev.error) != null && _ev$error2.missingMedia.includes('video')) set(generalCameraState, 'not-found');\n        if ((_ev$error3 = ev.error) != null && _ev$error3.missingMedia.includes('audio')) set(generalMicrophoneState, 'not-found');\n        break;\n      case 'permissions':\n        if ((_ev$error4 = ev.error) != null && _ev$error4.blockedMedia.includes('video')) set(generalCameraState, 'blocked');\n        if ((_ev$error5 = ev.error) != null && _ev$error5.blockedMedia.includes('audio')) set(generalMicrophoneState, 'blocked');\n        break;\n      case 'constraints':\n        if (((_ev$error6 = ev.error) == null ? void 0 : _ev$error6.reason) === 'invalid') {\n          set(generalCameraState, 'constraints-invalid');\n          set(generalMicrophoneState, 'constraints-invalid');\n        } else if (((_ev$error7 = ev.error) == null ? void 0 : _ev$error7.reason) === 'none-specified') {\n          set(generalCameraState, 'constraints-none-specified');\n          set(generalMicrophoneState, 'constraints-none-specified');\n        }\n        break;\n      case 'undefined-mediadevices':\n        set(generalCameraState, 'undefined-mediadevices');\n        set(generalMicrophoneState, 'undefined-mediadevices');\n        break;\n      case 'unknown':\n      default:\n        set(generalCameraState, 'unknown');\n        set(generalMicrophoneState, 'unknown');\n        break;\n    }\n  }, [])));\n  /**\r\n   * Update all device state, when camera is started.\r\n   */\n  useDailyEvent('started-camera', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set) {\n    set(generalCameraState, 'granted');\n    set(generalMicrophoneState, 'granted');\n    updateDeviceStates();\n  }, [updateDeviceStates])));\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DailyDevicesContext.Provider, {\n    value: {\n      refreshDevices: refreshDevices\n    }\n  }, children);\n};\n\nvar liveStreamingState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)({\n  errorMsg: undefined,\n  isLiveStreaming: false,\n  layout: undefined\n});\nliveStreamingState.debugLabel = /*#__PURE__*/jotaiDebugLabel('live-streaming');\nvar DailyLiveStreaming = function DailyLiveStreaming(_ref) {\n  var children = _ref.children;\n  useDailyEvent('live-streaming-started', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, ev) {\n    set(liveStreamingState, {\n      isLiveStreaming: true,\n      layout: ev == null ? void 0 : ev.layout\n    });\n  }, [])));\n  useDailyEvent('live-streaming-stopped', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set) {\n    set(liveStreamingState, function (prevState) {\n      return _extends({}, prevState, {\n        isLiveStreaming: false,\n        layout: undefined\n      });\n    });\n  }, [])));\n  useDailyEvent('live-streaming-error', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, ev) {\n    set(liveStreamingState, function (prevState) {\n      return _extends({}, prevState, {\n        errorMsg: ev.errorMsg\n      });\n    });\n  }, [])));\n  useDailyEvent('left-meeting', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set) {\n    set(liveStreamingState, {\n      errorMsg: undefined,\n      isLiveStreaming: false,\n      layout: undefined\n    });\n  }, [])));\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, children);\n};\n\nvar meetingStateState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)('new');\nmeetingStateState.debugLabel = /*#__PURE__*/jotaiDebugLabel('meeting-state');\nvar meetingErrorState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)(null);\nmeetingErrorState.debugLabel = /*#__PURE__*/jotaiDebugLabel('meeting-error');\nvar nonFatalErrorState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)(null);\nnonFatalErrorState.debugLabel = /*#__PURE__*/jotaiDebugLabel('non-fatal-error');\nvar meetingSessionDataState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)({\n  data: undefined,\n  topology: 'none'\n});\nmeetingSessionDataState.debugLabel = /*#__PURE__*/jotaiDebugLabel('meeting-session-data');\nvar DailyMeeting = function DailyMeeting(_ref) {\n  var children = _ref.children;\n  var daily = useDaily();\n  /**\r\n   * Updates meeting state.\r\n   */\n  var updateMeetingState = (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set) {\n    if (!daily) return;\n    var meetingState = daily.meetingState();\n    set(meetingStateState, meetingState);\n    return meetingState;\n  }, [daily]));\n  useDailyEvent('loading', updateMeetingState);\n  useDailyEvent('loaded', updateMeetingState);\n  useDailyEvent('joining-meeting', updateMeetingState);\n  useDailyEvent('joined-meeting', updateMeetingState);\n  useDailyEvent('left-meeting', updateMeetingState);\n  useDailyEvent('error', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, ev) {\n    set(meetingErrorState, ev);\n    updateMeetingState();\n  }, [updateMeetingState])));\n  useDailyEvent('nonfatal-error', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, ev) {\n    set(nonFatalErrorState, ev);\n  }, [])));\n  /**\r\n   * Updates meeting session state.\r\n   */\n  var initMeetingSessionState = (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set) {\n    if (!daily) return;\n    set(meetingSessionDataState, daily.meetingSessionState());\n  }, [daily]));\n  /**\r\n   * Initialize state when joined meeting or setting up the hook.\r\n   */\n  useDailyEvent('joined-meeting', initMeetingSessionState);\n  /**\r\n   * Update Jotai state whenever meeting session state is updated.\r\n   */\n  useDailyEvent('meeting-session-state-updated', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, ev) {\n    set(meetingSessionDataState, ev.meetingSessionState);\n  }, [])));\n  /**\r\n   * Reset Jotai state when meeting ends.\r\n   */\n  useDailyEvent('left-meeting', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set) {\n    set(meetingSessionDataState, {\n      data: undefined,\n      topology: 'none'\n    });\n  }, [])));\n  /**\r\n   * Reset Jotai state when call instance is destroyed.\r\n   */\n  useDailyEvent('call-instance-destroyed', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set) {\n    set(meetingStateState, 'new');\n    set(meetingErrorState, null);\n    set(nonFatalErrorState, null);\n    set(meetingSessionDataState, {\n      data: undefined,\n      topology: 'none'\n    });\n  }, [])));\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, children);\n};\n\nvar topologyState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)('none');\ntopologyState.debugLabel = /*#__PURE__*/jotaiDebugLabel('topology');\nvar networkQualityState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)(100);\nnetworkQualityState.debugLabel = /*#__PURE__*/jotaiDebugLabel('network-quality');\nvar networkThresholdState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)('good');\nnetworkThresholdState.debugLabel = /*#__PURE__*/jotaiDebugLabel('network-threshold');\nvar DailyNetwork = function DailyNetwork(_ref) {\n  var children = _ref.children;\n  var daily = useDaily();\n  var topology = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(topologyState);\n  var initTopology = (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (_get, set) {\n      if (!daily) return;\n      var topology = yield daily.getNetworkTopology();\n      if (!topology || (topology == null ? void 0 : topology.topology) === 'none') return;\n      set(topologyState, topology.topology);\n    });\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [daily]));\n  useDailyEvent('joined-meeting', initTopology);\n  useDailyEvent('network-connection', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, ev) {\n    switch (ev.event) {\n      case 'connected':\n        if (ev.type === 'peer-to-peer') set(topologyState, 'peer');\n        if (ev.type === 'sfu') set(topologyState, 'sfu');\n        break;\n    }\n  }, [])));\n  useDailyEvent('network-quality-change', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, ev) {\n    set(networkQualityState, function (prevQuality) {\n      return prevQuality !== ev.quality ? ev.quality : prevQuality;\n    });\n    set(networkThresholdState, function (prevThreshold) {\n      return prevThreshold !== ev.threshold ? ev.threshold : prevThreshold;\n    });\n  }, [])));\n  useDailyEvent('left-meeting', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set) {\n    set(topologyState, 'none');\n    set(networkQualityState, 100);\n    set(networkThresholdState, 'good');\n  }, [])));\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (!daily || topology !== 'none') return;\n    initTopology();\n  }, [daily, initTopology, topology]);\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, children);\n};\n\nvar recordingState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)({\n  isLocalParticipantRecorded: false,\n  isRecording: false\n});\nrecordingState.debugLabel = /*#__PURE__*/jotaiDebugLabel('recording-state');\nvar DailyRecordings = function DailyRecordings(_ref) {\n  var children = _ref.children;\n  var localSessionId = useLocalSessionId();\n  var recordingParticipantIds = useParticipantIds({\n    filter: 'record'\n  });\n  var maybeUpdateRecordingState = (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (get, set, hasRecordingParticipants, isLocalParticipantRecording) {\n    var oldState = get(recordingState);\n    var s = {\n      isLocalParticipantRecorded: oldState.isLocalParticipantRecorded,\n      isRecording: oldState.isRecording,\n      local: oldState.local,\n      type: oldState.type\n    };\n    var newState = {\n      // In case type is local or not set, determine based on recording participants\n      isLocalParticipantRecorded: (s == null ? void 0 : s.type) === 'local' || !(s != null && s.type) ? hasRecordingParticipants : s.isLocalParticipantRecorded,\n      isRecording: (s == null ? void 0 : s.type) === 'local' || !(s != null && s.type) ? hasRecordingParticipants : s.isRecording,\n      local: ((s == null ? void 0 : s.type) === 'local' || !(s != null && s.type)) && hasRecordingParticipants ? isLocalParticipantRecording : s == null ? void 0 : s.local,\n      /**\r\n       * Set type in case recording participants are detected.\r\n       * We only set `record` on participants, when recording type is 'local'.\r\n       */\n      type: hasRecordingParticipants ? 'local' : oldState == null ? void 0 : oldState.type\n    };\n    if (customDeepEqual(s, newState)) return;\n    set(recordingState, _extends({}, s, newState));\n  }, []));\n  /**\r\n   * Update recording state, whenever amount of recording participants changes.\r\n   */\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    var hasRecordingParticipants = recordingParticipantIds.length > 0;\n    var isLocalParticipantRecording = recordingParticipantIds.includes(localSessionId || 'local');\n    maybeUpdateRecordingState(hasRecordingParticipants, isLocalParticipantRecording);\n  }, [localSessionId, maybeUpdateRecordingState, recordingParticipantIds]);\n  useDailyEvent('recording-started', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, ev) {\n    var isLocalParticipantRecorded = true;\n    switch (ev.type) {\n      case 'cloud-beta':\n      case 'cloud':\n        {\n          var _ev$layout;\n          if (localSessionId && ((_ev$layout = ev.layout) == null ? void 0 : _ev$layout.preset) === 'single-participant' && ev.layout.session_id !== localSessionId) {\n            isLocalParticipantRecorded = false;\n          }\n          break;\n        }\n    }\n    set(recordingState, {\n      error: false,\n      isLocalParticipantRecorded: isLocalParticipantRecorded,\n      isRecording: true,\n      layout: ev == null ? void 0 : ev.layout,\n      local: ev == null ? void 0 : ev.local,\n      recordingId: ev == null ? void 0 : ev.recordingId,\n      recordingStartedDate: new Date(),\n      startedBy: ev == null ? void 0 : ev.startedBy,\n      type: ev == null ? void 0 : ev.type\n    });\n  }, [localSessionId])));\n  useDailyEvent('recording-stopped', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set) {\n    set(recordingState, function (prevState) {\n      return _extends({}, prevState, {\n        isLocalParticipantRecorded: false,\n        isRecording: false\n      });\n    });\n  }, [])));\n  useDailyEvent('recording-error', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set) {\n    set(recordingState, function (prevState) {\n      return _extends({}, prevState, {\n        error: true,\n        isLocalParticipantRecorded: false,\n        isRecording: false\n      });\n    });\n  }, [])));\n  useDailyEvent('left-meeting', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set) {\n    set(recordingState, {\n      isLocalParticipantRecorded: false,\n      isRecording: false\n    });\n  }, [])));\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, children);\n};\n\n/**\r\n * Returns a meeting's current state.\r\n */\nvar useMeetingState = function useMeetingState() {\n  var meetingState = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(meetingStateState);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(meetingState);\n  return meetingState;\n};\n\nvar roomState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)(null);\nroomState.debugLabel = /*#__PURE__*/jotaiDebugLabel('room-state');\nvar DailyRoom = function DailyRoom(_ref) {\n  var children = _ref.children;\n  var daily = useDaily();\n  var meetingState = useMeetingState();\n  var updateRoom = (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (_get, set) {\n      if (!daily || meetingState === 'left-meeting') return;\n      var room = yield daily.room();\n      if (room && 'id' in room) {\n        set(roomState, room);\n      }\n      return room;\n    });\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [daily, meetingState]));\n  useDailyEvent('access-state-updated', updateRoom);\n  useDailyEvent('left-meeting', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set) {\n    return function () {\n      set(roomState, null);\n    };\n  }, [])));\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, children);\n};\n\nvar transcriptionState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)({\n  isTranscribing: false,\n  model: 'general',\n  language: 'en',\n  transcriptions: []\n});\ntranscriptionState.debugLabel = /*#__PURE__*/jotaiDebugLabel('transcription-state');\nvar DailyTranscriptions = function DailyTranscriptions(_ref) {\n  var children = _ref.children;\n  useDailyEvent('transcription-started', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, ev) {\n    set(transcriptionState, {\n      error: false,\n      transcriptionStartDate: new Date(),\n      isTranscribing: true,\n      transcriptions: [],\n      endpointing: ev.endpointing,\n      extra: ev.extra,\n      includeRawResponse: ev.includeRawResponse,\n      instanceId: ev.instanceId,\n      language: ev.language,\n      model: ev.model,\n      profanity_filter: ev.profanity_filter,\n      punctuate: ev.punctuate,\n      redact: ev.redact,\n      startedBy: ev.startedBy,\n      tier: ev.tier\n    });\n  }, [])));\n  useDailyEvent('transcription-stopped', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, ev) {\n    set(transcriptionState, function (prevState) {\n      return _extends({}, prevState, {\n        updatedBy: ev.updatedBy,\n        isTranscribing: false\n      });\n    });\n  }, [])));\n  useDailyEvent('transcription-error', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set) {\n    set(transcriptionState, function (prevState) {\n      return _extends({}, prevState, {\n        error: true,\n        isTranscribing: false\n      });\n    });\n  }, [])));\n  useDailyEvent('left-meeting', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set) {\n    set(transcriptionState, function (prevState) {\n      return _extends({}, prevState, {\n        isTranscribing: false\n      });\n    });\n  }, [])));\n  useDailyEvent('app-message', (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, ev) {\n    if ((ev == null ? void 0 : ev.fromId) === 'transcription') {\n      set(transcriptionState, function (prevState) {\n        return _extends({}, prevState, {\n          // setting it to true whenever a new message is received\n          // as the participants who joined after the transcription-started event\n          // won't be knowing if transcription is started or not\n          isTranscribing: true,\n          transcriptions: [].concat(prevState.transcriptions, [ev.data])\n        });\n      });\n    }\n  }, [])));\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, children);\n};\n\nvar defaultOptions = {};\nvar defaultShouldCreateInstance = function defaultShouldCreateInstance() {\n  return true;\n};\nvar defaultProps = {\n  options: defaultOptions,\n  shouldCreateInstance: defaultShouldCreateInstance\n};\n/**\r\n * Helper hook to maintain custom call instances in React codebases.\r\n */\nvar useCallInstance = function useCallInstance(type, _temp) {\n  var _ref = _temp === void 0 ? defaultProps : _temp,\n    parentElRef = _ref.parentElRef,\n    _ref$options = _ref.options,\n    options = _ref$options === void 0 ? defaultOptions : _ref$options,\n    _ref$shouldCreateInst = _ref.shouldCreateInstance,\n    shouldCreateInstance = _ref$shouldCreateInst === void 0 ? defaultShouldCreateInstance : _ref$shouldCreateInst;\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),\n    callInstance = _useState[0],\n    setCallInstance = _useState[1];\n  /**\r\n   * Holds last used props when callObject instance was created.\r\n   */\n  var lastUsedOptions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    /**\r\n     * Call frame instances with a defined parentEl likely pass a ref.\r\n     * Typically a DOM ref is initialized with useRef(null).\r\n     * We'll want to wait until parentEl is defined, meaning that the ref is\r\n     * correctly wired up with a DOM element.\r\n     * Otherwise we'll just check shouldCreateInstance().\r\n     */\n    if (type === 'callFrame' && (parentElRef == null ? void 0 : parentElRef.current) === null || !shouldCreateInstance()) return;\n    function destroyCallInstance(_x) {\n      return _destroyCallInstance.apply(this, arguments);\n    }\n    /**\r\n     * Once instance is destroyed, nullify callInstance, so a new one can be created.\r\n     */\n    function _destroyCallInstance() {\n      _destroyCallInstance = _asyncToGenerator(function* (co) {\n        yield co.destroy();\n      });\n      return _destroyCallInstance.apply(this, arguments);\n    }\n    var handleDestroyedInstance = function handleDestroyedInstance() {\n      /**\r\n       * Setting a timeout makes sure the destruction and creation\r\n       * of call instances happen in separate call stacks.\r\n       * Otherwise there's a risk for duplicate call instances.\r\n       */\n      setTimeout(function () {\n        return setCallInstance(null);\n      }, 0);\n    };\n    var co = _daily_co_daily_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getCallInstance();\n    /**\r\n     * In case a call instance exists outside of this hook instance's knowledge,\r\n     * store it in state.\r\n     */\n    if (!callInstance && co && !co.isDestroyed()) {\n      co.once('call-instance-destroyed', handleDestroyedInstance);\n      setCallInstance(co);\n      return;\n    }\n    /**\r\n     * callInstance exists.\r\n     */\n    if (callInstance) {\n      /**\r\n       * Props have changed. Destroy current instance, so a new one can be created.\r\n       */\n      if (!customDeepEqual(lastUsedOptions.current, options)) {\n        destroyCallInstance(callInstance);\n      }\n      /**\r\n       * Return early.\r\n       */\n      return;\n    }\n    if (!co || co.isDestroyed()) {\n      /**\r\n       * callInstance doesn't exist or is destroyed (TODO: Check why getCallInstance() can return a destroyed instance),\r\n       * but should be created.\r\n       * Important to spread props, because createCallObject/createFrame alters the passed object (adds layout and dailyJsVersion).\r\n       */\n      switch (type) {\n        case 'callFrame':\n          co = parentElRef != null && parentElRef.current ? _daily_co_daily_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].createFrame(parentElRef.current, _extends({}, options)) : _daily_co_daily_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].createFrame(_extends({}, options));\n          break;\n        case 'callObject':\n          co = _daily_co_daily_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].createCallObject(_extends({}, options));\n          break;\n      }\n      lastUsedOptions.current = options;\n    }\n    setCallInstance(co);\n    co.once('call-instance-destroyed', handleDestroyedInstance);\n    /**\r\n     * No cleanup phase here, because callObject.destroy() returns a Promise.\r\n     * We can't have asynchronous cleanups in a useEffect.\r\n     * To avoid infinite render loops we compare the props when creating call object instances.\r\n     */\n  }, [callInstance, options, parentElRef, shouldCreateInstance, type]);\n  return callInstance;\n};\n\n/**\r\n * Helper hook to maintain custom callObject instances in React codebases.\r\n */\nvar useCallObject = function useCallObject(props) {\n  return useCallInstance('callObject', props);\n};\n\nvar _excluded$2 = [\"children\", \"jotaiStore\"];\nvar DailyProvider = function DailyProvider(_ref) {\n  var children = _ref.children,\n    jotaiStore = _ref.jotaiStore,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n  var eventsMap = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({});\n  /**\r\n   * Generic event handler to loop through registered event callbacks.\r\n   */\n  var handleEvent = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    var _eventsMap$current$ev, _eventsMap$current;\n    if (!('action' in ev)) return;\n    var event = ev.action;\n    var allHandlers = Array.from((_eventsMap$current$ev = (_eventsMap$current = eventsMap.current) == null ? void 0 : _eventsMap$current[event]) != null ? _eventsMap$current$ev : []);\n    var priorityHandlers = allHandlers.filter(function (_ref2) {\n      var key = _ref2[0];\n      return key < 0;\n    });\n    var normalHandlers = allHandlers.filter(function (_ref3) {\n      var key = _ref3[0];\n      return key > 0;\n    });\n    var sortedHandlers = [].concat(priorityHandlers, normalHandlers);\n    for (var _iterator = _createForOfIteratorHelperLoose(sortedHandlers), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n        cb = _step$value[1];\n      cb(ev);\n    }\n  }, []);\n  /**\r\n   * In case events are set up via useDailyEvent before a DailyCall instance is available,\r\n   * we'll register the events whenever daily is set.\r\n   */\n  var initEventHandlers = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (daily) {\n    if (!daily) return;\n    Object.keys(eventsMap.current).forEach(function (event) {\n      daily.off(event, handleEvent);\n      if (!daily.isDestroyed()) {\n        daily.on(event, handleEvent);\n      }\n    });\n  }, [handleEvent]);\n  var externalCallObject = 'callObject' in props ? props.callObject : null;\n  var memoizedOptions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    return 'callObject' in props ? {} : props;\n  }, [props]);\n  var internalCallObject = useCallObject({\n    options: memoizedOptions,\n    shouldCreateInstance: (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n      return !('callObject' in props);\n    }, [props])\n  });\n  var callObject = externalCallObject != null ? externalCallObject : internalCallObject;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (!callObject) return;\n    initEventHandlers(callObject);\n  }, [callObject, initEventHandlers]);\n  /**\r\n   * Registers event callback.\r\n   */\n  var on = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev, cb, key) {\n    var _eventsMap$current$ev2;\n    if (!eventsMap.current[ev]) {\n      eventsMap.current[ev] = new Map();\n      if (callObject) {\n        /**\r\n         * Make sure only 1 event listener is registered at any time for handleEvent.\r\n         * Otherwise, events sent from daily-js might be handled multiple times.\r\n         */\n        callObject.off(ev, handleEvent);\n        if (!callObject.isDestroyed()) {\n          callObject.on(ev, handleEvent);\n        }\n      }\n    }\n    if (!((_eventsMap$current$ev2 = eventsMap.current[ev]) != null && _eventsMap$current$ev2.has(key))) {\n      var _eventsMap$current$ev3;\n      (_eventsMap$current$ev3 = eventsMap.current[ev]) == null ? void 0 : _eventsMap$current$ev3.set(key, cb);\n    }\n  }, [callObject, handleEvent]);\n  /**\r\n   * Unregisters event callback.\r\n   */\n  var off = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev, key) {\n    var _eventsMap$current$ev4, _eventsMap$current$ev5;\n    (_eventsMap$current$ev4 = eventsMap.current[ev]) == null ? void 0 : _eventsMap$current$ev4[\"delete\"](key);\n    if (((_eventsMap$current$ev5 = eventsMap.current[ev]) == null ? void 0 : _eventsMap$current$ev5.size) === 0) {\n      callObject == null ? void 0 : callObject.off(ev, handleEvent);\n      delete eventsMap.current[ev];\n    }\n  }, [callObject, handleEvent]);\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(jotai__WEBPACK_IMPORTED_MODULE_6__.Provider, {\n    store: jotaiStore\n  }, react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DailyContext.Provider, {\n    value: callObject\n  }, react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DailyEventContext.Provider, {\n    value: {\n      on: on,\n      off: off\n    }\n  }, react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DailyRoom, null, react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DailyMeeting, null, react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DailyNetwork, null, react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DailyParticipants, null, react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DailyRecordings, null, react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DailyLiveStreaming, null, react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DailyTranscriptions, null, react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DailyDevices, null, children)))))))))));\n};\n\n/**\r\n * Returns the participant identified by the given sessionId.\r\n * @param sessionId – The participant's session_id or \"local\".\r\n * @deprecated Use [useParticipantProperty](https://docs.daily.co/reference/daily-react/use-participant-property) instead to only subscribe to required participant properties.\r\n */\nvar useParticipant = function useParticipant(sessionId, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    onParticipantLeft = _ref.onParticipantLeft,\n    onParticipantUpdated = _ref.onParticipantUpdated;\n  var participant = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(participantState(sessionId));\n  useThrottledDailyEvent(['participant-updated', 'participant-left'], (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (evts) {\n    var filteredEvts = evts.filter(function (ev) {\n      return ev.participant.session_id === sessionId;\n    });\n    if (!filteredEvts.length) return;\n    filteredEvts.forEach(function (ev) {\n      switch (ev.action) {\n        case 'participant-updated':\n          onParticipantUpdated == null ? void 0 : onParticipantUpdated(ev);\n          break;\n        case 'participant-left':\n          onParticipantLeft == null ? void 0 : onParticipantLeft(ev);\n          break;\n      }\n    });\n  }, [onParticipantLeft, onParticipantUpdated, sessionId]));\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(participant);\n  return participant;\n};\n\n/**\r\n * Returns the most recent participant mentioned in an [active-speaker-change](https://docs.daily.co/reference/daily-js/events/meeting-events#active-speaker-change) event.\r\n * @deprecated Use [useActiveSpeakerId](https://docs.daily.co/reference/daily-react/use-active-speaker-id) instead.\r\n */\nvar useActiveParticipant = function useActiveParticipant(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    _ref$ignoreLocal = _ref.ignoreLocal,\n    ignoreLocal = _ref$ignoreLocal === void 0 ? false : _ref$ignoreLocal,\n    onActiveSpeakerChange = _ref.onActiveSpeakerChange;\n  var daily = useDaily();\n  var recentActiveId = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(activeIdState);\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(''),\n    activeId = _useState[0],\n    setActiveId = _useState[1];\n  var activeParticipant = useParticipant(activeId);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    var _daily$participants;\n    if (!daily) return;\n    var local = daily == null ? void 0 : (_daily$participants = daily.participants()) == null ? void 0 : _daily$participants.local;\n    if (ignoreLocal && recentActiveId === (local == null ? void 0 : local.session_id)) return;\n    // setting activeId as string to avoid passing null to useParticipant hook\n    setActiveId(recentActiveId != null ? recentActiveId : '');\n  }, [daily, ignoreLocal, recentActiveId]);\n  useDailyEvent('active-speaker-change', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onActiveSpeakerChange == null ? void 0 : onActiveSpeakerChange(ev);\n  }, [onActiveSpeakerChange]));\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(activeParticipant);\n  return activeParticipant;\n};\n\n/**\r\n * React hook to setup [app-message](https://docs.daily.co/reference/daily-js/events/participant-events#app-message) listeners and\r\n * to send messages via [sendAppMessage](https://docs.daily.co/reference/daily-js/instance-methods/send-app-message).\r\n */\nvar useAppMessage = function useAppMessage(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    onAppMessage = _ref.onAppMessage;\n  var daily = useDaily();\n  var sendAppMessage = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (data, to) {\n    if (to === void 0) {\n      to = '*';\n    }\n    if (!daily) return;\n    daily.sendAppMessage(data, to);\n  }, [daily]);\n  var handleAppMessage = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onAppMessage == null ? void 0 : onAppMessage(ev, sendAppMessage);\n  }, [onAppMessage, sendAppMessage]);\n  useDailyEvent('app-message', handleAppMessage);\n  return sendAppMessage;\n};\n\nvar audioLevelProcessor = \"\\n    class AudioLevelProcessor extends AudioWorkletProcessor {\\n    volume;\\n    interval;\\n    nextFrame;\\n    \\n    constructor() {\\n      super();\\n      this.volume = 0;\\n      this.interval = 25;\\n      this.nextFrame = this.interval;\\n    }\\n    \\n    get intervalInFrames() {\\n      // sampleRate is globally defined in AudioWorklets.\\n      // See https://developer.mozilla.org/en-US/docs/Web/API/AudioWorkletGlobalScope\\n      // eslint-disable-next-line no-undef\\n      return (this.interval / 1000) * sampleRate;\\n    }\\n    \\n    process(inputList) {\\n      const firstInput = inputList[0];\\n    \\n      if (firstInput.length > 0) {\\n        const inputData = firstInput[0];\\n        let total = 0;\\n    \\n        for (let i = 0; i < inputData.length; ++i) {\\n          total += Math.abs(inputData[i]);\\n        }\\n    \\n        const rms = Math.sqrt(total / inputData.length);\\n        this.volume = Math.max(0, Math.min(1, rms));\\n    \\n        this.nextFrame -= inputData.length;\\n        if (this.nextFrame < 0) {\\n          this.nextFrame += this.intervalInFrames;\\n          this.port.postMessage({ volume: this.volume });\\n        }\\n      }\\n    \\n      return true;\\n    }\\n    }\\n    \\n    registerProcessor('audiolevel', AudioLevelProcessor);              \\n\";\nvar inlineAudioWorklet = \"data:application/javascript;charset=utf8,\" + /*#__PURE__*/encodeURIComponent(audioLevelProcessor);\n\n/**\r\n * Returns the volume level of a given MediaStreamTrack.\r\n * @param mediaTrack The MediaStreamTrack to be analysed.\r\n * @param onVolumeChange The function to execute when the volume changes. Can be used to visualise audio output.\r\n * @deprecated Use useAudioLevelObserver() instead.\r\n */\nvar useAudioLevel = function useAudioLevel(mediaTrack, onVolumeChange) {\n  var audioCtx = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function setupStreamAndStartProcessing() {\n    // No mediaTrack. Stop immediately.\n    if (!mediaTrack) return;\n    var AudioCtx = typeof AudioContext !== 'undefined' ? AudioContext : typeof window.webkitAudioContext !== 'undefined' ? window.webkitAudioContext : null;\n    // No AudioContext available in browser. Can't measure audio volume.\n    if (!AudioCtx) return;\n    if (!audioCtx.current) {\n      // No audio context initialized. Initializing now.\n      audioCtx.current = new AudioCtx();\n    }\n    var audioContext = audioCtx.current;\n    // Audio context could not be initialized. Stopping.\n    if (!audioContext) return;\n    // No MediaStream API available (e.g. WebRTC disabled)\n    if (!MediaStream) return;\n    var mediaStreamSource = audioContext.createMediaStreamSource(new MediaStream([mediaTrack]));\n    var node;\n    var gainNode;\n    var startProcessing = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* () {\n        /**\r\n         * Try to add the module only once.\r\n         * In case it's not added to the audio context, yet, trying to initialize it will fail.\r\n         * There's only one real reason for `new AudioWorkletNode` to fail and that is\r\n         * when the corresponding module isn't added to the audio context, yet.\r\n         * This makes sure we only add the module once.\r\n         *\r\n         * We're inlining the worklet instead of loading it via a URL as not to complicate bundling\r\n         * this package.\r\n         */\n        try {\n          node = new AudioWorkletNode(audioContext, 'audiolevel');\n          gainNode = audioContext.createGain();\n        } catch (_unused) {\n          try {\n            yield audioContext.audioWorklet.addModule(inlineAudioWorklet);\n            node = new AudioWorkletNode(audioContext, 'audiolevel');\n            gainNode = audioContext.createGain();\n          } catch (e) {\n            console.error(e);\n          }\n        }\n        if (!(node && gainNode)) return;\n        node.port.onmessage = function (event) {\n          var volume = 0;\n          if (event.data.volume) volume = event.data.volume;\n          if (!node) return;\n          onVolumeChange(volume);\n        };\n        gainNode.gain.value = 0;\n        try {\n          mediaStreamSource.connect(node).connect(gainNode).connect(audioContext.destination);\n        } catch (e) {\n          console.warn(e);\n        }\n      });\n      return function startProcessing() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    startProcessing();\n    return function () {\n      var _node;\n      (_node = node) == null ? void 0 : _node.disconnect();\n      node = null;\n      mediaStreamSource == null ? void 0 : mediaStreamSource.disconnect();\n    };\n  }, [onVolumeChange, mediaTrack]);\n};\n\n/**\r\n * Observes the volume level for a given participant.\r\n * @param id The session_id of the participant to observe.\r\n * @param cb The function to execute when the volume changes. Can be used to visualise audio output.\r\n * @param errorCb Error callback. Called when local audio level observer is not available in browser.\r\n */\nvar useAudioLevelObserver = function useAudioLevelObserver(id, cb, errorCb) {\n  var daily = useDaily();\n  var localSessionId = useLocalSessionId();\n  var isLocal = id === localSessionId;\n  useDailyEvent('local-audio-level', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    if (!isLocal) return;\n    cb(ev.audioLevel);\n  }, [cb, isLocal]));\n  useDailyEvent('remote-participants-audio-level', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    if (isLocal) return;\n    cb(ev.participantsAudioLevel[id]);\n  }, [cb, id, isLocal]));\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function maybeStartLocalAudioObserver() {\n    if (!daily || daily.isDestroyed() || !isLocal) return;\n    if (daily.isLocalAudioLevelObserverRunning()) return;\n    try {\n      daily.startLocalAudioLevelObserver();\n    } catch (_unused) {\n      errorCb == null ? void 0 : errorCb('Local audio level observer not supported in this browser');\n    }\n  }, [daily, errorCb, isLocal]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function maybeStartRemoteAudioObserver() {\n    if (!daily || daily.isDestroyed() || isLocal) return;\n    if (daily.isRemoteParticipantsAudioLevelObserverRunning()) return;\n    daily.startRemoteParticipantsAudioLevelObserver();\n  }, [daily, isLocal]);\n};\n\n/**\r\n * Returns a participant's audio track and state.\r\n * @param participantId The participant's session_id.\r\n */\nvar useAudioTrack = function useAudioTrack(participantId) {\n  return useMediaTrack(participantId, 'audio');\n};\n\n/**\r\n * Helper hook to maintain custom callFrame instances in React codebases.\r\n */\nvar useCallFrame = function useCallFrame(props) {\n  return useCallInstance('callFrame', props);\n};\n\nvar CPULoadState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)({\n  state: 'low',\n  reason: 'none'\n});\nCPULoadState.debugLabel = /*#__PURE__*/jotaiDebugLabel('cpu-load');\n/**\r\n * Returns the current CPU load as reported by daily-js [cpu-load-change](https://docs.daily.co/reference/daily-js/events/quality-events#cpu-load-change) events\r\n * and [getCpuLoadStats](https://docs.daily.co/reference/daily-js/instance-methods/get-cpu-load-stats).\r\n */\nvar useCPULoad = function useCPULoad(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    onCPULoadChange = _ref.onCPULoadChange;\n  var cpu = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(CPULoadState);\n  var daily = useDaily();\n  var meetingState = useMeetingState();\n  var updateCPULoadState = (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (get, set, cpu) {\n    var prev = get(CPULoadState); // Get the current CPU load state\n    if (fast_deep_equal__WEBPACK_IMPORTED_MODULE_3___default()(prev, cpu)) return; // Check if the previous state is equal to the current one\n    set(CPULoadState, cpu); // Update the state if different\n  }, []));\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    var mounted = true;\n    if (!daily || daily.isDestroyed() || meetingState !== 'joined-meeting') return;\n    daily.getCpuLoadStats().then(function (stats) {\n      if (!mounted) return;\n      updateCPULoadState({\n        state: stats.cpuLoadState,\n        reason: stats.cpuLoadStateReason\n      });\n    });\n    return function () {\n      mounted = false;\n    };\n  }, [daily, meetingState, updateCPULoadState]);\n  useDailyEvent('cpu-load-change', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    updateCPULoadState({\n      state: ev.cpuLoadState,\n      reason: ev.cpuLoadStateReason\n    });\n    onCPULoadChange == null ? void 0 : onCPULoadChange(ev);\n  }, [onCPULoadChange, updateCPULoadState]));\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(cpu);\n  return cpu;\n};\n\n/**\r\n * Returns a meeting's last known errors.\r\n */\nvar useDailyError = function useDailyError() {\n  var meetingError = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(meetingErrorState);\n  var nonFatalError = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(nonFatalErrorState);\n  var result = {\n    meetingError: meetingError,\n    nonFatalError: nonFatalError\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\n/**\r\n * This hook allows access to information about the user's devices and their state.\r\n */\nvar useDevices = function useDevices() {\n  var daily = useDaily();\n  var camState = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(generalCameraState);\n  var micState = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(generalMicrophoneState);\n  var camDevices = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(cameraDevicesState);\n  var micDevices = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(microphoneDevicesState);\n  var speakerDevices = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(speakerDevicesState);\n  var cameraError = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(lastCameraErrorState);\n  var _useContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(DailyDevicesContext),\n    refreshDevices = _useContext.refreshDevices;\n  /**\r\n   * Sets video input device to given deviceId.\r\n   */\n  var setCamera = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (deviceId) {\n      yield daily == null ? void 0 : daily.setInputDevicesAsync({\n        audioDeviceId: null,\n        videoDeviceId: deviceId\n      });\n    });\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [daily]);\n  /**\r\n   * Sets audio input device to given deviceId.\r\n   */\n  var setMicrophone = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (deviceId) {\n      yield daily == null ? void 0 : daily.setInputDevicesAsync({\n        audioDeviceId: deviceId,\n        videoDeviceId: null\n      });\n    });\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [daily]);\n  /**\r\n   * Sets audio output device to given deviceId.\r\n   */\n  var setSpeaker = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(function* (deviceId) {\n      yield daily == null ? void 0 : daily.setOutputDeviceAsync({\n        outputDeviceId: deviceId\n      });\n    });\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [daily]);\n  var errorStates = ['blocked', 'in-use', 'not-found', 'constraints-invalid', 'constraints-none-specified', 'undefined-mediadevices', 'unknown'];\n  var result = {\n    /**\r\n     * Most recent error object emitted via [camera-error event](https://docs.daily.co/reference/daily-js/events/meeting-events#camera-error).\r\n     */\n    cameraError: cameraError,\n    /**\r\n     * A list of the user's camera (videoinput) devices. See [MediaDeviceInfo](https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo) for more info.\r\n     */\n    cameras: camDevices,\n    /**\r\n     * The general state for camera access.\r\n     */\n    camState: camState,\n    /**\r\n     * Holds the currently selected camera.\r\n     */\n    currentCam: camDevices.find(function (cam) {\n      return cam.selected;\n    }),\n    /**\r\n     * Holds the currently selected microphone.\r\n     */\n    currentMic: micDevices.find(function (mic) {\n      return mic.selected;\n    }),\n    /**\r\n     * Holds the currently selected speaker.\r\n     */\n    currentSpeaker: speakerDevices.find(function (speaker) {\n      return speaker.selected;\n    }),\n    /**\r\n     * Indicates that there's an issue with camera devices.\r\n     */\n    hasCamError: errorStates.includes(camState),\n    /**\r\n     * Indicates that there's an issue with microphone devices.\r\n     */\n    hasMicError: errorStates.includes(micState),\n    /**\r\n     * A list of the user's microphone (audioinput) devices. See [MediaDeviceInfo](https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo) for more info.\r\n     */\n    microphones: micDevices,\n    /**\r\n     * The general state for microphone access.\r\n     */\n    micState: micState,\n    /**\r\n     * Refreshes the list of devices using [enumerateDevices](https://docs.daily.co/reference/daily-js/instance-methods/enumerate-devices).\r\n     */\n    refreshDevices: refreshDevices,\n    /**\r\n     * Allows to switch to the camera with the specified deviceId. Calls [setInputDevicesAsync](https://docs.daily.co/reference/daily-js/instance-methods/set-input-devices-async) internally.\r\n     */\n    setCamera: setCamera,\n    /**\r\n     * Allows to switch to the microphone with the specified deviceId. Calls [setInputDevicesAsync](https://docs.daily.co/reference/daily-js/instance-methods/set-input-devices-async) internally.\r\n     */\n    setMicrophone: setMicrophone,\n    /**\r\n     * Allows to switch to the speaker with the specified deviceId. Calls [setOutputDevice](https://docs.daily.co/reference/daily-js/instance-methods/set-output-device) internally.\r\n     */\n    setSpeaker: setSpeaker,\n    /**\r\n     * A list of the user's speaker (audiooutput) devices. See [MediaDeviceInfo](https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo) for more info.\r\n     */\n    speakers: speakerDevices\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\nvar inputSettingsState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)(null);\ninputSettingsState.debugLabel = /*#__PURE__*/jotaiDebugLabel('input-settings');\nvar useInputSettings = function useInputSettings(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    onError = _ref.onError,\n    onInputSettingsUpdated = _ref.onInputSettingsUpdated;\n  var inputSettings = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(inputSettingsState);\n  var _useDailyError = useDailyError(),\n    nonFatalError = _useDailyError.nonFatalError;\n  var daily = useDaily();\n  var updateInputSettingsState = (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, inputSettings) {\n    set(inputSettingsState, inputSettings);\n  }, []));\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (!daily) return;\n    daily.getInputSettings().then(updateInputSettingsState);\n  }, [daily, updateInputSettingsState]);\n  /**\r\n   * Handle 'input-settings-updated' events.\r\n   */\n  useDailyEvent('input-settings-updated', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    updateInputSettingsState(ev.inputSettings);\n    onInputSettingsUpdated == null ? void 0 : onInputSettingsUpdated(ev);\n  }, [onInputSettingsUpdated, updateInputSettingsState]));\n  /**\r\n   * Handle nonfatal errors of type 'input-settings-error'.\r\n   */\n  useDailyEvent('nonfatal-error', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    if (ev.type !== 'input-settings-error') return;\n    onError == null ? void 0 : onError(ev);\n  }, [onError]));\n  /**\r\n   * Calls daily.updateInputSettings internally.\r\n   */\n  var updateInputSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return daily == null ? void 0 : daily.updateInputSettings.apply(daily, args);\n  }, [daily]);\n  var result = {\n    errorMsg: (nonFatalError == null ? void 0 : nonFatalError.type) === 'input-settings-error' ? nonFatalError.errorMsg : null,\n    inputSettings: inputSettings,\n    updateInputSettings: updateInputSettings\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\n/**\r\n * This hook allows to setup [live streaming events](https://docs.daily.co/reference/daily-js/events/live-streaming-events),\r\n * as well as starting, stopping and updating live streams.\r\n *\r\n * Returns the current live streaming state, incl. the current layout and potential errorMsg.\r\n */\nvar useLiveStreaming = function useLiveStreaming(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    onLiveStreamingError = _ref.onLiveStreamingError,\n    onLiveStreamingStarted = _ref.onLiveStreamingStarted,\n    onLiveStreamingStopped = _ref.onLiveStreamingStopped,\n    onLiveStreamingUpdated = _ref.onLiveStreamingUpdated,\n    onLiveStreamingWarning = _ref.onLiveStreamingWarning;\n  var daily = useDaily();\n  var state = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(liveStreamingState);\n  useDailyEvent('live-streaming-started', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onLiveStreamingStarted == null ? void 0 : onLiveStreamingStarted(ev);\n  }, [onLiveStreamingStarted]));\n  useDailyEvent('live-streaming-stopped', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onLiveStreamingStopped == null ? void 0 : onLiveStreamingStopped(ev);\n  }, [onLiveStreamingStopped]));\n  useDailyEvent('live-streaming-updated', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onLiveStreamingUpdated == null ? void 0 : onLiveStreamingUpdated(ev);\n  }, [onLiveStreamingUpdated]));\n  useDailyEvent('live-streaming-error', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onLiveStreamingError == null ? void 0 : onLiveStreamingError(ev);\n  }, [onLiveStreamingError]));\n  useDailyEvent('nonfatal-error', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    if (ev.type !== 'live-streaming-warning') return;\n    onLiveStreamingWarning == null ? void 0 : onLiveStreamingWarning(ev);\n  }, [onLiveStreamingWarning]));\n  var startLiveStreaming = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    if (!daily) return;\n    daily.startLiveStreaming.apply(daily, arguments);\n  }, [daily]);\n  var stopLiveStreaming = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    if (!daily) return;\n    daily.stopLiveStreaming.apply(daily, arguments);\n  }, [daily]);\n  var updateLiveStreaming = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    if (!daily) return;\n    daily.updateLiveStreaming.apply(daily, arguments);\n  }, [daily]);\n  var result = _extends({}, state, {\n    startLiveStreaming: startLiveStreaming,\n    stopLiveStreaming: stopLiveStreaming,\n    updateLiveStreaming: updateLiveStreaming\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\n/**\r\n * Returns the [participants() object](https://docs.daily.co/reference/daily-js/instance-methods/participants) for the local user.\r\n * @deprecated Use [useLocalSessionId](https://docs.daily.co/reference/daily-react/use-local-session-id) instead.\r\n */\nvar useLocalParticipant = function useLocalParticipant() {\n  var localId = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(localIdState);\n  var localParticipant = useParticipant(localId);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(localParticipant);\n  return localParticipant;\n};\n\n/**\r\n * Returns a meeting's current session data and topology.\r\n */\nvar useMeetingSessionState = function useMeetingSessionState(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    onError = _ref.onError;\n  var meetingSessionState = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(meetingSessionDataState);\n  useDailyEvent('nonfatal-error', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    if (ev.type !== 'meeting-session-data-error') return;\n    onError == null ? void 0 : onError(ev);\n  }, [onError]));\n  var result = {\n    data: meetingSessionState == null ? void 0 : meetingSessionState.data,\n    topology: meetingSessionState == null ? void 0 : meetingSessionState.topology\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\n/**\r\n * Returns current information about network quality and topology.\r\n * Allows to setup event listeners for daily's [network events](https://docs.daily.co/reference/daily-js/events/network-events).\r\n */\nvar useNetwork = function useNetwork(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    onNetworkConnection = _ref.onNetworkConnection,\n    onNetworkQualityChange = _ref.onNetworkQualityChange;\n  var daily = useDaily();\n  var topology = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(topologyState);\n  var quality = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(networkQualityState);\n  var threshold = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(networkThresholdState);\n  useDailyEvent('network-connection', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onNetworkConnection == null ? void 0 : onNetworkConnection(ev);\n  }, [onNetworkConnection]));\n  useDailyEvent('network-quality-change', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onNetworkQualityChange == null ? void 0 : onNetworkQualityChange(ev);\n  }, [onNetworkQualityChange]));\n  var getStats = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)( /*#__PURE__*/_asyncToGenerator(function* () {\n    var newStats = yield daily == null ? void 0 : daily.getNetworkStats();\n    return newStats == null ? void 0 : newStats.stats;\n  }), [daily]);\n  var result = {\n    getStats: getStats,\n    quality: quality,\n    threshold: threshold,\n    topology: topology\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\nvar participantCountsState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)({\n  hidden: 0,\n  present: 0\n});\nparticipantCountsState.debugLabel = /*#__PURE__*/jotaiDebugLabel('participant-counts');\n/**\r\n * Returns participant counts for hidden and present participants.\r\n */\nvar useParticipantCounts = function useParticipantCounts(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    onParticipantCountsUpdated = _ref.onParticipantCountsUpdated;\n  var daily = useDaily();\n  var participantCounts = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(participantCountsState);\n  var updateCounts = (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, counts) {\n    set(participantCountsState, counts);\n  }, []));\n  useDailyEvent('participant-counts-updated', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    updateCounts(ev.participantCounts);\n    onParticipantCountsUpdated == null ? void 0 : onParticipantCountsUpdated(ev);\n  }, [onParticipantCountsUpdated, updateCounts]));\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (!daily || daily.isDestroyed()) return;\n    updateCounts(daily.participantCounts());\n  }, [daily, updateCounts]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(participantCounts);\n  return participantCounts;\n};\n\n/**\r\n * Returns parsed permissions for a given participant.\r\n * In case no `sessionId` is passed, the hook returns permissions for the local participant.\r\n * @param sessionId The participant's session_id (optional)\r\n */\nvar usePermissions = function usePermissions(sessionId) {\n  var _permissions$canSend, _permissions$canSend2, _permissions$canSend3, _permissions$canSend4, _permissions$canSend5, _permissions$canSend6, _permissions$canAdmin, _permissions$canAdmin2, _permissions$canAdmin3;\n  var localSessionId = useLocalSessionId();\n  var permissions = useParticipantProperty(sessionId != null ? sessionId : localSessionId, 'permissions');\n  var canSendAudio = typeof (permissions == null ? void 0 : permissions.canSend) === 'boolean' ? permissions == null ? void 0 : permissions.canSend : Boolean(permissions == null ? void 0 : (_permissions$canSend = permissions.canSend) == null ? void 0 : _permissions$canSend.has('audio'));\n  var canSendVideo = typeof (permissions == null ? void 0 : permissions.canSend) === 'boolean' ? permissions == null ? void 0 : permissions.canSend : Boolean(permissions == null ? void 0 : (_permissions$canSend2 = permissions.canSend) == null ? void 0 : _permissions$canSend2.has('video'));\n  var canSendCustomAudio = typeof (permissions == null ? void 0 : permissions.canSend) === 'boolean' ? permissions == null ? void 0 : permissions.canSend : Boolean(permissions == null ? void 0 : (_permissions$canSend3 = permissions.canSend) == null ? void 0 : _permissions$canSend3.has('customAudio'));\n  var canSendCustomVideo = typeof (permissions == null ? void 0 : permissions.canSend) === 'boolean' ? permissions == null ? void 0 : permissions.canSend : Boolean(permissions == null ? void 0 : (_permissions$canSend4 = permissions.canSend) == null ? void 0 : _permissions$canSend4.has('customVideo'));\n  var canSendScreenAudio = typeof (permissions == null ? void 0 : permissions.canSend) === 'boolean' ? permissions == null ? void 0 : permissions.canSend : Boolean(permissions == null ? void 0 : (_permissions$canSend5 = permissions.canSend) == null ? void 0 : _permissions$canSend5.has('screenAudio'));\n  var canSendScreenVideo = typeof (permissions == null ? void 0 : permissions.canSend) === 'boolean' ? permissions == null ? void 0 : permissions.canSend : Boolean(permissions == null ? void 0 : (_permissions$canSend6 = permissions.canSend) == null ? void 0 : _permissions$canSend6.has('screenVideo'));\n  var canAdminParticipants = typeof (permissions == null ? void 0 : permissions.canAdmin) === 'boolean' ? permissions == null ? void 0 : permissions.canAdmin : Boolean(permissions == null ? void 0 : (_permissions$canAdmin = permissions.canAdmin) == null ? void 0 : _permissions$canAdmin.has('participants'));\n  var canAdminStreaming = typeof (permissions == null ? void 0 : permissions.canAdmin) === 'boolean' ? permissions == null ? void 0 : permissions.canAdmin : Boolean(permissions == null ? void 0 : (_permissions$canAdmin2 = permissions.canAdmin) == null ? void 0 : _permissions$canAdmin2.has('streaming'));\n  var canAdminTranscription = typeof (permissions == null ? void 0 : permissions.canAdmin) === 'boolean' ? permissions == null ? void 0 : permissions.canAdmin : Boolean(permissions == null ? void 0 : (_permissions$canAdmin3 = permissions.canAdmin) == null ? void 0 : _permissions$canAdmin3.has('transcription'));\n  var result = {\n    canAdminParticipants: canAdminParticipants,\n    canAdminStreaming: canAdminStreaming,\n    canAdminTranscription: canAdminTranscription,\n    canSendAudio: canSendAudio,\n    canSendCustomAudio: canSendCustomAudio,\n    canSendCustomVideo: canSendCustomVideo,\n    canSendScreenAudio: canSendScreenAudio,\n    canSendScreenVideo: canSendScreenVideo,\n    canSendVideo: canSendVideo,\n    hasPresence: permissions == null ? void 0 : permissions.hasPresence,\n    permissions: permissions\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\nvar participantReceiveSettingsState = /*#__PURE__*/(0,jotai_utils__WEBPACK_IMPORTED_MODULE_5__.atomFamily)(function (id) {\n  var participantReceiveSettingsAtom = (0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)({}, function (_get, set, newValue) {\n    set(participantReceiveSettingsState(id), newValue);\n  });\n  participantReceiveSettingsAtom.debugLabel = jotaiDebugLabel(\"participant-receive-settings-\" + id);\n  return participantReceiveSettingsAtom;\n});\n/**\r\n * Allows to read and set receiveSettings.\r\n * In case receiveSettings for participant specified by id are empty, not set or 'inherit',\r\n * base receiveSettings will be returned.\r\n * In case meeting is not in joined state, calls to updateReceiveSettings will be silently ignored.\r\n */\nvar useReceiveSettings = function useReceiveSettings(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    _ref$id = _ref.id,\n    id = _ref$id === void 0 ? 'base' : _ref$id,\n    onReceiveSettingsUpdated = _ref.onReceiveSettingsUpdated;\n  var _useAtom = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtom)(participantReceiveSettingsState('base')),\n    baseSettings = _useAtom[0];\n  var _useAtom2 = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtom)(participantReceiveSettingsState(id)),\n    receiveSettings = _useAtom2[0];\n  var daily = useDaily();\n  var meetingState = useMeetingState();\n  var updateReceiveSettingsState = (0,jotai_utils__WEBPACK_IMPORTED_MODULE_7__.useAtomCallback)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (_get, set, receiveSettings) {\n    var ids = _extends({}, receiveSettings);\n    for (var _i = 0, _Object$entries = Object.entries(ids); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _Object$entries[_i],\n        _id = _Object$entries$_i[0],\n        settings = _Object$entries$_i[1];\n      set(participantReceiveSettingsState(_id), settings);\n    }\n    if (!(id in ids)) {\n      participantReceiveSettingsState.remove(id);\n    }\n  }, [id] // Dependencies\n  ));\n\n  useDailyEvent('receive-settings-updated', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    updateReceiveSettingsState(ev.receiveSettings);\n    onReceiveSettingsUpdated == null ? void 0 : onReceiveSettingsUpdated(ev);\n  }, [onReceiveSettingsUpdated, updateReceiveSettingsState]));\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (!daily || daily.isDestroyed()) return;\n    daily.getReceiveSettings().then(updateReceiveSettingsState);\n  }, [daily, updateReceiveSettingsState]);\n  var updateReceiveSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    if (!daily || meetingState !== 'joined-meeting') return;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    daily == null ? void 0 : daily.updateReceiveSettings == null ? void 0 : daily.updateReceiveSettings.apply(daily, args);\n  }, [daily, meetingState]);\n  var result = {\n    receiveSettings: id === 'base' || Object.keys(receiveSettings).length === 0 ? baseSettings : receiveSettings,\n    updateReceiveSettings: updateReceiveSettings\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\nvar useRecording = function useRecording(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    onRecordingData = _ref.onRecordingData,\n    onRecordingError = _ref.onRecordingError,\n    onRecordingStarted = _ref.onRecordingStarted,\n    onRecordingStopped = _ref.onRecordingStopped;\n  var daily = useDaily();\n  var state = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(recordingState);\n  useDailyEvent('recording-started', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onRecordingStarted == null ? void 0 : onRecordingStarted(ev);\n  }, [onRecordingStarted]));\n  useDailyEvent('recording-stopped', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onRecordingStopped == null ? void 0 : onRecordingStopped(ev);\n  }, [onRecordingStopped]));\n  useDailyEvent('recording-error', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onRecordingError == null ? void 0 : onRecordingError(ev);\n  }, [onRecordingError]));\n  useDailyEvent('recording-data', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onRecordingData == null ? void 0 : onRecordingData(ev);\n  }, [onRecordingData]));\n  /**\r\n   * Starts the recording with the given optional options.\r\n   */\n  var startRecording = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    if (!daily) return;\n    daily.startRecording.apply(daily, arguments);\n  }, [daily]);\n  /**\r\n   * Stops a recording.\r\n   */\n  var stopRecording = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    if (!daily) return;\n    daily.stopRecording.apply(daily, arguments);\n  }, [daily]);\n  /**\r\n   * Updates a running recording's layout configuration.\r\n   */\n  var updateRecording = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    if (!daily) return;\n    daily.updateRecording.apply(daily, arguments);\n  }, [daily]);\n  var result = _extends({}, state, {\n    startRecording: startRecording,\n    stopRecording: stopRecording,\n    updateRecording: updateRecording\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\n/**\r\n * Stateful hook to work with room, domain and token configuration for a daily room.\r\n * Includes room default values.\r\n */\nvar useRoom = function useRoom() {\n  var room = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(roomState);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(room);\n  return room;\n};\n\nvar useRoomExp = function useRoomExp(_temp) {\n  var _room$config4, _room$config5, _room$config6, _room$tokenConfig4, _room$tokenConfig5, _room$tokenConfig6;\n  var _ref = _temp === void 0 ? {} : _temp,\n    onCountdown = _ref.onCountdown;\n  var localJoinDate = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(localJoinDateState);\n  var room = useRoom();\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),\n    ejectDate = _useState[0],\n    setEjectDate = _useState[1];\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    var _ref2, _room$tokenConfig$eje, _room$tokenConfig, _room$config, _room$tokenConfig2, _room$tokenConfig3, _room$config2, _room$config3;\n    var expCandidates = [];\n    var ejectAfterElapsed = (_ref2 = (_room$tokenConfig$eje = room == null ? void 0 : (_room$tokenConfig = room.tokenConfig) == null ? void 0 : _room$tokenConfig.eject_after_elapsed) != null ? _room$tokenConfig$eje : room == null ? void 0 : (_room$config = room.config) == null ? void 0 : _room$config.eject_after_elapsed) != null ? _ref2 : 0;\n    if (ejectAfterElapsed && localJoinDate) {\n      expCandidates.push(localJoinDate.getTime() + 1000 * ejectAfterElapsed);\n    }\n    if (room != null && (_room$tokenConfig2 = room.tokenConfig) != null && _room$tokenConfig2.exp && room != null && (_room$tokenConfig3 = room.tokenConfig) != null && _room$tokenConfig3.eject_at_token_exp) {\n      expCandidates.push(room.tokenConfig.exp * 1000);\n    }\n    if (room != null && (_room$config2 = room.config) != null && _room$config2.exp && room != null && (_room$config3 = room.config) != null && _room$config3.eject_at_room_exp) {\n      expCandidates.push(room.config.exp * 1000);\n    }\n    var newEjectDate = expCandidates.length > 0 ? new Date(Math.min.apply(Math, expCandidates)) : new Date(0);\n    if (newEjectDate.getTime() === 0) return;\n    setEjectDate(function (oldEjectDate) {\n      return (oldEjectDate == null ? void 0 : oldEjectDate.getTime()) !== newEjectDate.getTime() ? newEjectDate : oldEjectDate;\n    });\n  }, [localJoinDate, room == null ? void 0 : (_room$config4 = room.config) == null ? void 0 : _room$config4.eject_after_elapsed, room == null ? void 0 : (_room$config5 = room.config) == null ? void 0 : _room$config5.eject_at_room_exp, room == null ? void 0 : (_room$config6 = room.config) == null ? void 0 : _room$config6.exp, room == null ? void 0 : (_room$tokenConfig4 = room.tokenConfig) == null ? void 0 : _room$tokenConfig4.eject_after_elapsed, room == null ? void 0 : (_room$tokenConfig5 = room.tokenConfig) == null ? void 0 : _room$tokenConfig5.eject_at_token_exp, room == null ? void 0 : (_room$tokenConfig6 = room.tokenConfig) == null ? void 0 : _room$tokenConfig6.exp]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (!ejectDate || ejectDate.getTime() === 0) return;\n    var interval = setInterval(function () {\n      var _ejectDate$getTime;\n      var eject = ((_ejectDate$getTime = ejectDate == null ? void 0 : ejectDate.getTime()) != null ? _ejectDate$getTime : 0) / 1000;\n      var now = Date.now() / 1000;\n      var diff = eject - now;\n      if (diff < 0) return;\n      var hours = Math.max(0, Math.floor(diff / 3600));\n      var minutes = Math.max(0, Math.floor(diff % 3600 / 60));\n      var seconds = Math.max(0, Math.floor(diff % 60));\n      onCountdown == null ? void 0 : onCountdown({\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds\n      });\n    }, 1000);\n    return function () {\n      clearInterval(interval);\n    };\n  }, [ejectDate, onCountdown]);\n  var result = {\n    ejectDate: ejectDate\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\n/**\r\n * Returns a participant's screenAudio track and state.\r\n * @param participantId The participant's session_id.\r\n */\nvar useScreenAudioTrack = function useScreenAudioTrack(participantId) {\n  return useMediaTrack(participantId, 'screenAudio');\n};\n\n/**\r\n * Returns a participant's screenVideo track and state.\r\n * @param participantId The participant's session_id.\r\n */\nvar useScreenVideoTrack = function useScreenVideoTrack(participantId) {\n  return useMediaTrack(participantId, 'screenVideo');\n};\n\nvar sendSettingsState = /*#__PURE__*/(0,jotai__WEBPACK_IMPORTED_MODULE_4__.atom)(null);\nsendSettingsState.debugLabel = /*#__PURE__*/jotaiDebugLabel('send-settings');\n/**\r\n * Returns the current media send settings and an updater function to change the settings.\r\n */\nvar useSendSettings = function useSendSettings(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    onSendSettingsUpdated = _ref.onSendSettingsUpdated;\n  var daily = useDaily();\n  var _useAtom = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtom)(sendSettingsState),\n    sendSettings = _useAtom[0],\n    setSendSettings = _useAtom[1];\n  useDailyEvent('send-settings-updated', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    setSendSettings(ev.sendSettings);\n    onSendSettingsUpdated == null ? void 0 : onSendSettingsUpdated(ev);\n  }, [onSendSettingsUpdated, setSendSettings]));\n  var storeSendSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (sendSettings) {\n    setSendSettings(sendSettings);\n  }, [setSendSettings]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (!daily || daily.isDestroyed()) return;\n    storeSendSettings(daily.getSendSettings());\n  }, [daily, storeSendSettings]);\n  /**\r\n   * Updates the local clients send settings.\r\n   * See https://docs.daily.co/reference/daily-js/instance-methods/update-send-settings for details.\r\n   */\n  var updateSendSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)( /*#__PURE__*/_asyncToGenerator(function* () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var newSendSettings = yield daily == null ? void 0 : daily.updateSendSettings.apply(daily, args);\n    if (!newSendSettings) return;\n    storeSendSettings(newSendSettings);\n    return newSendSettings;\n  }), [daily, storeSendSettings]);\n  var result = {\n    sendSettings: sendSettings,\n    updateSendSettings: updateSendSettings\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\nvar useTranscription = function useTranscription(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    onTranscriptionAppData = _ref.onTranscriptionAppData,\n    onTranscriptionError = _ref.onTranscriptionError,\n    onTranscriptionMessage = _ref.onTranscriptionMessage,\n    onTranscriptionStarted = _ref.onTranscriptionStarted,\n    onTranscriptionStopped = _ref.onTranscriptionStopped;\n  var daily = useDaily();\n  var state = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(transcriptionState);\n  useDailyEvent('transcription-started', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onTranscriptionStarted == null ? void 0 : onTranscriptionStarted(ev);\n  }, [onTranscriptionStarted]));\n  useDailyEvent('transcription-stopped', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onTranscriptionStopped == null ? void 0 : onTranscriptionStopped(ev);\n  }, [onTranscriptionStopped]));\n  useDailyEvent('transcription-error', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onTranscriptionError == null ? void 0 : onTranscriptionError(ev);\n  }, [onTranscriptionError]));\n  useDailyEvent('transcription-message', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onTranscriptionMessage == null ? void 0 : onTranscriptionMessage(ev);\n  }, [onTranscriptionMessage]));\n  useDailyEvent('app-message', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    if ((ev == null ? void 0 : ev.fromId) === 'transcription') {\n      onTranscriptionAppData == null ? void 0 : onTranscriptionAppData(ev);\n    }\n  }, [onTranscriptionAppData]));\n  /**\r\n   * Starts the transcription with the given optional options.\r\n   */\n  var startTranscription = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    if (!daily) return;\n    daily.startTranscription.apply(daily, arguments);\n  }, [daily]);\n  /**\r\n   * Stops a transcription.\r\n   */\n  var stopTranscription = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    if (!daily) return;\n    daily.stopTranscription.apply(daily, arguments);\n  }, [daily]);\n  var result = _extends({}, state, {\n    startTranscription: startTranscription,\n    stopTranscription: stopTranscription\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\n/**\r\n * Returns a participant's video track and state.\r\n * @param participantId The participant's session_id.\r\n */\nvar useVideoTrack = function useVideoTrack(participantId) {\n  return useMediaTrack(participantId, 'video');\n};\n\n/**\r\n * Hook to access and manage waiting participants.\r\n */\nvar useWaitingParticipants = function useWaitingParticipants(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    onWaitingParticipantAdded = _ref.onWaitingParticipantAdded,\n    onWaitingParticipantRemoved = _ref.onWaitingParticipantRemoved,\n    onWaitingParticipantUpdated = _ref.onWaitingParticipantUpdated;\n  var daily = useDaily();\n  var waitingParticipants = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtomValue)(allWaitingParticipantsSelector(undefined));\n  useDailyEvent('waiting-participant-added', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onWaitingParticipantAdded == null ? void 0 : onWaitingParticipantAdded(ev);\n  }, [onWaitingParticipantAdded]));\n  useDailyEvent('waiting-participant-removed', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onWaitingParticipantRemoved == null ? void 0 : onWaitingParticipantRemoved(ev);\n  }, [onWaitingParticipantRemoved]));\n  useDailyEvent('waiting-participant-updated', (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (ev) {\n    onWaitingParticipantUpdated == null ? void 0 : onWaitingParticipantUpdated(ev);\n  }, [onWaitingParticipantUpdated]));\n  var updateWaitingParticipantAccess = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (id, grantRequestedAccess) {\n    if (id === '*') {\n      daily == null ? void 0 : daily.updateWaitingParticipants({\n        '*': {\n          grantRequestedAccess: grantRequestedAccess\n        }\n      });\n      return;\n    }\n    daily == null ? void 0 : daily.updateWaitingParticipant(id, {\n      grantRequestedAccess: grantRequestedAccess\n    });\n  }, [daily]);\n  var grantAccess = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (id) {\n    updateWaitingParticipantAccess(id, true);\n  }, [updateWaitingParticipantAccess]);\n  var denyAccess = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (id) {\n    updateWaitingParticipantAccess(id, false);\n  }, [updateWaitingParticipantAccess]);\n  var result = {\n    waitingParticipants: waitingParticipants,\n    grantAccess: grantAccess,\n    denyAccess: denyAccess\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(result);\n  return result;\n};\n\n\n//# sourceMappingURL=daily-react.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@daily-co/daily-react/dist/daily-react.esm.js\n");

/***/ })

};
;